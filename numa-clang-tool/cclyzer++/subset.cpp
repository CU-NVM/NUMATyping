
#include "souffle/CompiledSouffle.h"

namespace functors {
 extern "C" {
}
}

namespace souffle {
static const RamDomain RAM_BIT_SHIFT_MASK = RAM_DOMAIN_SIZE - 1;
struct t_btree_i__0__1 {
static constexpr Relation::arity_type Arity = 1;
using t_tuple = Tuple<RamDomain, 1>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :(0);
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[1];
std::copy(ramDomain, ramDomain + 1, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0) {
RamDomain data[1] = {a0};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_0(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_0(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_1(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_1(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 1 direct b-tree index 0 lex-order [0]\n";
ind_0.printStats(o);
}
};
struct t_btree_ii__1_0__0__11__10__01 {
static constexpr Relation::arity_type Arity = 2;
using t_tuple = Tuple<RamDomain, 2>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :(0));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
struct t_comparator_1{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :(0);
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]));
 }
};
using t_ind_1 = btree_multiset<t_tuple,t_comparator_1>;
t_ind_1 ind_1;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
t_ind_1::operation_hints hints_1_lower;
t_ind_1::operation_hints hints_1_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
ind_1.insert(t, h.hints_1_lower);
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[2];
std::copy(ramDomain, ramDomain + 2, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1) {
RamDomain data[2] = {a0,a1};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_00(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_00(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_11(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_11(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_11(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_10(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_10(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_10(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_01(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_01(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_01(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
ind_1.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 2 direct b-tree index 0 lex-order [1,0]\n";
ind_0.printStats(o);
o << " arity 2 direct b-tree index 1 lex-order [0]\n";
ind_1.printStats(o);
}
};
struct t_btree_ii__0_1__11__10 {
static constexpr Relation::arity_type Arity = 2;
using t_tuple = Tuple<RamDomain, 2>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :(0));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[2];
std::copy(ramDomain, ramDomain + 2, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1) {
RamDomain data[2] = {a0,a1};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_00(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_00(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_11(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_11(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_11(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_10(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_10(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_10(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 2 direct b-tree index 0 lex-order [0,1]\n";
ind_0.printStats(o);
}
};
struct t_btree_i__0__2__1 {
static constexpr Relation::arity_type Arity = 1;
using t_tuple = Tuple<RamDomain, 1>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :(0);
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[1];
std::copy(ramDomain, ramDomain + 1, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0) {
RamDomain data[1] = {a0};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_0(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_0(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_2(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_2(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_2(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_1(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_1(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 1 direct b-tree index 0 lex-order [0]\n";
ind_0.printStats(o);
}
};
struct t_btree_ii__0_1__11 {
static constexpr Relation::arity_type Arity = 2;
using t_tuple = Tuple<RamDomain, 2>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :(0));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[2];
std::copy(ramDomain, ramDomain + 2, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1) {
RamDomain data[2] = {a0,a1};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_00(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_00(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_11(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_11(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_11(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 2 direct b-tree index 0 lex-order [0,1]\n";
ind_0.printStats(o);
}
};
struct t_btree_iii__1__0_1_2__010__100__110__111 {
static constexpr Relation::arity_type Arity = 3;
using t_tuple = Tuple<RamDomain, 3>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :(0);
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]));
 }
};
using t_ind_0 = btree_multiset<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
struct t_comparator_1{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]));
 }
};
using t_ind_1 = btree_set<t_tuple,t_comparator_1>;
t_ind_1 ind_1;
using iterator = t_ind_1::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
t_ind_1::operation_hints hints_1_lower;
t_ind_1::operation_hints hints_1_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_1.insert(t, h.hints_1_lower)) {
ind_0.insert(t, h.hints_0_lower);
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[3];
std::copy(ramDomain, ramDomain + 3, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2) {
RamDomain data[3] = {a0,a1,a2};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_1.contains(t, h.hints_1_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_1.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_1.find(t, h.hints_1_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_1.begin(),ind_1.end());
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_1.begin(),ind_1.end());
}
range<t_ind_0::iterator> lowerUpperRange_010(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_010(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_010(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_100(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_100(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_100(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_110(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_1.find(lower, h.hints_1_lower);
    auto fin = ind_1.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111(lower,upper,h);
}
bool empty() const {
return ind_1.empty();
}
std::vector<range<iterator>> partition() const {
return ind_1.getChunks(400);
}
void purge() {
ind_0.clear();
ind_1.clear();
}
iterator begin() const {
return ind_1.begin();
}
iterator end() const {
return ind_1.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 3 direct b-tree index 0 lex-order [1]\n";
ind_0.printStats(o);
o << " arity 3 direct b-tree index 1 lex-order [0,1,2]\n";
ind_1.printStats(o);
}
};
struct t_btree_iii__0_1_2__110__111 {
static constexpr Relation::arity_type Arity = 3;
using t_tuple = Tuple<RamDomain, 3>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[3];
std::copy(ramDomain, ramDomain + 3, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2) {
RamDomain data[3] = {a0,a1,a2};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_110(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 3 direct b-tree index 0 lex-order [0,1,2]\n";
ind_0.printStats(o);
}
};
struct t_btree_iii__0_1_2__111 {
static constexpr Relation::arity_type Arity = 3;
using t_tuple = Tuple<RamDomain, 3>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[3];
std::copy(ramDomain, ramDomain + 3, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2) {
RamDomain data[3] = {a0,a1,a2};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 3 direct b-tree index 0 lex-order [0,1,2]\n";
ind_0.printStats(o);
}
};
struct t_btree_iii__1_2_0__011__111 {
static constexpr Relation::arity_type Arity = 3;
using t_tuple = Tuple<RamDomain, 3>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[3];
std::copy(ramDomain, ramDomain + 3, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2) {
RamDomain data[3] = {a0,a1,a2};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_011(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_011(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_011(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 3 direct b-tree index 0 lex-order [1,2,0]\n";
ind_0.printStats(o);
}
};
struct t_btree_iii__1_2__0_2_1__011__101__111 {
static constexpr Relation::arity_type Arity = 3;
using t_tuple = Tuple<RamDomain, 3>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :(0));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]));
 }
};
using t_ind_0 = btree_multiset<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
struct t_comparator_1{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]));
 }
};
using t_ind_1 = btree_set<t_tuple,t_comparator_1>;
t_ind_1 ind_1;
using iterator = t_ind_1::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
t_ind_1::operation_hints hints_1_lower;
t_ind_1::operation_hints hints_1_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_1.insert(t, h.hints_1_lower)) {
ind_0.insert(t, h.hints_0_lower);
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[3];
std::copy(ramDomain, ramDomain + 3, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2) {
RamDomain data[3] = {a0,a1,a2};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_1.contains(t, h.hints_1_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_1.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_1.find(t, h.hints_1_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_1.begin(),ind_1.end());
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_1.begin(),ind_1.end());
}
range<t_ind_0::iterator> lowerUpperRange_011(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_011(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_011(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_101(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_101(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_101(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_1.find(lower, h.hints_1_lower);
    auto fin = ind_1.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111(lower,upper,h);
}
bool empty() const {
return ind_1.empty();
}
std::vector<range<iterator>> partition() const {
return ind_1.getChunks(400);
}
void purge() {
ind_0.clear();
ind_1.clear();
}
iterator begin() const {
return ind_1.begin();
}
iterator end() const {
return ind_1.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 3 direct b-tree index 0 lex-order [1,2]\n";
ind_0.printStats(o);
o << " arity 3 direct b-tree index 1 lex-order [0,2,1]\n";
ind_1.printStats(o);
}
};
struct t_btree_iii__2_0_1__001__111 {
static constexpr Relation::arity_type Arity = 3;
using t_tuple = Tuple<RamDomain, 3>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[3];
std::copy(ramDomain, ramDomain + 3, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2) {
RamDomain data[3] = {a0,a1,a2};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_001(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_001(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_001(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 3 direct b-tree index 0 lex-order [2,0,1]\n";
ind_0.printStats(o);
}
};
struct t_btree_ii__1_0__11__01 {
static constexpr Relation::arity_type Arity = 2;
using t_tuple = Tuple<RamDomain, 2>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :(0));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[2];
std::copy(ramDomain, ramDomain + 2, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1) {
RamDomain data[2] = {a0,a1};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_00(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_00(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_11(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_11(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_11(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_01(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_01(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_01(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 2 direct b-tree index 0 lex-order [1,0]\n";
ind_0.printStats(o);
}
};
struct t_btree_iii__1_0_2__010__110__111 {
static constexpr Relation::arity_type Arity = 3;
using t_tuple = Tuple<RamDomain, 3>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[3];
std::copy(ramDomain, ramDomain + 3, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2) {
RamDomain data[3] = {a0,a1,a2};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_010(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_010(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_010(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_110(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 3 direct b-tree index 0 lex-order [1,0,2]\n";
ind_0.printStats(o);
}
};
struct t_btree_ii__0_1__11__12__10 {
static constexpr Relation::arity_type Arity = 2;
using t_tuple = Tuple<RamDomain, 2>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :(0));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[2];
std::copy(ramDomain, ramDomain + 2, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1) {
RamDomain data[2] = {a0,a1};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_00(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_00(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_11(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_11(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_11(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_12(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_12(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_12(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_10(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_10(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_10(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 2 direct b-tree index 0 lex-order [0,1]\n";
ind_0.printStats(o);
}
};
struct t_btree_iii__0_1_2__120__110__111 {
static constexpr Relation::arity_type Arity = 3;
using t_tuple = Tuple<RamDomain, 3>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[3];
std::copy(ramDomain, ramDomain + 3, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2) {
RamDomain data[3] = {a0,a1,a2};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_120(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_120(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_120(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_110(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 3 direct b-tree index 0 lex-order [0,1,2]\n";
ind_0.printStats(o);
}
};
struct t_btree_iii__0_1_2__100__111 {
static constexpr Relation::arity_type Arity = 3;
using t_tuple = Tuple<RamDomain, 3>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[3];
std::copy(ramDomain, ramDomain + 3, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2) {
RamDomain data[3] = {a0,a1,a2};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_100(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_100(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_100(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 3 direct b-tree index 0 lex-order [0,1,2]\n";
ind_0.printStats(o);
}
};
struct t_btree_iii__1_0_2__010__111 {
static constexpr Relation::arity_type Arity = 3;
using t_tuple = Tuple<RamDomain, 3>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[3];
std::copy(ramDomain, ramDomain + 3, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2) {
RamDomain data[3] = {a0,a1,a2};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_010(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_010(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_010(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 3 direct b-tree index 0 lex-order [1,0,2]\n";
ind_0.printStats(o);
}
};
struct t_btree_ii__1_0__0_1__11__12__10__01 {
static constexpr Relation::arity_type Arity = 2;
using t_tuple = Tuple<RamDomain, 2>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :(0));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
struct t_comparator_1{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :(0));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]));
 }
};
using t_ind_1 = btree_set<t_tuple,t_comparator_1>;
t_ind_1 ind_1;
using iterator = t_ind_1::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
t_ind_1::operation_hints hints_1_lower;
t_ind_1::operation_hints hints_1_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_1.insert(t, h.hints_1_lower)) {
ind_0.insert(t, h.hints_0_lower);
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[2];
std::copy(ramDomain, ramDomain + 2, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1) {
RamDomain data[2] = {a0,a1};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_1.contains(t, h.hints_1_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_1.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_1.find(t, h.hints_1_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_00(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_1.begin(),ind_1.end());
}
range<iterator> lowerUpperRange_00(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_1.begin(),ind_1.end());
}
range<t_ind_0::iterator> lowerUpperRange_11(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_11(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_11(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_12(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_12(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_12(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_10(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_10(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_10(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_01(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_01(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_01(lower,upper,h);
}
bool empty() const {
return ind_1.empty();
}
std::vector<range<iterator>> partition() const {
return ind_1.getChunks(400);
}
void purge() {
ind_0.clear();
ind_1.clear();
}
iterator begin() const {
return ind_1.begin();
}
iterator end() const {
return ind_1.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 2 direct b-tree index 0 lex-order [1,0]\n";
ind_0.printStats(o);
o << " arity 2 direct b-tree index 1 lex-order [0,1]\n";
ind_1.printStats(o);
}
};
struct t_btree_iii__2__0_1_2__001__110__111 {
static constexpr Relation::arity_type Arity = 3;
using t_tuple = Tuple<RamDomain, 3>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :(0);
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]));
 }
};
using t_ind_0 = btree_multiset<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
struct t_comparator_1{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]));
 }
};
using t_ind_1 = btree_set<t_tuple,t_comparator_1>;
t_ind_1 ind_1;
using iterator = t_ind_1::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
t_ind_1::operation_hints hints_1_lower;
t_ind_1::operation_hints hints_1_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_1.insert(t, h.hints_1_lower)) {
ind_0.insert(t, h.hints_0_lower);
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[3];
std::copy(ramDomain, ramDomain + 3, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2) {
RamDomain data[3] = {a0,a1,a2};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_1.contains(t, h.hints_1_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_1.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_1.find(t, h.hints_1_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_1.begin(),ind_1.end());
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_1.begin(),ind_1.end());
}
range<t_ind_0::iterator> lowerUpperRange_001(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_001(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_001(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_110(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_1.find(lower, h.hints_1_lower);
    auto fin = ind_1.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111(lower,upper,h);
}
bool empty() const {
return ind_1.empty();
}
std::vector<range<iterator>> partition() const {
return ind_1.getChunks(400);
}
void purge() {
ind_0.clear();
ind_1.clear();
}
iterator begin() const {
return ind_1.begin();
}
iterator end() const {
return ind_1.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 3 direct b-tree index 0 lex-order [2]\n";
ind_0.printStats(o);
o << " arity 3 direct b-tree index 1 lex-order [0,1,2]\n";
ind_1.printStats(o);
}
};
struct t_btree_iii__0_1_2__100__110__111 {
static constexpr Relation::arity_type Arity = 3;
using t_tuple = Tuple<RamDomain, 3>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[3];
std::copy(ramDomain, ramDomain + 3, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2) {
RamDomain data[3] = {a0,a1,a2};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_100(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_100(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_100(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_110(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 3 direct b-tree index 0 lex-order [0,1,2]\n";
ind_0.printStats(o);
}
};
struct t_btree_iiii__0_1_2_3__1111 {
static constexpr Relation::arity_type Arity = 4;
using t_tuple = Tuple<RamDomain, 4>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3])) ? -1 : (ramBitCast<RamSigned>(a[3]) > ramBitCast<RamSigned>(b[3])) ? 1 :(0))));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3]))))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[4];
std::copy(ramDomain, ramDomain + 4, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2,RamDomain a3) {
RamDomain data[4] = {a0,a1,a2,a3};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1111(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 4 direct b-tree index 0 lex-order [0,1,2,3]\n";
ind_0.printStats(o);
}
};
struct t_btree_iiii__0_1_2_3__1000__1111 {
static constexpr Relation::arity_type Arity = 4;
using t_tuple = Tuple<RamDomain, 4>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3])) ? -1 : (ramBitCast<RamSigned>(a[3]) > ramBitCast<RamSigned>(b[3])) ? 1 :(0))));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3]))))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[4];
std::copy(ramDomain, ramDomain + 4, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2,RamDomain a3) {
RamDomain data[4] = {a0,a1,a2,a3};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_1000(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_1000(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1000(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1111(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 4 direct b-tree index 0 lex-order [0,1,2,3]\n";
ind_0.printStats(o);
}
};
struct t_btree_iii__0_2__0_1_2__101__110__111 {
static constexpr Relation::arity_type Arity = 3;
using t_tuple = Tuple<RamDomain, 3>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :(0));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]));
 }
};
using t_ind_0 = btree_multiset<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
struct t_comparator_1{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]));
 }
};
using t_ind_1 = btree_set<t_tuple,t_comparator_1>;
t_ind_1 ind_1;
using iterator = t_ind_1::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
t_ind_1::operation_hints hints_1_lower;
t_ind_1::operation_hints hints_1_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_1.insert(t, h.hints_1_lower)) {
ind_0.insert(t, h.hints_0_lower);
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[3];
std::copy(ramDomain, ramDomain + 3, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2) {
RamDomain data[3] = {a0,a1,a2};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_1.contains(t, h.hints_1_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_1.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_1.find(t, h.hints_1_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_1.begin(),ind_1.end());
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_1.begin(),ind_1.end());
}
range<t_ind_0::iterator> lowerUpperRange_101(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_101(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_101(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_110(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_1.find(lower, h.hints_1_lower);
    auto fin = ind_1.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111(lower,upper,h);
}
bool empty() const {
return ind_1.empty();
}
std::vector<range<iterator>> partition() const {
return ind_1.getChunks(400);
}
void purge() {
ind_0.clear();
ind_1.clear();
}
iterator begin() const {
return ind_1.begin();
}
iterator end() const {
return ind_1.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 3 direct b-tree index 0 lex-order [0,2]\n";
ind_0.printStats(o);
o << " arity 3 direct b-tree index 1 lex-order [0,1,2]\n";
ind_1.printStats(o);
}
};
struct t_btree_iii__2_0_1__001__101__111 {
static constexpr Relation::arity_type Arity = 3;
using t_tuple = Tuple<RamDomain, 3>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[3];
std::copy(ramDomain, ramDomain + 3, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2) {
RamDomain data[3] = {a0,a1,a2};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_001(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_001(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_001(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_101(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_101(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_101(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 3 direct b-tree index 0 lex-order [2,0,1]\n";
ind_0.printStats(o);
}
};
struct t_btree_iiii__1_0_2_3__1111__0100 {
static constexpr Relation::arity_type Arity = 4;
using t_tuple = Tuple<RamDomain, 4>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3])) ? -1 : (ramBitCast<RamSigned>(a[3]) > ramBitCast<RamSigned>(b[3])) ? 1 :(0))));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3]))))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[4];
std::copy(ramDomain, ramDomain + 4, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2,RamDomain a3) {
RamDomain data[4] = {a0,a1,a2,a3};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1111(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_0100(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_0100(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_0100(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 4 direct b-tree index 0 lex-order [1,0,2,3]\n";
ind_0.printStats(o);
}
};
struct t_btree_iiii__1_0_2_3__1111__0100__0200 {
static constexpr Relation::arity_type Arity = 4;
using t_tuple = Tuple<RamDomain, 4>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3])) ? -1 : (ramBitCast<RamSigned>(a[3]) > ramBitCast<RamSigned>(b[3])) ? 1 :(0))));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3]))))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[4];
std::copy(ramDomain, ramDomain + 4, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2,RamDomain a3) {
RamDomain data[4] = {a0,a1,a2,a3};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1111(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_0100(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_0100(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_0100(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_0200(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_0200(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_0200(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 4 direct b-tree index 0 lex-order [1,0,2,3]\n";
ind_0.printStats(o);
}
};
struct t_btree_iiii__0_1_2_3__1110__1111 {
static constexpr Relation::arity_type Arity = 4;
using t_tuple = Tuple<RamDomain, 4>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3])) ? -1 : (ramBitCast<RamSigned>(a[3]) > ramBitCast<RamSigned>(b[3])) ? 1 :(0))));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3]))))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[4];
std::copy(ramDomain, ramDomain + 4, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2,RamDomain a3) {
RamDomain data[4] = {a0,a1,a2,a3};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_1110(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_1110(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1110(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1111(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 4 direct b-tree index 0 lex-order [0,1,2,3]\n";
ind_0.printStats(o);
}
};
struct t_btree_iiiiii__0_1__1_0_2_3_4_5__110000__111111__100000__010000 {
static constexpr Relation::arity_type Arity = 6;
using t_tuple = Tuple<RamDomain, 6>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :(0));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]));
 }
};
using t_ind_0 = btree_multiset<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
struct t_comparator_1{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3])) ? -1 : (ramBitCast<RamSigned>(a[3]) > ramBitCast<RamSigned>(b[3])) ? 1 :((ramBitCast<RamSigned>(a[4]) < ramBitCast<RamSigned>(b[4])) ? -1 : (ramBitCast<RamSigned>(a[4]) > ramBitCast<RamSigned>(b[4])) ? 1 :((ramBitCast<RamSigned>(a[5]) < ramBitCast<RamSigned>(b[5])) ? -1 : (ramBitCast<RamSigned>(a[5]) > ramBitCast<RamSigned>(b[5])) ? 1 :(0))))));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3]))|| ((ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3])) && ((ramBitCast<RamSigned>(a[4]) < ramBitCast<RamSigned>(b[4]))|| ((ramBitCast<RamSigned>(a[4]) == ramBitCast<RamSigned>(b[4])) && ((ramBitCast<RamSigned>(a[5]) < ramBitCast<RamSigned>(b[5]))))))))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3]))&&(ramBitCast<RamSigned>(a[4]) == ramBitCast<RamSigned>(b[4]))&&(ramBitCast<RamSigned>(a[5]) == ramBitCast<RamSigned>(b[5]));
 }
};
using t_ind_1 = btree_set<t_tuple,t_comparator_1>;
t_ind_1 ind_1;
using iterator = t_ind_1::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
t_ind_1::operation_hints hints_1_lower;
t_ind_1::operation_hints hints_1_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_1.insert(t, h.hints_1_lower)) {
ind_0.insert(t, h.hints_0_lower);
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[6];
std::copy(ramDomain, ramDomain + 6, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2,RamDomain a3,RamDomain a4,RamDomain a5) {
RamDomain data[6] = {a0,a1,a2,a3,a4,a5};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_1.contains(t, h.hints_1_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_1.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_1.find(t, h.hints_1_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_1.begin(),ind_1.end());
}
range<iterator> lowerUpperRange_000000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_1.begin(),ind_1.end());
}
range<t_ind_0::iterator> lowerUpperRange_110000(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_110000(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_110000(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_111111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_1.find(lower, h.hints_1_lower);
    auto fin = ind_1.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_111111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111111(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_100000(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_100000(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_100000(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_010000(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_010000(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_010000(lower,upper,h);
}
bool empty() const {
return ind_1.empty();
}
std::vector<range<iterator>> partition() const {
return ind_1.getChunks(400);
}
void purge() {
ind_0.clear();
ind_1.clear();
}
iterator begin() const {
return ind_1.begin();
}
iterator end() const {
return ind_1.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 6 direct b-tree index 0 lex-order [0,1]\n";
ind_0.printStats(o);
o << " arity 6 direct b-tree index 1 lex-order [1,0,2,3,4,5]\n";
ind_1.printStats(o);
}
};
struct t_btree_iiiiii__1_0_2__0_3_4_1_2_5__110000__111000__111111__100000__100110__010000 {
static constexpr Relation::arity_type Arity = 6;
using t_tuple = Tuple<RamDomain, 6>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]));
 }
};
using t_ind_0 = btree_multiset<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
struct t_comparator_1{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3])) ? -1 : (ramBitCast<RamSigned>(a[3]) > ramBitCast<RamSigned>(b[3])) ? 1 :((ramBitCast<RamSigned>(a[4]) < ramBitCast<RamSigned>(b[4])) ? -1 : (ramBitCast<RamSigned>(a[4]) > ramBitCast<RamSigned>(b[4])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[5]) < ramBitCast<RamSigned>(b[5])) ? -1 : (ramBitCast<RamSigned>(a[5]) > ramBitCast<RamSigned>(b[5])) ? 1 :(0))))));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3]))|| ((ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3])) && ((ramBitCast<RamSigned>(a[4]) < ramBitCast<RamSigned>(b[4]))|| ((ramBitCast<RamSigned>(a[4]) == ramBitCast<RamSigned>(b[4])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[5]) < ramBitCast<RamSigned>(b[5]))))))))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3]))&&(ramBitCast<RamSigned>(a[4]) == ramBitCast<RamSigned>(b[4]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[5]) == ramBitCast<RamSigned>(b[5]));
 }
};
using t_ind_1 = btree_set<t_tuple,t_comparator_1>;
t_ind_1 ind_1;
using iterator = t_ind_1::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
t_ind_1::operation_hints hints_1_lower;
t_ind_1::operation_hints hints_1_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_1.insert(t, h.hints_1_lower)) {
ind_0.insert(t, h.hints_0_lower);
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[6];
std::copy(ramDomain, ramDomain + 6, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2,RamDomain a3,RamDomain a4,RamDomain a5) {
RamDomain data[6] = {a0,a1,a2,a3,a4,a5};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_1.contains(t, h.hints_1_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_1.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_1.find(t, h.hints_1_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_1.begin(),ind_1.end());
}
range<iterator> lowerUpperRange_000000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_1.begin(),ind_1.end());
}
range<t_ind_0::iterator> lowerUpperRange_110000(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_110000(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_110000(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_111000(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_111000(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111000(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_111111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_1.find(lower, h.hints_1_lower);
    auto fin = ind_1.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_111111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111111(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_100000(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_100000(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_100000(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_100110(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_100110(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_100110(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_010000(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_010000(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_010000(lower,upper,h);
}
bool empty() const {
return ind_1.empty();
}
std::vector<range<iterator>> partition() const {
return ind_1.getChunks(400);
}
void purge() {
ind_0.clear();
ind_1.clear();
}
iterator begin() const {
return ind_1.begin();
}
iterator end() const {
return ind_1.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 6 direct b-tree index 0 lex-order [1,0,2]\n";
ind_0.printStats(o);
o << " arity 6 direct b-tree index 1 lex-order [0,3,4,1,2,5]\n";
ind_1.printStats(o);
}
};
struct t_btree_iii__2__0_1_2__001__100__110__111 {
static constexpr Relation::arity_type Arity = 3;
using t_tuple = Tuple<RamDomain, 3>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :(0);
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]));
 }
};
using t_ind_0 = btree_multiset<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
struct t_comparator_1{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]));
 }
};
using t_ind_1 = btree_set<t_tuple,t_comparator_1>;
t_ind_1 ind_1;
using iterator = t_ind_1::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
t_ind_1::operation_hints hints_1_lower;
t_ind_1::operation_hints hints_1_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_1.insert(t, h.hints_1_lower)) {
ind_0.insert(t, h.hints_0_lower);
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[3];
std::copy(ramDomain, ramDomain + 3, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2) {
RamDomain data[3] = {a0,a1,a2};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_1.contains(t, h.hints_1_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_1.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_1.find(t, h.hints_1_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_1.begin(),ind_1.end());
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_1.begin(),ind_1.end());
}
range<t_ind_0::iterator> lowerUpperRange_001(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_001(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_001(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_100(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_100(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_100(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_110(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_1.find(lower, h.hints_1_lower);
    auto fin = ind_1.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111(lower,upper,h);
}
bool empty() const {
return ind_1.empty();
}
std::vector<range<iterator>> partition() const {
return ind_1.getChunks(400);
}
void purge() {
ind_0.clear();
ind_1.clear();
}
iterator begin() const {
return ind_1.begin();
}
iterator end() const {
return ind_1.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 3 direct b-tree index 0 lex-order [2]\n";
ind_0.printStats(o);
o << " arity 3 direct b-tree index 1 lex-order [0,1,2]\n";
ind_1.printStats(o);
}
};
struct t_btree_iii__1_2_0__011__010__111 {
static constexpr Relation::arity_type Arity = 3;
using t_tuple = Tuple<RamDomain, 3>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[3];
std::copy(ramDomain, ramDomain + 3, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2) {
RamDomain data[3] = {a0,a1,a2};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_011(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_011(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_011(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_010(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_010(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_010(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 3 direct b-tree index 0 lex-order [1,2,0]\n";
ind_0.printStats(o);
}
};
struct t_btree_iii__0_2_1__101__111 {
static constexpr Relation::arity_type Arity = 3;
using t_tuple = Tuple<RamDomain, 3>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[3];
std::copy(ramDomain, ramDomain + 3, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2) {
RamDomain data[3] = {a0,a1,a2};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_101(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_101(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_101(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 3 direct b-tree index 0 lex-order [0,2,1]\n";
ind_0.printStats(o);
}
};
struct t_btree_iiii__2_3_1_0__1_0_3__1111__1101__0111__0100__0011 {
static constexpr Relation::arity_type Arity = 4;
using t_tuple = Tuple<RamDomain, 4>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3])) ? -1 : (ramBitCast<RamSigned>(a[3]) > ramBitCast<RamSigned>(b[3])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :(0))));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3]))|| ((ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
struct t_comparator_1{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3])) ? -1 : (ramBitCast<RamSigned>(a[3]) > ramBitCast<RamSigned>(b[3])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3]));
 }
};
using t_ind_1 = btree_multiset<t_tuple,t_comparator_1>;
t_ind_1 ind_1;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
t_ind_1::operation_hints hints_1_lower;
t_ind_1::operation_hints hints_1_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
ind_1.insert(t, h.hints_1_lower);
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[4];
std::copy(ramDomain, ramDomain + 4, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2,RamDomain a3) {
RamDomain data[4] = {a0,a1,a2,a3};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1111(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_1101(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_1101(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1101(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_0111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_0111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_0111(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_0100(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_0100(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_0100(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_0011(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_0011(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_0011(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
ind_1.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 4 direct b-tree index 0 lex-order [2,3,1,0]\n";
ind_0.printStats(o);
o << " arity 4 direct b-tree index 1 lex-order [1,0,3]\n";
ind_1.printStats(o);
}
};
struct t_btree_iiii__2_3_0_1__0_1_3__1111__1101__0011 {
static constexpr Relation::arity_type Arity = 4;
using t_tuple = Tuple<RamDomain, 4>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3])) ? -1 : (ramBitCast<RamSigned>(a[3]) > ramBitCast<RamSigned>(b[3])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :(0))));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3]))|| ((ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
struct t_comparator_1{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3])) ? -1 : (ramBitCast<RamSigned>(a[3]) > ramBitCast<RamSigned>(b[3])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3]));
 }
};
using t_ind_1 = btree_multiset<t_tuple,t_comparator_1>;
t_ind_1 ind_1;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
t_ind_1::operation_hints hints_1_lower;
t_ind_1::operation_hints hints_1_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
ind_1.insert(t, h.hints_1_lower);
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[4];
std::copy(ramDomain, ramDomain + 4, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2,RamDomain a3) {
RamDomain data[4] = {a0,a1,a2,a3};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1111(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_1101(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_1101(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1101(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_0011(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_0011(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_0011(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
ind_1.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 4 direct b-tree index 0 lex-order [2,3,0,1]\n";
ind_0.printStats(o);
o << " arity 4 direct b-tree index 1 lex-order [0,1,3]\n";
ind_1.printStats(o);
}
};
struct t_btree_iiii__2_3_0_1__1__1111__0100__0011 {
static constexpr Relation::arity_type Arity = 4;
using t_tuple = Tuple<RamDomain, 4>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3])) ? -1 : (ramBitCast<RamSigned>(a[3]) > ramBitCast<RamSigned>(b[3])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :(0))));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3]))|| ((ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
struct t_comparator_1{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :(0);
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]));
 }
};
using t_ind_1 = btree_multiset<t_tuple,t_comparator_1>;
t_ind_1 ind_1;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
t_ind_1::operation_hints hints_1_lower;
t_ind_1::operation_hints hints_1_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
ind_1.insert(t, h.hints_1_lower);
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[4];
std::copy(ramDomain, ramDomain + 4, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2,RamDomain a3) {
RamDomain data[4] = {a0,a1,a2,a3};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1111(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_0100(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_0100(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_0100(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_0011(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_0011(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_0011(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
ind_1.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 4 direct b-tree index 0 lex-order [2,3,0,1]\n";
ind_0.printStats(o);
o << " arity 4 direct b-tree index 1 lex-order [1]\n";
ind_1.printStats(o);
}
};
struct t_btree_iiii__2_3_0_1__1111__0011 {
static constexpr Relation::arity_type Arity = 4;
using t_tuple = Tuple<RamDomain, 4>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3])) ? -1 : (ramBitCast<RamSigned>(a[3]) > ramBitCast<RamSigned>(b[3])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :(0))));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3]))|| ((ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[4];
std::copy(ramDomain, ramDomain + 4, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2,RamDomain a3) {
RamDomain data[4] = {a0,a1,a2,a3};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1111(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_0011(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_0011(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_0011(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 4 direct b-tree index 0 lex-order [2,3,0,1]\n";
ind_0.printStats(o);
}
};
struct t_btree_iiii__3_2_0_1__1_0__1111__1100__0100__0011__0001 {
static constexpr Relation::arity_type Arity = 4;
using t_tuple = Tuple<RamDomain, 4>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3])) ? -1 : (ramBitCast<RamSigned>(a[3]) > ramBitCast<RamSigned>(b[3])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :(0))));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3]))|| ((ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
struct t_comparator_1{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :(0));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]));
 }
};
using t_ind_1 = btree_multiset<t_tuple,t_comparator_1>;
t_ind_1 ind_1;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
t_ind_1::operation_hints hints_1_lower;
t_ind_1::operation_hints hints_1_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
ind_1.insert(t, h.hints_1_lower);
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[4];
std::copy(ramDomain, ramDomain + 4, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2,RamDomain a3) {
RamDomain data[4] = {a0,a1,a2,a3};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1111(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_1100(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_1100(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1100(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_0100(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_0100(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_0100(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_0011(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_0011(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_0011(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_0001(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_0001(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_0001(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
ind_1.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 4 direct b-tree index 0 lex-order [3,2,0,1]\n";
ind_0.printStats(o);
o << " arity 4 direct b-tree index 1 lex-order [1,0]\n";
ind_1.printStats(o);
}
};
struct t_btree_iiii__3_2_1_0__1111__0111__0011__0001 {
static constexpr Relation::arity_type Arity = 4;
using t_tuple = Tuple<RamDomain, 4>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3])) ? -1 : (ramBitCast<RamSigned>(a[3]) > ramBitCast<RamSigned>(b[3])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :(0))));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3]))|| ((ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[4];
std::copy(ramDomain, ramDomain + 4, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2,RamDomain a3) {
RamDomain data[4] = {a0,a1,a2,a3};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1111(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_0111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_0111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_0111(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_0011(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_0011(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_0011(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_0001(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_0001(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_0001(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 4 direct b-tree index 0 lex-order [3,2,1,0]\n";
ind_0.printStats(o);
}
};
struct t_btree_iiiii__0_1_2_3_4__11111 {
static constexpr Relation::arity_type Arity = 5;
using t_tuple = Tuple<RamDomain, 5>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3])) ? -1 : (ramBitCast<RamSigned>(a[3]) > ramBitCast<RamSigned>(b[3])) ? 1 :((ramBitCast<RamSigned>(a[4]) < ramBitCast<RamSigned>(b[4])) ? -1 : (ramBitCast<RamSigned>(a[4]) > ramBitCast<RamSigned>(b[4])) ? 1 :(0)))));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3]))|| ((ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3])) && ((ramBitCast<RamSigned>(a[4]) < ramBitCast<RamSigned>(b[4]))))))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3]))&&(ramBitCast<RamSigned>(a[4]) == ramBitCast<RamSigned>(b[4]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[5];
std::copy(ramDomain, ramDomain + 5, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2,RamDomain a3,RamDomain a4) {
RamDomain data[5] = {a0,a1,a2,a3,a4};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_00000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_00000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_11111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_11111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_11111(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 5 direct b-tree index 0 lex-order [0,1,2,3,4]\n";
ind_0.printStats(o);
}
};
struct t_btree_iiiii__1_0_2_3_4__11111__01000 {
static constexpr Relation::arity_type Arity = 5;
using t_tuple = Tuple<RamDomain, 5>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3])) ? -1 : (ramBitCast<RamSigned>(a[3]) > ramBitCast<RamSigned>(b[3])) ? 1 :((ramBitCast<RamSigned>(a[4]) < ramBitCast<RamSigned>(b[4])) ? -1 : (ramBitCast<RamSigned>(a[4]) > ramBitCast<RamSigned>(b[4])) ? 1 :(0)))));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3]))|| ((ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3])) && ((ramBitCast<RamSigned>(a[4]) < ramBitCast<RamSigned>(b[4]))))))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3]))&&(ramBitCast<RamSigned>(a[4]) == ramBitCast<RamSigned>(b[4]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[5];
std::copy(ramDomain, ramDomain + 5, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2,RamDomain a3,RamDomain a4) {
RamDomain data[5] = {a0,a1,a2,a3,a4};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_00000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_00000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_11111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_11111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_11111(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_01000(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_01000(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_01000(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 5 direct b-tree index 0 lex-order [1,0,2,3,4]\n";
ind_0.printStats(o);
}
};
struct t_btree_iiii__0_1_2_3__1111__1100 {
static constexpr Relation::arity_type Arity = 4;
using t_tuple = Tuple<RamDomain, 4>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3])) ? -1 : (ramBitCast<RamSigned>(a[3]) > ramBitCast<RamSigned>(b[3])) ? 1 :(0))));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3]))))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[4];
std::copy(ramDomain, ramDomain + 4, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2,RamDomain a3) {
RamDomain data[4] = {a0,a1,a2,a3};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1111(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_1100(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_1100(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1100(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 4 direct b-tree index 0 lex-order [0,1,2,3]\n";
ind_0.printStats(o);
}
};
struct t_btree_iiii__0_2_3_1__1011__1111 {
static constexpr Relation::arity_type Arity = 4;
using t_tuple = Tuple<RamDomain, 4>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3])) ? -1 : (ramBitCast<RamSigned>(a[3]) > ramBitCast<RamSigned>(b[3])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :(0))));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3]))|| ((ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]));
 }
};
using t_ind_0 = btree_set<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
using iterator = t_ind_0::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_0.insert(t, h.hints_0_lower)) {
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[4];
std::copy(ramDomain, ramDomain + 4, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2,RamDomain a3) {
RamDomain data[4] = {a0,a1,a2,a3};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_0.contains(t, h.hints_0_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_0.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_0.find(t, h.hints_0_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<iterator> lowerUpperRange_0000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_0.begin(),ind_0.end());
}
range<t_ind_0::iterator> lowerUpperRange_1011(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_1011(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1011(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_0.find(lower, h.hints_0_lower);
    auto fin = ind_0.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_1111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_1111(lower,upper,h);
}
bool empty() const {
return ind_0.empty();
}
std::vector<range<iterator>> partition() const {
return ind_0.getChunks(400);
}
void purge() {
ind_0.clear();
}
iterator begin() const {
return ind_0.begin();
}
iterator end() const {
return ind_0.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 4 direct b-tree index 0 lex-order [0,2,3,1]\n";
ind_0.printStats(o);
}
};
struct t_btree_iiiiii__1_0__0_2_1__0_3_4_1_2_5__110000__111000__111111__100000__100110__101000__010000 {
static constexpr Relation::arity_type Arity = 6;
using t_tuple = Tuple<RamDomain, 6>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :(0));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]));
 }
};
using t_ind_0 = btree_multiset<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
struct t_comparator_1{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]));
 }
};
using t_ind_1 = btree_multiset<t_tuple,t_comparator_1>;
t_ind_1 ind_1;
struct t_comparator_2{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3])) ? -1 : (ramBitCast<RamSigned>(a[3]) > ramBitCast<RamSigned>(b[3])) ? 1 :((ramBitCast<RamSigned>(a[4]) < ramBitCast<RamSigned>(b[4])) ? -1 : (ramBitCast<RamSigned>(a[4]) > ramBitCast<RamSigned>(b[4])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[5]) < ramBitCast<RamSigned>(b[5])) ? -1 : (ramBitCast<RamSigned>(a[5]) > ramBitCast<RamSigned>(b[5])) ? 1 :(0))))));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[3]) < ramBitCast<RamSigned>(b[3]))|| ((ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3])) && ((ramBitCast<RamSigned>(a[4]) < ramBitCast<RamSigned>(b[4]))|| ((ramBitCast<RamSigned>(a[4]) == ramBitCast<RamSigned>(b[4])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[5]) < ramBitCast<RamSigned>(b[5]))))))))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[3]) == ramBitCast<RamSigned>(b[3]))&&(ramBitCast<RamSigned>(a[4]) == ramBitCast<RamSigned>(b[4]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[5]) == ramBitCast<RamSigned>(b[5]));
 }
};
using t_ind_2 = btree_set<t_tuple,t_comparator_2>;
t_ind_2 ind_2;
using iterator = t_ind_2::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
t_ind_1::operation_hints hints_1_lower;
t_ind_1::operation_hints hints_1_upper;
t_ind_2::operation_hints hints_2_lower;
t_ind_2::operation_hints hints_2_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_2.insert(t, h.hints_2_lower)) {
ind_0.insert(t, h.hints_0_lower);
ind_1.insert(t, h.hints_1_lower);
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[6];
std::copy(ramDomain, ramDomain + 6, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2,RamDomain a3,RamDomain a4,RamDomain a5) {
RamDomain data[6] = {a0,a1,a2,a3,a4,a5};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_2.contains(t, h.hints_2_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_2.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_2.find(t, h.hints_2_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_2.begin(),ind_2.end());
}
range<iterator> lowerUpperRange_000000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_2.begin(),ind_2.end());
}
range<t_ind_0::iterator> lowerUpperRange_110000(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_110000(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_110000(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_111000(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_111000(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111000(lower,upper,h);
}
range<t_ind_2::iterator> lowerUpperRange_111111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_2 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_2.find(lower, h.hints_2_lower);
    auto fin = ind_2.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_2.end(), ind_2.end());
}
return make_range(ind_2.lower_bound(lower, h.hints_2_lower), ind_2.upper_bound(upper, h.hints_2_upper));
}
range<t_ind_2::iterator> lowerUpperRange_111111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111111(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_100000(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_100000(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_100000(lower,upper,h);
}
range<t_ind_2::iterator> lowerUpperRange_100110(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_2 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_2.end(), ind_2.end());
}
return make_range(ind_2.lower_bound(lower, h.hints_2_lower), ind_2.upper_bound(upper, h.hints_2_upper));
}
range<t_ind_2::iterator> lowerUpperRange_100110(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_100110(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_101000(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_101000(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_101000(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_010000(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_010000(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_010000(lower,upper,h);
}
bool empty() const {
return ind_2.empty();
}
std::vector<range<iterator>> partition() const {
return ind_2.getChunks(400);
}
void purge() {
ind_0.clear();
ind_1.clear();
ind_2.clear();
}
iterator begin() const {
return ind_2.begin();
}
iterator end() const {
return ind_2.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 6 direct b-tree index 0 lex-order [1,0]\n";
ind_0.printStats(o);
o << " arity 6 direct b-tree index 1 lex-order [0,2,1]\n";
ind_1.printStats(o);
o << " arity 6 direct b-tree index 2 lex-order [0,3,4,1,2,5]\n";
ind_2.printStats(o);
}
};
struct t_btree_iii__0_2__1_0_2__010__100__101__110__111 {
static constexpr Relation::arity_type Arity = 3;
using t_tuple = Tuple<RamDomain, 3>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :(0));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]));
 }
};
using t_ind_0 = btree_multiset<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
struct t_comparator_1{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]));
 }
};
using t_ind_1 = btree_set<t_tuple,t_comparator_1>;
t_ind_1 ind_1;
using iterator = t_ind_1::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
t_ind_1::operation_hints hints_1_lower;
t_ind_1::operation_hints hints_1_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_1.insert(t, h.hints_1_lower)) {
ind_0.insert(t, h.hints_0_lower);
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[3];
std::copy(ramDomain, ramDomain + 3, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2) {
RamDomain data[3] = {a0,a1,a2};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_1.contains(t, h.hints_1_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_1.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_1.find(t, h.hints_1_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_1.begin(),ind_1.end());
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_1.begin(),ind_1.end());
}
range<t_ind_1::iterator> lowerUpperRange_010(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_010(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_010(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_100(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_100(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_100(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_101(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_101(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_101(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_110(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_1.find(lower, h.hints_1_lower);
    auto fin = ind_1.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111(lower,upper,h);
}
bool empty() const {
return ind_1.empty();
}
std::vector<range<iterator>> partition() const {
return ind_1.getChunks(400);
}
void purge() {
ind_0.clear();
ind_1.clear();
}
iterator begin() const {
return ind_1.begin();
}
iterator end() const {
return ind_1.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 3 direct b-tree index 0 lex-order [0,2]\n";
ind_0.printStats(o);
o << " arity 3 direct b-tree index 1 lex-order [1,0,2]\n";
ind_1.printStats(o);
}
};
struct t_btree_iii__1__2_0__0_1_2__001__010__100__101__110__111 {
static constexpr Relation::arity_type Arity = 3;
using t_tuple = Tuple<RamDomain, 3>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :(0);
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]));
 }
};
using t_ind_0 = btree_multiset<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
struct t_comparator_1{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :(0));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))|| ((ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2])) && ((ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]))&&(ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]));
 }
};
using t_ind_1 = btree_multiset<t_tuple,t_comparator_1>;
t_ind_1 ind_1;
struct t_comparator_2{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]));
 }
};
using t_ind_2 = btree_set<t_tuple,t_comparator_2>;
t_ind_2 ind_2;
using iterator = t_ind_2::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
t_ind_1::operation_hints hints_1_lower;
t_ind_1::operation_hints hints_1_upper;
t_ind_2::operation_hints hints_2_lower;
t_ind_2::operation_hints hints_2_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_2.insert(t, h.hints_2_lower)) {
ind_0.insert(t, h.hints_0_lower);
ind_1.insert(t, h.hints_1_lower);
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[3];
std::copy(ramDomain, ramDomain + 3, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2) {
RamDomain data[3] = {a0,a1,a2};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_2.contains(t, h.hints_2_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_2.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_2.find(t, h.hints_2_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_2.begin(),ind_2.end());
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_2.begin(),ind_2.end());
}
range<t_ind_1::iterator> lowerUpperRange_001(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_001(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_001(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_010(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_010(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_010(lower,upper,h);
}
range<t_ind_2::iterator> lowerUpperRange_100(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_2 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_2.end(), ind_2.end());
}
return make_range(ind_2.lower_bound(lower, h.hints_2_lower), ind_2.upper_bound(upper, h.hints_2_upper));
}
range<t_ind_2::iterator> lowerUpperRange_100(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_100(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_101(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_101(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_101(lower,upper,h);
}
range<t_ind_2::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_2 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_2.end(), ind_2.end());
}
return make_range(ind_2.lower_bound(lower, h.hints_2_lower), ind_2.upper_bound(upper, h.hints_2_upper));
}
range<t_ind_2::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_110(lower,upper,h);
}
range<t_ind_2::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_2 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_2.find(lower, h.hints_2_lower);
    auto fin = ind_2.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_2.end(), ind_2.end());
}
return make_range(ind_2.lower_bound(lower, h.hints_2_lower), ind_2.upper_bound(upper, h.hints_2_upper));
}
range<t_ind_2::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111(lower,upper,h);
}
bool empty() const {
return ind_2.empty();
}
std::vector<range<iterator>> partition() const {
return ind_2.getChunks(400);
}
void purge() {
ind_0.clear();
ind_1.clear();
ind_2.clear();
}
iterator begin() const {
return ind_2.begin();
}
iterator end() const {
return ind_2.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 3 direct b-tree index 0 lex-order [1]\n";
ind_0.printStats(o);
o << " arity 3 direct b-tree index 1 lex-order [2,0]\n";
ind_1.printStats(o);
o << " arity 3 direct b-tree index 2 lex-order [0,1,2]\n";
ind_2.printStats(o);
}
};
struct t_btree_iii__0_2__0_1_2__100__101__110__111 {
static constexpr Relation::arity_type Arity = 3;
using t_tuple = Tuple<RamDomain, 3>;
struct t_comparator_0{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :(0));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]));
 }
};
using t_ind_0 = btree_multiset<t_tuple,t_comparator_0>;
t_ind_0 ind_0;
struct t_comparator_1{
 int operator()(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0])) ? -1 : (ramBitCast<RamSigned>(a[0]) > ramBitCast<RamSigned>(b[0])) ? 1 :((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1])) ? -1 : (ramBitCast<RamSigned>(a[1]) > ramBitCast<RamSigned>(b[1])) ? 1 :((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2])) ? -1 : (ramBitCast<RamSigned>(a[2]) > ramBitCast<RamSigned>(b[2])) ? 1 :(0)));
 }
bool less(const t_tuple& a, const t_tuple& b) const {
  return (ramBitCast<RamSigned>(a[0]) < ramBitCast<RamSigned>(b[0]))|| ((ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0])) && ((ramBitCast<RamSigned>(a[1]) < ramBitCast<RamSigned>(b[1]))|| ((ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1])) && ((ramBitCast<RamSigned>(a[2]) < ramBitCast<RamSigned>(b[2]))))));
 }
bool equal(const t_tuple& a, const t_tuple& b) const {
return (ramBitCast<RamSigned>(a[0]) == ramBitCast<RamSigned>(b[0]))&&(ramBitCast<RamSigned>(a[1]) == ramBitCast<RamSigned>(b[1]))&&(ramBitCast<RamSigned>(a[2]) == ramBitCast<RamSigned>(b[2]));
 }
};
using t_ind_1 = btree_set<t_tuple,t_comparator_1>;
t_ind_1 ind_1;
using iterator = t_ind_1::iterator;
struct context {
t_ind_0::operation_hints hints_0_lower;
t_ind_0::operation_hints hints_0_upper;
t_ind_1::operation_hints hints_1_lower;
t_ind_1::operation_hints hints_1_upper;
};
context createContext() { return context(); }
bool insert(const t_tuple& t) {
context h;
return insert(t, h);
}
bool insert(const t_tuple& t, context& h) {
if (ind_1.insert(t, h.hints_1_lower)) {
ind_0.insert(t, h.hints_0_lower);
return true;
} else return false;
}
bool insert(const RamDomain* ramDomain) {
RamDomain data[3];
std::copy(ramDomain, ramDomain + 3, data);
const t_tuple& tuple = reinterpret_cast<const t_tuple&>(data);
context h;
return insert(tuple, h);
}
bool insert(RamDomain a0,RamDomain a1,RamDomain a2) {
RamDomain data[3] = {a0,a1,a2};
return insert(data);
}
bool contains(const t_tuple& t, context& h) const {
return ind_1.contains(t, h.hints_1_lower);
}
bool contains(const t_tuple& t) const {
context h;
return contains(t, h);
}
std::size_t size() const {
return ind_1.size();
}
iterator find(const t_tuple& t, context& h) const {
return ind_1.find(t, h.hints_1_lower);
}
iterator find(const t_tuple& t) const {
context h;
return find(t, h);
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */, context& /* h */) const {
return range<iterator>(ind_1.begin(),ind_1.end());
}
range<iterator> lowerUpperRange_000(const t_tuple& /* lower */, const t_tuple& /* upper */) const {
return range<iterator>(ind_1.begin(),ind_1.end());
}
range<t_ind_1::iterator> lowerUpperRange_100(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_100(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_100(lower,upper,h);
}
range<t_ind_0::iterator> lowerUpperRange_101(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_0 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_0.end(), ind_0.end());
}
return make_range(ind_0.lower_bound(lower, h.hints_0_lower), ind_0.upper_bound(upper, h.hints_0_upper));
}
range<t_ind_0::iterator> lowerUpperRange_101(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_101(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_110(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_110(lower,upper,h);
}
range<t_ind_1::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper, context& h) const {
t_comparator_1 comparator;
int cmp = comparator(lower, upper);
if (cmp == 0) {
    auto pos = ind_1.find(lower, h.hints_1_lower);
    auto fin = ind_1.end();
    if (pos != fin) {fin = pos; ++fin;}
    return make_range(pos, fin);
}
if (cmp > 0) {
    return make_range(ind_1.end(), ind_1.end());
}
return make_range(ind_1.lower_bound(lower, h.hints_1_lower), ind_1.upper_bound(upper, h.hints_1_upper));
}
range<t_ind_1::iterator> lowerUpperRange_111(const t_tuple& lower, const t_tuple& upper) const {
context h;
return lowerUpperRange_111(lower,upper,h);
}
bool empty() const {
return ind_1.empty();
}
std::vector<range<iterator>> partition() const {
return ind_1.getChunks(400);
}
void purge() {
ind_0.clear();
ind_1.clear();
}
iterator begin() const {
return ind_1.begin();
}
iterator end() const {
return ind_1.end();
}
void printStatistics(std::ostream& o) const {
o << " arity 3 direct b-tree index 0 lex-order [0,2]\n";
ind_0.printStats(o);
o << " arity 3 direct b-tree index 1 lex-order [0,1,2]\n";
ind_1.printStats(o);
}
};

class Sf_subset : public SouffleProgram {
private:
static inline std::string substr_wrapper(const std::string& str, std::size_t idx, std::size_t len) {
   std::string result; 
   try { result = str.substr(idx,len); } catch(...) { 
     std::cerr << "warning: wrong index position provided by substr(\"";
     std::cerr << str << "\"," << (int32_t)idx << "," << (int32_t)len << ") functor.\n";
   } return result;
}
public:
// -- initialize symbol table --
SymbolTableImpl symTable{
	R"_(i8)_",
	R"_(context_sensitivity)_",
	R"_(9-callsite)_",
	R"_(1-caller)_",
	R"_(2-caller)_",
	R"_(*argv-alloc)_",
	R"_(3-caller)_",
	R"_(*global_alloc)_",
	R"_(@main)_",
	R"_(@__cxa_allocate_exception)_",
	R"_(@__cxa_atexit)_",
	R"_(4-caller)_",
	R"_(C1)_",
	R"_(C2)_",
	R"_(@malloc)_",
	R"_(@calloc)_",
	R"_(@realloc)_",
	R"_(@mmap)_",
	R"_(operator new)_",
	R"_(5-caller)_",
	R"_(.text.startup)_",
	R"_(6-caller)_",
	R"_(<<exit_context>>)_",
	R"_(<<main-context>>)_",
	R"_(<<startup-context>>)_",
	R"_(insensitive)_",
	R"_(drop_redundant_context_entries)_",
	R"_(on)_",
	R"_(drop_redundant_contexts)_",
	R"_(entrypoints)_",
	R"_(main)_",
	R"_(pointer_arithmetic)_",
	R"_(optimized_code)_",
	R"_(1-callsite)_",
	R"_(2-callsite)_",
	R"_(3-callsite)_",
	R"_(4-callsite)_",
	R"_(5-callsite)_",
	R"_(6-callsite)_",
	R"_(7-callsite)_",
	R"_(8-callsite)_",
	R"_(7-caller)_",
	R"_(8-caller)_",
	R"_(9-caller)_",
	R"_(off)_",
	R"_(library)_",
	R"_(ppc_fp128)_",
	R"_(x86_fp80)_",
	R"_()_",
	R"_([*])_",
	R"_(external)_",
	R"_(cxxabi)_",
	R"_(class_type_info)_",
	R"_(*unknown*)_",
	R"_(*null*)_",
	R"_(null)_",
	R"_(unknown)_",
	R"_(heap)_",
	R"_(global)_",
	R"_(*argv[)_",
	R"_(]-alloc)_",
	R"_(*typed_stack_alloc)_",
	R"_([)_",
	R"_( )_",
	R"_(])_",
	R"_(*stack_alloc)_",
	R"_(*typed_heap_alloc)_",
	R"_(*heap_alloc)_",
	R"_(stack)_",
	R"_(.?/)_",
	R"_(/)_",
	R"_(*sig_alloc)_",
	R"_(()_",
	R"_(return)_",
	R"_()])_",
	R"_(|)_",
	R"_())_",
	R"_(@memcpy)_",
	R"_(@llvm.memcpy)_",
	R"_(@atexit)_",
	R"_(nil)_",
	R"_(#)_",
	R"_(double)_",
	R"_(float)_",
	R"_(fp128)_",
	R"_(half)_",
	R"_(i1)_",
	R"_(i32)_",
	R"_(i64)_",
	R"_(label)_",
	R"_(metadata)_",
	R"_(void)_",
	R"_(x86mmx)_",
};// -- initialize record table --
SpecializedRecordTable<0,2> recordTable{};
// -- Table: int8_type
Own<t_btree_i__0__1> rel_1_int8_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_1_int8_type;
// -- Table: pointer_type_has_component
Own<t_btree_ii__1_0__0__11__10__01> rel_2_pointer_type_has_component = mk<t_btree_ii__1_0__0__11__10__01>();
souffle::RelationWrapper<t_btree_ii__1_0__0__11__10__01> wrapper_rel_2_pointer_type_has_component;
// -- Table: +disconnected0
Own<t_nullaries> rel_3_disconnected0 = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_3_disconnected0;
// -- Table: user_options
Own<t_btree_ii__0_1__11__10> rel_4_user_options = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_4_user_options;
// -- Table: +disconnected10
Own<t_nullaries> rel_5_disconnected10 = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_5_disconnected10;
// -- Table: +disconnected12
Own<t_nullaries> rel_6_disconnected12 = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_6_disconnected12;
// -- Table: +disconnected14
Own<t_nullaries> rel_7_disconnected14 = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_7_disconnected14;
// -- Table: +disconnected16
Own<t_nullaries> rel_8_disconnected16 = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_8_disconnected16;
// -- Table: +disconnected18
Own<t_nullaries> rel_9_disconnected18 = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_9_disconnected18;
// -- Table: +disconnected2
Own<t_nullaries> rel_10_disconnected2 = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_10_disconnected2;
// -- Table: +disconnected20
Own<t_nullaries> rel_11_disconnected20 = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_11_disconnected20;
// -- Table: +disconnected22
Own<t_nullaries> rel_12_disconnected22 = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_12_disconnected22;
// -- Table: +disconnected24
Own<t_nullaries> rel_13_disconnected24 = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_13_disconnected24;
// -- Table: +disconnected26
Own<t_nullaries> rel_14_disconnected26 = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_14_disconnected26;
// -- Table: +disconnected28
Own<t_nullaries> rel_15_disconnected28 = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_15_disconnected28;
// -- Table: +disconnected30
Own<t_nullaries> rel_16_disconnected30 = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_16_disconnected30;
// -- Table: +disconnected32
Own<t_nullaries> rel_17_disconnected32 = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_17_disconnected32;
// -- Table: +disconnected34
Own<t_nullaries> rel_18_disconnected34 = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_18_disconnected34;
// -- Table: +disconnected36
Own<t_nullaries> rel_19_disconnected36 = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_19_disconnected36;
// -- Table: +disconnected38
Own<t_nullaries> rel_20_disconnected38 = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_20_disconnected38;
// -- Table: +disconnected4
Own<t_nullaries> rel_21_disconnected4 = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_21_disconnected4;
// -- Table: +disconnected41
Own<t_nullaries> rel_22_disconnected41 = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_22_disconnected41;
// -- Table: +disconnected6
Own<t_nullaries> rel_23_disconnected6 = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_23_disconnected6;
// -- Table: +disconnected8
Own<t_nullaries> rel_24_disconnected8 = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_24_disconnected8;
// -- Table: insensitive
Own<t_nullaries> rel_25_insensitive = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_25_insensitive;
// -- Table: max_context_depth
Own<t_btree_i__0__2__1> rel_26_max_context_depth = mk<t_btree_i__0__2__1>();
souffle::RelationWrapper<t_btree_i__0__2__1> wrapper_rel_26_max_context_depth;
// -- Table: call_instr_func_operand
Own<t_btree_ii__0_1__11__10> rel_27_call_instr_func_operand = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_27_call_instr_func_operand;
// -- Table: func_type
Own<t_btree_i__0__1> rel_28_func_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_28_func_type;
// -- Table: constant_has_type
Own<t_btree_ii__0_1__11__10> rel_29_constant_has_type = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_29_constant_has_type;
// -- Table: variable_has_type
Own<t_btree_ii__0_1__11__10> rel_30_variable_has_type = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_30_variable_has_type;
// -- Table: operand_has_type
Own<t_btree_ii__0_1__11__10> rel_31_operand_has_type = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_31_operand_has_type;
// -- Table: call_instr_fn_type
Own<t_btree_ii__0_1__11> rel_32_call_instr_fn_type = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_32_call_instr_fn_type;
// -- Table: invoke_instr_func_operand
Own<t_btree_ii__0_1__11__10> rel_33_invoke_instr_func_operand = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_33_invoke_instr_func_operand;
// -- Table: invoke_instr_fn_type
Own<t_btree_ii__0_1__11> rel_34_invoke_instr_fn_type = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_34_invoke_instr_fn_type;
// -- Table: call_or_invoke_instr_fn_type
Own<t_btree_ii__0_1__11__10> rel_35_call_or_invoke_instr_fn_type = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_35_call_or_invoke_instr_fn_type;
// -- Table: variable
Own<t_btree_i__0__1> rel_36_variable = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_36_variable;
// -- Table: indirect_call_instr
Own<t_btree_i__0__1> rel_37_indirect_call_instr = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_37_indirect_call_instr;
// -- Table: indirect_invoke_instr
Own<t_btree_i__0__1> rel_38_indirect_invoke_instr = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_38_indirect_invoke_instr;
// -- Table: indirect_call_or_invoke_instr
Own<t_btree_i__0__1> rel_39_indirect_call_or_invoke_instr = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_39_indirect_call_or_invoke_instr;
// -- Table: struct_type_field
Own<t_btree_iii__1__0_1_2__010__100__110__111> rel_40_struct_type_field = mk<t_btree_iii__1__0_1_2__010__100__110__111>();
souffle::RelationWrapper<t_btree_iii__1__0_1_2__010__100__110__111> wrapper_rel_40_struct_type_field;
// -- Table: struct_type_nfields
Own<t_btree_ii__1_0__0__11__10__01> rel_41_struct_type_nfields = mk<t_btree_ii__1_0__0__11__10__01>();
souffle::RelationWrapper<t_btree_ii__1_0__0__11__10__01> wrapper_rel_41_struct_type_nfields;
// -- Table: array_type_has_component
Own<t_btree_ii__0_1__11__10> rel_42_array_type_has_component = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_42_array_type_has_component;
// -- Table: array_type_has_size
Own<t_btree_ii__0_1__11__10> rel_43_array_type_has_size = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_43_array_type_has_size;
// -- Table: func_type_has_varargs
Own<t_btree_i__0__1> rel_44_func_type_has_varargs = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_44_func_type_has_varargs;
// -- Table: func_type_nparams
Own<t_btree_ii__1_0__0__11__10__01> rel_45_func_type_nparams = mk<t_btree_ii__1_0__0__11__10__01>();
souffle::RelationWrapper<t_btree_ii__1_0__0__11__10__01> wrapper_rel_45_func_type_nparams;
// -- Table: pointer_type
Own<t_btree_i__0__1> rel_46_pointer_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_46_pointer_type;
// -- Table: pointer_type_base_component
Own<t_btree_ii__0_1__11__10> rel_47_pointer_type_base_component = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_47_pointer_type_base_component;
// -- Table: @delta_pointer_type_base_component
Own<t_btree_ii__0_1__11__10> rel_48_delta_pointer_type_base_component = mk<t_btree_ii__0_1__11__10>();
// -- Table: @new_pointer_type_base_component
Own<t_btree_ii__0_1__11__10> rel_49_new_pointer_type_base_component = mk<t_btree_ii__0_1__11__10>();
// -- Table: array_type
Own<t_btree_i__0__1> rel_50_array_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_50_array_type;
// -- Table: opaque_struct_type
Own<t_btree_i__0__1> rel_51_opaque_struct_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_51_opaque_struct_type;
// -- Table: struct_type
Own<t_btree_i__0__1> rel_52_struct_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_52_struct_type;
// -- Table: aggregate_type
Own<t_btree_i__0__1> rel_53_aggregate_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_53_aggregate_type;
// -- Table: vector_type
Own<t_btree_i__0__1> rel_54_vector_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_54_vector_type;
// -- Table: derived_type
Own<t_btree_i__0__1> rel_55_derived_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_55_derived_type;
// -- Table: double_type
Own<t_btree_i__0__1> rel_56_double_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_56_double_type;
// -- Table: float_type
Own<t_btree_i__0__1> rel_57_float_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_57_float_type;
// -- Table: fp128_type
Own<t_btree_i__0__1> rel_58_fp128_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_58_fp128_type;
// -- Table: half_type
Own<t_btree_i__0__1> rel_59_half_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_59_half_type;
// -- Table: fp_type
Own<t_btree_i__0__1> rel_60_fp_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_60_fp_type;
// -- Table: int1_type
Own<t_btree_i__0__1> rel_61_int1_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_61_int1_type;
// -- Table: int32_type
Own<t_btree_i__0__1> rel_62_int32_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_62_int32_type;
// -- Table: int64_type
Own<t_btree_i__0__1> rel_63_int64_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_63_int64_type;
// -- Table: integer_type
Own<t_btree_i__0__1> rel_64_integer_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_64_integer_type;
// -- Table: integer_pointer_type
Own<t_btree_i__0__1> rel_65_integer_pointer_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_65_integer_pointer_type;
// -- Table: label_type
Own<t_btree_i__0__1> rel_66_label_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_66_label_type;
// -- Table: metadata_type
Own<t_btree_i__0__1> rel_67_metadata_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_67_metadata_type;
// -- Table: void_type
Own<t_btree_i__0__1> rel_68_void_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_68_void_type;
// -- Table: x86mmx_type
Own<t_btree_i__0__1> rel_69_x86mmx_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_69_x86mmx_type;
// -- Table: primitive_type
Own<t_btree_i__0__1> rel_70_primitive_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_70_primitive_type;
// -- Table: type
Own<t_btree_i__0__1> rel_71_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_71_type;
// -- Table: func_type_param
Own<t_btree_iii__0_1_2__110__111> rel_72_func_type_param = mk<t_btree_iii__0_1_2__110__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__110__111> wrapper_rel_72_func_type_param;
// -- Table: func_type_return
Own<t_btree_ii__0_1__11> rel_73_func_type_return = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_73_func_type_return;
// -- Table: type_compatible
Own<t_btree_ii__1_0__0__11__10__01> rel_74_type_compatible = mk<t_btree_ii__1_0__0__11__10__01>();
souffle::RelationWrapper<t_btree_ii__1_0__0__11__10__01> wrapper_rel_74_type_compatible;
// -- Table: @delta_type_compatible
Own<t_btree_ii__0_1__11> rel_75_delta_type_compatible = mk<t_btree_ii__0_1__11>();
// -- Table: @new_type_compatible
Own<t_btree_ii__0_1__11> rel_76_new_type_compatible = mk<t_btree_ii__0_1__11>();
// -- Table: type_compatible_up_to_field
Own<t_btree_iii__0_1_2__111> rel_77_type_compatible_up_to_field = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_77_type_compatible_up_to_field;
// -- Table: @delta_type_compatible_up_to_field
Own<t_btree_iii__1_2_0__011__111> rel_78_delta_type_compatible_up_to_field = mk<t_btree_iii__1_2_0__011__111>();
// -- Table: @new_type_compatible_up_to_field
Own<t_btree_iii__1_2_0__011__111> rel_79_new_type_compatible_up_to_field = mk<t_btree_iii__1_2_0__011__111>();
// -- Table: type_compatible_up_to_arg
Own<t_btree_iii__0_1_2__111> rel_80_type_compatible_up_to_arg = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_80_type_compatible_up_to_arg;
// -- Table: @delta_type_compatible_up_to_arg
Own<t_btree_iii__1_2__0_2_1__011__101__111> rel_81_delta_type_compatible_up_to_arg = mk<t_btree_iii__1_2__0_2_1__011__101__111>();
// -- Table: @new_type_compatible_up_to_arg
Own<t_btree_iii__1_2__0_2_1__011__101__111> rel_82_new_type_compatible_up_to_arg = mk<t_btree_iii__1_2__0_2_1__011__101__111>();
// -- Table: _eligible_base_type
Own<t_btree_ii__0_1__11> rel_83_eligible_base_type = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_83_eligible_base_type;
// -- Table: @delta__eligible_base_type
Own<t_btree_ii__0_1__11> rel_84_delta_eligible_base_type = mk<t_btree_ii__0_1__11>();
// -- Table: @new__eligible_base_type
Own<t_btree_ii__0_1__11> rel_85_new_eligible_base_type = mk<t_btree_ii__0_1__11>();
// -- Table: _type_expands_base_type
Own<t_btree_ii__0_1__11__10> rel_86_type_expands_base_type = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_86_type_expands_base_type;
// -- Table: @delta__type_expands_base_type
Own<t_btree_ii__0_1__11__10> rel_87_delta_type_expands_base_type = mk<t_btree_ii__0_1__11__10>();
// -- Table: @new__type_expands_base_type
Own<t_btree_ii__0_1__11__10> rel_88_new_type_expands_base_type = mk<t_btree_ii__0_1__11__10>();
// -- Table: __agg_subclause
Own<t_btree_iii__2_0_1__001__111> rel_89_agg_subclause = mk<t_btree_iii__2_0_1__001__111>();
souffle::RelationWrapper<t_btree_iii__2_0_1__001__111> wrapper_rel_89_agg_subclause;
// -- Table: alias_name
Own<t_btree_ii__1_0__11__01> rel_90_alias_name = mk<t_btree_ii__1_0__11__01>();
souffle::RelationWrapper<t_btree_ii__1_0__11__01> wrapper_rel_90_alias_name;
// -- Table: constant_has_value
Own<t_btree_ii__1_0__0__11__10__01> rel_91_constant_has_value = mk<t_btree_ii__1_0__0__11__10__01>();
souffle::RelationWrapper<t_btree_ii__1_0__0__11__10__01> wrapper_rel_91_constant_has_value;
// -- Table: _alias
Own<t_btree_ii__0_1__11> rel_92_alias = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_92_alias;
// -- Table: alias_aliasee
Own<t_btree_ii__0_1__11> rel_93_alias_aliasee = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_93_alias_aliasee;
// -- Table: _aliasee
Own<t_btree_ii__1_0__11__01> rel_94_aliasee = mk<t_btree_ii__1_0__11__01>();
souffle::RelationWrapper<t_btree_ii__1_0__11__01> wrapper_rel_94_aliasee;
// -- Table: aliased_constants
Own<t_btree_ii__0_1__11> rel_95_aliased_constants = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_95_aliased_constants;
// -- Table: global_region
Own<t_btree_i__0__1> rel_96_global_region = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_96_global_region;
// -- Table: heap_region
Own<t_btree_i__0__1> rel_97_heap_region = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_97_heap_region;
// -- Table: stack_region
Own<t_btree_i__0__1> rel_98_stack_region = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_98_stack_region;
// -- Table: _alloc_region
Own<t_btree_i__0__1> rel_99_alloc_region = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_99_alloc_region;
// -- Table: getelementptr_constant_expression_index
Own<t_btree_iii__1_0_2__010__110__111> rel_100_getelementptr_constant_expression_index = mk<t_btree_iii__1_0_2__010__110__111>();
souffle::RelationWrapper<t_btree_iii__1_0_2__010__110__111> wrapper_rel_100_getelementptr_constant_expression_index;
// -- Table: _constant_expression_next_index
Own<t_btree_iii__0_1_2__110__111> rel_101_constant_expression_next_index = mk<t_btree_iii__0_1_2__110__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__110__111> wrapper_rel_101_constant_expression_next_index;
// -- Table: getelementptr_constant_expression_base
Own<t_btree_ii__0_1__11> rel_102_getelementptr_constant_expression_base = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_102_getelementptr_constant_expression_base;
// -- Table: _getelementptr_constant_expression_base_type
Own<t_btree_ii__0_1__11__10> rel_103_getelementptr_constant_expression_base_type = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_103_getelementptr_constant_expression_base_type;
// -- Table: constant_to_int
Own<t_btree_ii__0_1__11__12__10> rel_104_constant_to_int = mk<t_btree_ii__0_1__11__12__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__12__10> wrapper_rel_104_constant_to_int;
// -- Table: vector_type_has_component
Own<t_btree_ii__0_1__11__10> rel_105_vector_type_has_component = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_105_vector_type_has_component;
// -- Table: _getelementptr_constant_expression_interm_type
Own<t_btree_iii__0_1_2__110__111> rel_106_getelementptr_constant_expression_interm_type = mk<t_btree_iii__0_1_2__110__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__110__111> wrapper_rel_106_getelementptr_constant_expression_interm_type;
// -- Table: @delta__getelementptr_constant_expression_interm_type
Own<t_btree_iii__0_1_2__111> rel_107_delta_getelementptr_constant_expression_interm_type = mk<t_btree_iii__0_1_2__111>();
// -- Table: @new__getelementptr_constant_expression_interm_type
Own<t_btree_iii__0_1_2__111> rel_108_new_getelementptr_constant_expression_interm_type = mk<t_btree_iii__0_1_2__111>();
// -- Table: type_has_subelement
Own<t_btree_ii__0_1__11> rel_109_type_has_subelement = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_109_type_has_subelement;
// -- Table: @delta_type_has_subelement
Own<t_btree_ii__0_1__11> rel_110_delta_type_has_subelement = mk<t_btree_ii__0_1__11>();
// -- Table: @new_type_has_subelement
Own<t_btree_ii__0_1__11> rel_111_new_type_has_subelement = mk<t_btree_ii__0_1__11>();
// -- Table: type_contains_pointer
Own<t_btree_i__0__1> rel_112_type_contains_pointer = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_112_type_contains_pointer;
// -- Table: func_type_has_pointer_arg
Own<t_btree_i__0__1> rel_113_func_type_has_pointer_arg = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_113_func_type_has_pointer_arg;
// -- Table: func_type_has_no_pointer_args
Own<t_btree_i__0__1> rel_114_func_type_has_no_pointer_args = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_114_func_type_has_no_pointer_args;
// -- Table: func_type_has_pointer_return
Own<t_btree_i__0__1> rel_115_func_type_has_pointer_return = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_115_func_type_has_pointer_return;
// -- Table: func_type_has_no_pointer_return
Own<t_btree_i__0__1> rel_116_func_type_has_no_pointer_return = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_116_func_type_has_no_pointer_return;
// -- Table: constant_array
Own<t_btree_i__0__1> rel_117_constant_array = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_117_constant_array;
// -- Table: bitcast_constant_expression
Own<t_btree_i__0__1> rel_118_bitcast_constant_expression = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_118_bitcast_constant_expression;
// -- Table: getelementptr_constant_expression
Own<t_btree_i__0__1> rel_119_getelementptr_constant_expression = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_119_getelementptr_constant_expression;
// -- Table: inttoptr_constant_expression
Own<t_btree_i__0__1> rel_120_inttoptr_constant_expression = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_120_inttoptr_constant_expression;
// -- Table: ptrtoint_constant_expression
Own<t_btree_i__0__1> rel_121_ptrtoint_constant_expression = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_121_ptrtoint_constant_expression;
// -- Table: constant_expression
Own<t_btree_i__0__1> rel_122_constant_expression = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_122_constant_expression;
// -- Table: constant_struct
Own<t_btree_i__0__1> rel_123_constant_struct = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_123_constant_struct;
// -- Table: fp_constant
Own<t_btree_i__0__1> rel_124_fp_constant = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_124_fp_constant;
// -- Table: func_constant
Own<t_btree_i__0__1> rel_125_func_constant = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_125_func_constant;
// -- Table: global_var_constant
Own<t_btree_i__0__1> rel_126_global_var_constant = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_126_global_var_constant;
// -- Table: inline_asm
Own<t_btree_i__0__1> rel_127_inline_asm = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_127_inline_asm;
// -- Table: integer_constant
Own<t_btree_i__0__1> rel_128_integer_constant = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_128_integer_constant;
// -- Table: nullptr_constant
Own<t_btree_i__0__1> rel_129_nullptr_constant = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_129_nullptr_constant;
// -- Table: poison_constant
Own<t_btree_i__0__1> rel_130_poison_constant = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_130_poison_constant;
// -- Table: undef_constant
Own<t_btree_i__0__1> rel_131_undef_constant = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_131_undef_constant;
// -- Table: constant
Own<t_btree_i__0__1> rel_132_constant = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_132_constant;
// -- Table: direct_call_instr
Own<t_btree_i__0__1> rel_133_direct_call_instr = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_133_direct_call_instr;
// -- Table: direct_invoke_instr
Own<t_btree_i__0__1> rel_134_direct_invoke_instr = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_134_direct_invoke_instr;
// -- Table: operand
Own<t_btree_i__0__1> rel_135_operand = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_135_operand;
// -- Table: bitcast_constant_expression_from
Own<t_btree_ii__0_1__11> rel_136_bitcast_constant_expression_from = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_136_bitcast_constant_expression_from;
// -- Table: func_constant_fn_name
Own<t_btree_ii__0_1__11__10> rel_137_func_constant_fn_name = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_137_func_constant_fn_name;
// -- Table: func_name
Own<t_btree_ii__1_0__0__11__10__01> rel_138_func_name = mk<t_btree_ii__1_0__0__11__10__01>();
souffle::RelationWrapper<t_btree_ii__1_0__0__11__10__01> wrapper_rel_138_func_name;
// -- Table: constant_references_func
Own<t_btree_ii__0_1__11__10> rel_139_constant_references_func = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_139_constant_references_func;
// -- Table: @delta_constant_references_func
Own<t_btree_ii__0_1__11__10> rel_140_delta_constant_references_func = mk<t_btree_ii__0_1__11__10>();
// -- Table: @new_constant_references_func
Own<t_btree_ii__0_1__11__10> rel_141_new_constant_references_func = mk<t_btree_ii__0_1__11__10>();
// -- Table: _instr_calls_func
Own<t_btree_ii__1_0__0__11__10__01> rel_142_instr_calls_func = mk<t_btree_ii__1_0__0__11__10__01>();
souffle::RelationWrapper<t_btree_ii__1_0__0__11__10__01> wrapper_rel_142_instr_calls_func;
// -- Table: call_instr_arg
Own<t_btree_iii__0_1_2__110__111> rel_143_call_instr_arg = mk<t_btree_iii__0_1_2__110__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__110__111> wrapper_rel_143_call_instr_arg;
// -- Table: invoke_instr_arg
Own<t_btree_iii__0_1_2__110__111> rel_144_invoke_instr_arg = mk<t_btree_iii__0_1_2__110__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__110__111> wrapper_rel_144_invoke_instr_arg;
// -- Table: actual_arg
Own<t_btree_iii__0_1_2__120__110__111> rel_145_actual_arg = mk<t_btree_iii__0_1_2__120__110__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__120__110__111> wrapper_rel_145_actual_arg;
// -- Table: argv_alloc
Own<t_btree_i__0__1> rel_146_argv_alloc = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_146_argv_alloc;
// -- Table: alloca_instr
Own<t_btree_i__0__1> rel_147_alloca_instr = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_147_alloca_instr;
// -- Table: alloca_instr_type
Own<t_btree_ii__0_1__11__10> rel_148_alloca_instr_type = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_148_alloca_instr_type;
// -- Table: call_instr
Own<t_btree_i__0__1> rel_149_call_instr = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_149_call_instr;
// -- Table: func
Own<t_btree_i__0__1> rel_150_func = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_150_func;
// -- Table: func_decl_to_defn
Own<t_btree_ii__0_1__11__10> rel_151_func_decl_to_defn = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_151_func_decl_to_defn;
// -- Table: call_instr_fn_target
Own<t_btree_ii__1_0__0__11__10__01> rel_152_call_instr_fn_target = mk<t_btree_ii__1_0__0__11__10__01>();
souffle::RelationWrapper<t_btree_ii__1_0__0__11__10__01> wrapper_rel_152_call_instr_fn_target;
// -- Table: func_decl
Own<t_btree_i__0__1> rel_153_func_decl = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_153_func_decl;
// -- Table: global_allocation_by_func
Own<t_btree_ii__1_0__0__11__10__01> rel_154_global_allocation_by_func = mk<t_btree_ii__1_0__0__11__10__01>();
souffle::RelationWrapper<t_btree_ii__1_0__0__11__10__01> wrapper_rel_154_global_allocation_by_func;
// -- Table: func_by_location
Own<t_btree_ii__0_1__11__10> rel_155_func_by_location = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_155_func_by_location;
// -- Table: num_direct_calls_to_func
Own<t_btree_ii__0_1__11> rel_156_num_direct_calls_to_func = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_156_num_direct_calls_to_func;
// -- Table: main_func
Own<t_btree_i__0__1> rel_157_main_func = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_157_main_func;
// -- Table: func_ty
Own<t_btree_ii__0_1__11__10> rel_158_func_ty = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_158_func_ty;
// -- Table: num_indirect_calls_to_compatible_func
Own<t_btree_ii__1_0__11__01> rel_159_num_indirect_calls_to_compatible_func = mk<t_btree_ii__1_0__11__01>();
souffle::RelationWrapper<t_btree_ii__1_0__11__01> wrapper_rel_159_num_indirect_calls_to_compatible_func;
// -- Table: max_num_callsites
Own<t_btree_ii__0_1__11> rel_160_max_num_callsites = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_160_max_num_callsites;
// -- Table: cxx_alloc_exception
Own<t_btree_i__0__1> rel_161_cxx_alloc_exception = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_161_cxx_alloc_exception;
// -- Table: cxx_atexit_func
Own<t_btree_i__0__1> rel_162_cxx_atexit_func = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_162_cxx_atexit_func;
// -- Table: class_type_constructor
Own<t_btree_ii__0_1__11__10> rel_163_class_type_constructor = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_163_class_type_constructor;
// -- Table: global_var
Own<t_btree_i__0__1> rel_164_global_var = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_164_global_var;
// -- Table: global_var_name
Own<t_btree_ii__1_0__0__11__10__01> rel_165_global_var_name = mk<t_btree_ii__1_0__0__11__10__01>();
souffle::RelationWrapper<t_btree_ii__1_0__0__11__10__01> wrapper_rel_165_global_var_name;
// -- Table: global_allocation_by_variable
Own<t_btree_ii__0_1__11__10> rel_166_global_allocation_by_variable = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_166_global_allocation_by_variable;
// -- Table: global_allocation_by_name
Own<t_btree_ii__0_1__11__10> rel_167_global_allocation_by_name = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_167_global_allocation_by_name;
// -- Table: global_allocation
Own<t_btree_i__0__1> rel_168_global_allocation = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_168_global_allocation;
// -- Table: global_var_type
Own<t_btree_ii__0_1__11__10> rel_169_global_var_type = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_169_global_var_type;
// -- Table: func_signature
Own<t_btree_ii__0_1__11> rel_170_func_signature = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_170_func_signature;
// -- Table: heap_alloc_func
Own<t_btree_i__0__1> rel_171_heap_alloc_func = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_171_heap_alloc_func;
// -- Table: cxx_new_func
Own<t_btree_i__0__1> rel_172_cxx_new_func = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_172_cxx_new_func;
// -- Table: instr_assigns_to
Own<t_btree_ii__0_1__11__10> rel_173_instr_assigns_to = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_173_instr_assigns_to;
// -- Table: instr_returns_type
Own<t_btree_ii__0_1__11__10> rel_174_instr_returns_type = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_174_instr_returns_type;
// -- Table: instr_func
Own<t_btree_ii__1_0__0__11__10__01> rel_175_instr_func = mk<t_btree_ii__1_0__0__11__10__01>();
souffle::RelationWrapper<t_btree_ii__1_0__0__11__10__01> wrapper_rel_175_instr_func;
// -- Table: invoke_instr
Own<t_btree_i__0__1> rel_176_invoke_instr = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_176_invoke_instr;
// -- Table: invoke_instr_fn_target
Own<t_btree_ii__1_0__0__11__10__01> rel_177_invoke_instr_fn_target = mk<t_btree_ii__1_0__0__11__10__01>();
souffle::RelationWrapper<t_btree_ii__1_0__0__11__10__01> wrapper_rel_177_invoke_instr_fn_target;
// -- Table: sized_alloc_instr
Own<t_btree_ii__0_1__11__10> rel_178_sized_alloc_instr = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_178_sized_alloc_instr;
// -- Table: context_item_by_invoc_interim
Own<t_btree_ii__0_1__11> rel_179_context_item_by_invoc_interim = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_179_context_item_by_invoc_interim;
// -- Table: func_section
Own<t_btree_ii__1_0__11__01> rel_180_func_section = mk<t_btree_ii__1_0__11__01>();
souffle::RelationWrapper<t_btree_ii__1_0__11__01> wrapper_rel_180_func_section;
// -- Table: called_at_startup
Own<t_btree_i__0__1> rel_181_called_at_startup = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_181_called_at_startup;
// -- Table: empty_alloc_context
Own<t_btree_i__0__1> rel_182_empty_alloc_context = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_182_empty_alloc_context;
// -- Table: exit_context
Own<t_btree_i__0__1> rel_183_exit_context = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_183_exit_context;
// -- Table: main_context
Own<t_btree_i__0__1> rel_184_main_context = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_184_main_context;
// -- Table: startup_context
Own<t_btree_i__0__1> rel_185_startup_context = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_185_startup_context;
// -- Table: user_option_default
Own<t_btree_ii__0_1__11> rel_186_user_option_default = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_186_user_option_default;
// -- Table: user_option_valid_value
Own<t_btree_ii__0_1__11> rel_187_user_option_valid_value = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_187_user_option_valid_value;
// -- Table: user_option_selected
Own<t_btree_ii__0_1__11__10> rel_188_user_option_selected = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_188_user_option_selected;
// -- Table: user_option_defaulted
Own<t_btree_ii__0_1__11> rel_189_user_option_defaulted = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_189_user_option_defaulted;
// -- Table: user_option_value
Own<t_btree_ii__0_1__11> rel_190_user_option_value = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_190_user_option_value;
// -- Table: drop_context_by_invoc
Own<t_btree_i__0__1> rel_191_drop_context_by_invoc = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_191_drop_context_by_invoc;
// -- Table: drop_context_item_by_invoc
Own<t_btree_i__0__1> rel_192_drop_context_item_by_invoc = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_192_drop_context_item_by_invoc;
// -- Table: context_item_by_invoc
Own<t_btree_ii__0_1__11__10> rel_193_context_item_by_invoc = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_193_context_item_by_invoc;
// -- Table: inlined_constructors
Own<t_nullaries> rel_194_inlined_constructors = mk<t_nullaries>();
souffle::RelationWrapper<t_nullaries> wrapper_rel_194_inlined_constructors;
// -- Table: constant_in_func_name
Own<t_btree_ii__0_1__11> rel_195_constant_in_func_name = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_195_constant_in_func_name;
// -- Table: constant_in_func
Own<t_btree_ii__0_1__11> rel_196_constant_in_func = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_196_constant_in_func;
// -- Table: global_var_constant_name
Own<t_btree_ii__0_1__11__10> rel_197_global_var_constant_name = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_197_global_var_constant_name;
// -- Table: constant_references_variable
Own<t_btree_ii__0_1__11> rel_198_constant_references_variable = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_198_constant_references_variable;
// -- Table: @delta_constant_references_variable
Own<t_btree_ii__0_1__11__10> rel_199_delta_constant_references_variable = mk<t_btree_ii__0_1__11__10>();
// -- Table: @new_constant_references_variable
Own<t_btree_ii__0_1__11__10> rel_200_new_constant_references_variable = mk<t_btree_ii__0_1__11__10>();
// -- Table: constant_array_index
Own<t_btree_iii__0_1_2__100__111> rel_201_constant_array_index = mk<t_btree_iii__0_1_2__100__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__100__111> wrapper_rel_201_constant_array_index;
// -- Table: getelementptr_instr_index
Own<t_btree_iii__1_0_2__010__110__111> rel_202_getelementptr_instr_index = mk<t_btree_iii__1_0_2__010__110__111>();
souffle::RelationWrapper<t_btree_iii__1_0_2__010__110__111> wrapper_rel_202_getelementptr_instr_index;
// -- Table: getelementptr_instr_base
Own<t_btree_ii__0_1__11> rel_203_getelementptr_instr_base = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_203_getelementptr_instr_base;
// -- Table: getelementptr_instr_base_type
Own<t_btree_ii__0_1__11__10> rel_204_getelementptr_instr_base_type = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_204_getelementptr_instr_base_type;
// -- Table: gep_is_vector_based
Own<t_btree_i__0__1> rel_205_gep_is_vector_based = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_205_gep_is_vector_based;
// -- Table: extractvalue_instr_index
Own<t_btree_iii__0_1_2__111> rel_206_extractvalue_instr_index = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_206_extractvalue_instr_index;
// -- Table: insertvalue_instr_index
Own<t_btree_iii__0_1_2__111> rel_207_insertvalue_instr_index = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_207_insertvalue_instr_index;
// -- Table: instr_successor_index
Own<t_btree_iii__0_1_2__110__111> rel_208_instr_successor_index = mk<t_btree_iii__0_1_2__110__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__110__111> wrapper_rel_208_instr_successor_index;
// -- Table: getelementptr_instrterm_type
Own<t_btree_iii__0_1_2__110__111> rel_209_getelementptr_instrterm_type = mk<t_btree_iii__0_1_2__110__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__110__111> wrapper_rel_209_getelementptr_instrterm_type;
// -- Table: @delta_getelementptr_instrterm_type
Own<t_btree_iii__0_1_2__111> rel_210_delta_getelementptr_instrterm_type = mk<t_btree_iii__0_1_2__111>();
// -- Table: @new_getelementptr_instrterm_type
Own<t_btree_iii__0_1_2__111> rel_211_new_getelementptr_instrterm_type = mk<t_btree_iii__0_1_2__111>();
// -- Table: array_indices__no_typecomp
Own<t_btree_iii__1_0_2__010__111> rel_212_array_indices_no_typecomp = mk<t_btree_iii__1_0_2__010__111>();
souffle::RelationWrapper<t_btree_iii__1_0_2__010__111> wrapper_rel_212_array_indices_no_typecomp;
// -- Table: array_indices
Own<t_btree_iii__0_1_2__110__111> rel_213_array_indices = mk<t_btree_iii__0_1_2__110__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__110__111> wrapper_rel_213_array_indices;
// -- Table: ppc_fp128_type
Own<t_btree_i__0__1> rel_214_ppc_fp128_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_214_ppc_fp128_type;
// -- Table: x86_fp80_type
Own<t_btree_i__0__1> rel_215_x86_fp80_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_215_x86_fp80_type;
// -- Table: type_has_size
Own<t_btree_ii__1_0__0_1__11__12__10__01> rel_216_type_has_size = mk<t_btree_ii__1_0__0_1__11__12__10__01>();
souffle::RelationWrapper<t_btree_ii__1_0__0_1__11__12__10__01> wrapper_rel_216_type_has_size;
// -- Table: pointer_index
Own<t_btree_iii__2__0_1_2__001__110__111> rel_217_pointer_index = mk<t_btree_iii__2__0_1_2__001__110__111>();
souffle::RelationWrapper<t_btree_iii__2__0_1_2__001__110__111> wrapper_rel_217_pointer_index;
// -- Table: pointer_offset
Own<t_btree_iii__0_1_2__111> rel_218_pointer_offset = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_218_pointer_offset;
// -- Table: array_offset
Own<t_btree_iii__0_1_2__111> rel_219_array_offset = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_219_array_offset;
// -- Table: gep_zero_index_offset
Own<t_btree_ii__0_1__11__10> rel_220_gep_zero_index_offset = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_220_gep_zero_index_offset;
// -- Table: empty_path_component
Own<t_btree_i__0__1> rel_221_empty_path_component = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_221_empty_path_component;
// -- Table: path_component_at_any_index
Own<t_btree_i__0__1> rel_222_path_component_at_any_index = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_222_path_component_at_any_index;
// -- Table: alloca_instr_size
Own<t_btree_ii__0_1__11__10> rel_223_alloca_instr_size = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_223_alloca_instr_size;
// -- Table: external_linkage_type
Own<t_btree_i__0__1> rel_224_external_linkage_type = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_224_external_linkage_type;
// -- Table: global_var_linkage
Own<t_btree_ii__1_0__0__11__10__01> rel_225_global_var_linkage = mk<t_btree_ii__1_0__0__11__10__01>();
souffle::RelationWrapper<t_btree_ii__1_0__0__11__10__01> wrapper_rel_225_global_var_linkage;
// -- Table: typeinfo_vtable
Own<t_btree_ii__0_1__11__10> rel_226_typeinfo_vtable = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_226_typeinfo_vtable;
// -- Table: variable_has_name
Own<t_btree_ii__0_1__11__10> rel_227_variable_has_name = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_227_variable_has_name;
// -- Table: bitcast_instr_from_operand
Own<t_btree_ii__0_1__11__10> rel_228_bitcast_instr_from_operand = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_228_bitcast_instr_from_operand;
// -- Table: bitcast_instr_to_type
Own<t_btree_ii__0_1__11> rel_229_bitcast_instr_to_type = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_229_bitcast_instr_to_type;
// -- Table: variable_in_func_name
Own<t_btree_ii__0_1__11> rel_230_variable_in_func_name = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_230_variable_in_func_name;
// -- Table: variable_in_func
Own<t_btree_ii__0_1__11__10> rel_231_variable_in_func = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_231_variable_in_func;
// -- Table: signature_arg_alloc
Own<t_btree_ii__0_1__11__10> rel_232_signature_arg_alloc = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_232_signature_arg_alloc;
// -- Table: signature_arg_alloc_once
Own<t_btree_ii__0_1__11__10> rel_233_signature_arg_alloc_once = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_233_signature_arg_alloc_once;
// -- Table: func_param
Own<t_btree_iii__0_1_2__100__110__111> rel_234_func_param = mk<t_btree_iii__0_1_2__100__110__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__100__110__111> wrapper_rel_234_func_param;
// -- Table: argv_var_points_to
Own<t_btree_iiii__0_1_2_3__1111> rel_235_argv_var_points_to = mk<t_btree_iiii__0_1_2_3__1111>();
souffle::RelationWrapper<t_btree_iiii__0_1_2_3__1111> wrapper_rel_235_argv_var_points_to;
// -- Table: phi_instr
Own<t_btree_i__0__1> rel_236_phi_instr = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_236_phi_instr;
// -- Table: phi_instr_pair_label
Own<t_btree_iii__0_1_2__110__111> rel_237_phi_instr_pair_label = mk<t_btree_iii__0_1_2__110__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__110__111> wrapper_rel_237_phi_instr_pair_label;
// -- Table: phi_instr_pair_value
Own<t_btree_iii__0_1_2__111> rel_238_phi_instr_pair_value = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_238_phi_instr_pair_value;
// -- Table: phi_instr_pair
Own<t_btree_iiii__0_1_2_3__1000__1111> rel_239_phi_instr_pair = mk<t_btree_iiii__0_1_2_3__1000__1111>();
souffle::RelationWrapper<t_btree_iiii__0_1_2_3__1000__1111> wrapper_rel_239_phi_instr_pair;
// -- Table: ptrtoint_instr_from_operand
Own<t_btree_ii__0_1__11__10> rel_240_ptrtoint_instr_from_operand = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_240_ptrtoint_instr_from_operand;
// -- Table: select_instr
Own<t_btree_i__0__1> rel_241_select_instr = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_241_select_instr;
// -- Table: select_instr_first_operand
Own<t_btree_ii__0_1__11__10> rel_242_select_instr_first_operand = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_242_select_instr_first_operand;
// -- Table: select_instr_second_operand
Own<t_btree_ii__0_1__11__10> rel_243_select_instr_second_operand = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_243_select_instr_second_operand;
// -- Table: inttoptr_instr
Own<t_btree_i__0__1> rel_244_inttoptr_instr = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_244_inttoptr_instr;
// -- Table: load_instr_address
Own<t_btree_ii__0_1__11__10> rel_245_load_instr_address = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_245_load_instr_address;
// -- Table: ret_instr_operand
Own<t_btree_ii__0_1__11> rel_246_ret_instr_operand = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_246_ret_instr_operand;
// -- Table: func_returns_value
Own<t_btree_ii__1_0__11__01> rel_247_func_returns_value = mk<t_btree_ii__1_0__11__01>();
souffle::RelationWrapper<t_btree_ii__1_0__11__01> wrapper_rel_247_func_returns_value;
// -- Table: va_arg_instr
Own<t_btree_i__0__1> rel_248_va_arg_instr = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_248_va_arg_instr;
// -- Table: va_arg_instr_type
Own<t_btree_ii__0_1__11__10> rel_249_va_arg_instr_type = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_249_va_arg_instr_type;
// -- Table: subset.interp_assignment._va_arg_target
Own<t_btree_iii__0_1_2__111> rel_250_subset_interp_assignment_va_arg_target = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_250_subset_interp_assignment_va_arg_target;
// -- Table: constant_struct_index
Own<t_btree_iii__0_1_2__100__111> rel_251_constant_struct_index = mk<t_btree_iii__0_1_2__100__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__100__111> wrapper_rel_251_constant_struct_index;
// -- Table: global_var_initializer
Own<t_btree_ii__0_1__11> rel_252_global_var_initializer = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_252_global_var_initializer;
// -- Table: store_instr_address
Own<t_btree_ii__0_1__11__10> rel_253_store_instr_address = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_253_store_instr_address;
// -- Table: store_instr_value
Own<t_btree_ii__0_1__11__10> rel_254_store_instr_value = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_254_store_instr_value;
// -- Table: signature_arg_memcpy_arg
Own<t_btree_iii__0_1_2__100__111> rel_255_signature_arg_memcpy_arg = mk<t_btree_iii__0_1_2__100__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__100__111> wrapper_rel_255_signature_arg_memcpy_arg;
// -- Table: signature_arg_memcpy_arg_reachable
Own<t_btree_iii__0_1_2__100__111> rel_256_signature_arg_memcpy_arg_reachable = mk<t_btree_iii__0_1_2__100__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__100__111> wrapper_rel_256_signature_arg_memcpy_arg_reachable;
// -- Table: signature_arg_memcpy_global
Own<t_btree_iii__0_1_2__100__111> rel_257_signature_arg_memcpy_global = mk<t_btree_iii__0_1_2__100__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__100__111> wrapper_rel_257_signature_arg_memcpy_global;
// -- Table: signature_arg_memcpy_global_reachable
Own<t_btree_iii__0_1_2__100__111> rel_258_signature_arg_memcpy_global_reachable = mk<t_btree_iii__0_1_2__100__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__100__111> wrapper_rel_258_signature_arg_memcpy_global_reachable;
// -- Table: signature_global_memcpy_arg
Own<t_btree_iii__0_1_2__100__111> rel_259_signature_global_memcpy_arg = mk<t_btree_iii__0_1_2__100__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__100__111> wrapper_rel_259_signature_global_memcpy_arg;
// -- Table: signature_global_memcpy_arg_reachable
Own<t_btree_iii__0_1_2__100__111> rel_260_signature_global_memcpy_arg_reachable = mk<t_btree_iii__0_1_2__100__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__100__111> wrapper_rel_260_signature_global_memcpy_arg_reachable;
// -- Table: signature_return_aliases_arg_reachable
Own<t_btree_ii__0_1__11__10> rel_261_signature_return_aliases_arg_reachable = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_261_signature_return_aliases_arg_reachable;
// -- Table: signature_return_aliases_global_reachable
Own<t_btree_ii__0_1__11__10> rel_262_signature_return_aliases_global_reachable = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_262_signature_return_aliases_global_reachable;
// -- Table: struct_type_field_offset
Own<t_btree_iii__0_2__0_1_2__101__110__111> rel_263_struct_type_field_offset = mk<t_btree_iii__0_2__0_1_2__101__110__111>();
souffle::RelationWrapper<t_btree_iii__0_2__0_1_2__101__110__111> wrapper_rel_263_struct_type_field_offset;
// -- Table: signature_arg_points_to_global
Own<t_btree_iii__0_1_2__100__111> rel_264_signature_arg_points_to_global = mk<t_btree_iii__0_1_2__100__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__100__111> wrapper_rel_264_signature_arg_points_to_global;
// -- Table: unknown_location
Own<t_btree_i__0__1> rel_265_unknown_location = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_265_unknown_location;
// -- Table: getelementptr_instr_nindices
Own<t_btree_ii__0_1__11> rel_266_getelementptr_instr_nindices = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_266_getelementptr_instr_nindices;
// -- Table: null_location
Own<t_btree_i__0__1> rel_267_null_location = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_267_null_location;
// -- Table: non_allocation
Own<t_btree_i__0__1> rel_268_non_allocation = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_268_non_allocation;
// -- Table: signature_return_alloc
Own<t_btree_i__0__1> rel_269_signature_return_alloc = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_269_signature_return_alloc;
// -- Table: signature_return_alloc_once
Own<t_btree_i__0__1> rel_270_signature_return_alloc_once = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_270_signature_return_alloc_once;
// -- Table: signature_return_aliases_arg
Own<t_btree_ii__0_1__11__10> rel_271_signature_return_aliases_arg = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_271_signature_return_aliases_arg;
// -- Table: signature_return_aliases_global
Own<t_btree_ii__0_1__11__10> rel_272_signature_return_aliases_global = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_272_signature_return_aliases_global;
// -- Table: signature_return_points_to_global
Own<t_btree_ii__0_1__11__10> rel_273_signature_return_points_to_global = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_273_signature_return_points_to_global;
// -- Table: getelementptr_constant_expression_nindices
Own<t_btree_ii__0_1__11> rel_274_getelementptr_constant_expression_nindices = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_274_getelementptr_constant_expression_nindices;
// -- Table: ptrtoint_constant_expression_from
Own<t_btree_ii__0_1__11> rel_275_ptrtoint_constant_expression_from = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_275_ptrtoint_constant_expression_from;
// -- Table: subset._merge._reachable_call
Own<t_btree_ii__0_1__11> rel_276_subset_merge_reachable_call = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_276_subset_merge_reachable_call;
// -- Table: @delta_subset._merge._reachable_call
Own<t_btree_ii__0_1__11> rel_277_delta_subset_merge_reachable_call = mk<t_btree_ii__0_1__11>();
// -- Table: @new_subset._merge._reachable_call
Own<t_btree_ii__0_1__11> rel_278_new_subset_merge_reachable_call = mk<t_btree_ii__0_1__11>();
// -- Table: subset.type_indication.stack_type_indication
Own<t_btree_iii__2_0_1__001__111> rel_279_subset_type_indication_stack_type_indication = mk<t_btree_iii__2_0_1__001__111>();
souffle::RelationWrapper<t_btree_iii__2_0_1__001__111> wrapper_rel_279_subset_type_indication_stack_type_indication;
// -- Table: @delta_subset.type_indication.stack_type_indication
Own<t_btree_iii__2_0_1__001__101__111> rel_280_delta_subset_type_indication_stack_type_indication = mk<t_btree_iii__2_0_1__001__101__111>();
// -- Table: @new_subset.type_indication.stack_type_indication
Own<t_btree_iii__2_0_1__001__101__111> rel_281_new_subset_type_indication_stack_type_indication = mk<t_btree_iii__2_0_1__001__101__111>();
// -- Table: subset._merge.merge
Own<t_btree_iii__1_2_0__011__111> rel_282_subset_merge_merge = mk<t_btree_iii__1_2_0__011__111>();
souffle::RelationWrapper<t_btree_iii__1_2_0__011__111> wrapper_rel_282_subset_merge_merge;
// -- Table: @delta_subset._merge.merge
Own<t_btree_iii__1_2_0__011__111> rel_283_delta_subset_merge_merge = mk<t_btree_iii__1_2_0__011__111>();
// -- Table: @new_subset._merge.merge
Own<t_btree_iii__1_2_0__011__111> rel_284_new_subset_merge_merge = mk<t_btree_iii__1_2_0__011__111>();
// -- Table: subset.stripctx.stripctx_operand_points_to
Own<t_btree_ii__0_1__11> rel_285_subset_stripctx_stripctx_operand_points_to = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_285_subset_stripctx_stripctx_operand_points_to;
// -- Table: @delta_subset.stripctx.stripctx_operand_points_to
Own<t_btree_ii__1_0__11__01> rel_286_delta_subset_stripctx_stripctx_operand_points_to = mk<t_btree_ii__1_0__11__01>();
// -- Table: @new_subset.stripctx.stripctx_operand_points_to
Own<t_btree_ii__1_0__11__01> rel_287_new_subset_stripctx_stripctx_operand_points_to = mk<t_btree_ii__1_0__11__01>();
// -- Table: subset.exception_object._exception_object
Own<t_btree_i__0__1> rel_288_subset_exception_object_exception_object = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_288_subset_exception_object_exception_object;
// -- Table: @delta_subset.exception_object._exception_object
Own<t_btree_i__0__1> rel_289_delta_subset_exception_object_exception_object = mk<t_btree_i__0__1>();
// -- Table: @new_subset.exception_object._exception_object
Own<t_btree_i__0__1> rel_290_new_subset_exception_object_exception_object = mk<t_btree_i__0__1>();
// -- Table: subset.exception_object.heap_allocation_by_alloc_exc
Own<t_btree_ii__0_1__11__10> rel_291_subset_exception_object_heap_allocation_by_alloc_exc = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_291_subset_exception_object_heap_allocation_by_alloc_exc;
// -- Table: @delta_subset.exception_object.heap_allocation_by_alloc_exc
Own<t_btree_ii__0_1__11__10> rel_292_delta_subset_exception_object_heap_allocation_by_alloc_exc = mk<t_btree_ii__0_1__11__10>();
// -- Table: @new_subset.exception_object.heap_allocation_by_alloc_exc
Own<t_btree_ii__0_1__11__10> rel_293_new_subset_exception_object_heap_allocation_by_alloc_exc = mk<t_btree_ii__0_1__11__10>();
// -- Table: argv_ptr_points_to
Own<t_btree_ii__0_1__11> rel_294_argv_ptr_points_to = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_294_argv_ptr_points_to;
// -- Table: @delta_argv_ptr_points_to
Own<t_btree_ii__0_1__11> rel_295_delta_argv_ptr_points_to = mk<t_btree_ii__0_1__11>();
// -- Table: @new_argv_ptr_points_to
Own<t_btree_ii__0_1__11> rel_296_new_argv_ptr_points_to = mk<t_btree_ii__0_1__11>();
// -- Table: allocation
Own<t_btree_i__0__1> rel_297_allocation = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_297_allocation;
// -- Table: @delta_allocation
Own<t_btree_i__0__1> rel_298_delta_allocation = mk<t_btree_i__0__1>();
// -- Table: @new_allocation
Own<t_btree_i__0__1> rel_299_new_allocation = mk<t_btree_i__0__1>();
// -- Table: basic_allocation
Own<t_btree_i__0__1> rel_300_basic_allocation = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_300_basic_allocation;
// -- Table: @delta_basic_allocation
Own<t_btree_i__0__1> rel_301_delta_basic_allocation = mk<t_btree_i__0__1>();
// -- Table: @new_basic_allocation
Own<t_btree_i__0__1> rel_302_new_basic_allocation = mk<t_btree_i__0__1>();
// -- Table: stack_allocation
Own<t_btree_i__0__1> rel_303_stack_allocation = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_303_stack_allocation;
// -- Table: @delta_stack_allocation
Own<t_btree_i__0__1> rel_304_delta_stack_allocation = mk<t_btree_i__0__1>();
// -- Table: @new_stack_allocation
Own<t_btree_i__0__1> rel_305_new_stack_allocation = mk<t_btree_i__0__1>();
// -- Table: heap_allocation
Own<t_btree_i__0__1> rel_306_heap_allocation = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_306_heap_allocation;
// -- Table: @delta_heap_allocation
Own<t_btree_i__0__1> rel_307_delta_heap_allocation = mk<t_btree_i__0__1>();
// -- Table: @new_heap_allocation
Own<t_btree_i__0__1> rel_308_new_heap_allocation = mk<t_btree_i__0__1>();
// -- Table: signature_allocation
Own<t_btree_i__0__1> rel_309_signature_allocation = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_309_signature_allocation;
// -- Table: @delta_signature_allocation
Own<t_btree_i__0__1> rel_310_delta_signature_allocation = mk<t_btree_i__0__1>();
// -- Table: @new_signature_allocation
Own<t_btree_i__0__1> rel_311_new_signature_allocation = mk<t_btree_i__0__1>();
// -- Table: stack_allocation_by_instr
Own<t_btree_ii__1_0__0__11__10__01> rel_312_stack_allocation_by_instr = mk<t_btree_ii__1_0__0__11__10__01>();
souffle::RelationWrapper<t_btree_ii__1_0__0__11__10__01> wrapper_rel_312_stack_allocation_by_instr;
// -- Table: @delta_stack_allocation_by_instr
Own<t_btree_ii__1_0__0__11__10__01> rel_313_delta_stack_allocation_by_instr = mk<t_btree_ii__1_0__0__11__10__01>();
// -- Table: @new_stack_allocation_by_instr
Own<t_btree_ii__1_0__0__11__10__01> rel_314_new_stack_allocation_by_instr = mk<t_btree_ii__1_0__0__11__10__01>();
// -- Table: heap_allocation_by_instr
Own<t_btree_ii__0_1__11__10> rel_315_heap_allocation_by_instr = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_315_heap_allocation_by_instr;
// -- Table: @delta_heap_allocation_by_instr
Own<t_btree_ii__0_1__11__10> rel_316_delta_heap_allocation_by_instr = mk<t_btree_ii__0_1__11__10>();
// -- Table: @new_heap_allocation_by_instr
Own<t_btree_ii__0_1__11__10> rel_317_new_heap_allocation_by_instr = mk<t_btree_ii__0_1__11__10>();
// -- Table: ptr_compatible_allocation
Own<t_btree_i__0__1> rel_318_ptr_compatible_allocation = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_318_ptr_compatible_allocation;
// -- Table: @delta_ptr_compatible_allocation
Own<t_btree_i__0__1> rel_319_delta_ptr_compatible_allocation = mk<t_btree_i__0__1>();
// -- Table: @new_ptr_compatible_allocation
Own<t_btree_i__0__1> rel_320_new_ptr_compatible_allocation = mk<t_btree_i__0__1>();
// -- Table: static_allocation_type
Own<t_btree_ii__0_1__11__10> rel_321_static_allocation_type = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_321_static_allocation_type;
// -- Table: @delta_static_allocation_type
Own<t_btree_ii__0_1__11__10> rel_322_delta_static_allocation_type = mk<t_btree_ii__0_1__11__10>();
// -- Table: @new_static_allocation_type
Own<t_btree_ii__0_1__11__10> rel_323_new_static_allocation_type = mk<t_btree_ii__0_1__11__10>();
// -- Table: allocation_size
Own<t_btree_ii__0_1__11__12__10> rel_324_allocation_size = mk<t_btree_ii__0_1__11__12__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__12__10> wrapper_rel_324_allocation_size;
// -- Table: @delta_allocation_size
Own<t_btree_ii__0_1__11__12__10> rel_325_delta_allocation_size = mk<t_btree_ii__0_1__11__12__10>();
// -- Table: @new_allocation_size
Own<t_btree_ii__0_1__11__12__10> rel_326_new_allocation_size = mk<t_btree_ii__0_1__11__12__10>();
// -- Table: dynamically_sized_alloc
Own<t_btree_i__0__1> rel_327_dynamically_sized_alloc = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_327_dynamically_sized_alloc;
// -- Table: @delta_dynamically_sized_alloc
Own<t_btree_i__0__1> rel_328_delta_dynamically_sized_alloc = mk<t_btree_i__0__1>();
// -- Table: @new_dynamically_sized_alloc
Own<t_btree_i__0__1> rel_329_new_dynamically_sized_alloc = mk<t_btree_i__0__1>();
// -- Table: path_component
Own<t_btree_i__0__1> rel_330_path_component = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_330_path_component;
// -- Table: @delta_path_component
Own<t_btree_i__0__1> rel_331_delta_path_component = mk<t_btree_i__0__1>();
// -- Table: @new_path_component
Own<t_btree_i__0__1> rel_332_new_path_component = mk<t_btree_i__0__1>();
// -- Table: path_component_at_field
Own<t_btree_ii__0_1__11> rel_333_path_component_at_field = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_333_path_component_at_field;
// -- Table: @delta_path_component_at_field
Own<t_btree_ii__0_1__11> rel_334_delta_path_component_at_field = mk<t_btree_ii__0_1__11>();
// -- Table: @new_path_component_at_field
Own<t_btree_ii__0_1__11> rel_335_new_path_component_at_field = mk<t_btree_ii__0_1__11>();
// -- Table: path_component_at_index
Own<t_btree_ii__0_1__11__10> rel_336_path_component_at_index = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_336_path_component_at_index;
// -- Table: @delta_path_component_at_index
Own<t_btree_ii__0_1__11__10> rel_337_delta_path_component_at_index = mk<t_btree_ii__0_1__11__10>();
// -- Table: @new_path_component_at_index
Own<t_btree_ii__0_1__11__10> rel_338_new_path_component_at_index = mk<t_btree_ii__0_1__11__10>();
// -- Table: assign_instr
Own<t_btree_ii__0_1__11> rel_339_assign_instr = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_339_assign_instr;
// -- Table: @delta_assign_instr
Own<t_btree_ii__0_1__11> rel_340_delta_assign_instr = mk<t_btree_ii__0_1__11>();
// -- Table: @new_assign_instr
Own<t_btree_ii__0_1__11> rel_341_new_assign_instr = mk<t_btree_ii__0_1__11>();
// -- Table: initialized_by_constant
Own<t_btree_ii__0_1__11> rel_342_initialized_by_constant = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_342_initialized_by_constant;
// -- Table: @delta_initialized_by_constant
Own<t_btree_ii__0_1__11> rel_343_delta_initialized_by_constant = mk<t_btree_ii__0_1__11>();
// -- Table: @new_initialized_by_constant
Own<t_btree_ii__0_1__11> rel_344_new_initialized_by_constant = mk<t_btree_ii__0_1__11>();
// -- Table: constant_ptr_points_to
Own<t_btree_iiii__0_1_2_3__1111> rel_345_constant_ptr_points_to = mk<t_btree_iiii__0_1_2_3__1111>();
souffle::RelationWrapper<t_btree_iiii__0_1_2_3__1111> wrapper_rel_345_constant_ptr_points_to;
// -- Table: @delta_constant_ptr_points_to
Own<t_btree_iiii__0_1_2_3__1111> rel_346_delta_constant_ptr_points_to = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: @new_constant_ptr_points_to
Own<t_btree_iiii__0_1_2_3__1111> rel_347_new_constant_ptr_points_to = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: gep_constant_expr_indexes_from
Own<t_btree_iiii__1_0_2_3__1111__0100> rel_348_gep_constant_expr_indexes_from = mk<t_btree_iiii__1_0_2_3__1111__0100>();
souffle::RelationWrapper<t_btree_iiii__1_0_2_3__1111__0100> wrapper_rel_348_gep_constant_expr_indexes_from;
// -- Table: @delta_gep_constant_expr_indexes_from
Own<t_btree_iiii__1_0_2_3__1111__0100__0200> rel_349_delta_gep_constant_expr_indexes_from = mk<t_btree_iiii__1_0_2_3__1111__0100__0200>();
// -- Table: @new_gep_constant_expr_indexes_from
Own<t_btree_iiii__1_0_2_3__1111__0100__0200> rel_350_new_gep_constant_expr_indexes_from = mk<t_btree_iiii__1_0_2_3__1111__0100__0200>();
// -- Table: gep_constant_expr_points_to
Own<t_btree_iii__0_1_2__111> rel_351_gep_constant_expr_points_to = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_351_gep_constant_expr_points_to;
// -- Table: @delta_gep_constant_expr_points_to
Own<t_btree_iii__0_1_2__110__111> rel_352_delta_gep_constant_expr_points_to = mk<t_btree_iii__0_1_2__110__111>();
// -- Table: @new_gep_constant_expr_points_to
Own<t_btree_iii__0_1_2__110__111> rel_353_new_gep_constant_expr_points_to = mk<t_btree_iii__0_1_2__110__111>();
// -- Table: gep_constant_expr_index_offset
Own<t_btree_iiii__0_1_2_3__1110__1111> rel_354_gep_constant_expr_index_offset = mk<t_btree_iiii__0_1_2_3__1110__1111>();
souffle::RelationWrapper<t_btree_iiii__0_1_2_3__1110__1111> wrapper_rel_354_gep_constant_expr_index_offset;
// -- Table: @delta_gep_constant_expr_index_offset
Own<t_btree_iiii__0_1_2_3__1110__1111> rel_355_delta_gep_constant_expr_index_offset = mk<t_btree_iiii__0_1_2_3__1110__1111>();
// -- Table: @new_gep_constant_expr_index_offset
Own<t_btree_iiii__0_1_2_3__1110__1111> rel_356_new_gep_constant_expr_index_offset = mk<t_btree_iiii__0_1_2_3__1110__1111>();
// -- Table: constant_points_to
Own<t_btree_ii__0_1__11__10> rel_357_constant_points_to = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_357_constant_points_to;
// -- Table: @delta_constant_points_to
Own<t_btree_ii__0_1__11__10> rel_358_delta_constant_points_to = mk<t_btree_ii__0_1__11__10>();
// -- Table: @new_constant_points_to
Own<t_btree_ii__0_1__11__10> rel_359_new_constant_points_to = mk<t_btree_ii__0_1__11__10>();
// -- Table: heap_allocation_by_new
Own<t_btree_ii__0_1__11__10> rel_360_heap_allocation_by_new = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_360_heap_allocation_by_new;
// -- Table: @delta_heap_allocation_by_new
Own<t_btree_ii__0_1__11__10> rel_361_delta_heap_allocation_by_new = mk<t_btree_ii__0_1__11__10>();
// -- Table: @new_heap_allocation_by_new
Own<t_btree_ii__0_1__11__10> rel_362_new_heap_allocation_by_new = mk<t_btree_ii__0_1__11__10>();
// -- Table: alloc_region
Own<t_btree_ii__0_1__11__10> rel_363_alloc_region = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_363_alloc_region;
// -- Table: @delta_alloc_region
Own<t_btree_ii__0_1__11__10> rel_364_delta_alloc_region = mk<t_btree_ii__0_1__11__10>();
// -- Table: @new_alloc_region
Own<t_btree_ii__0_1__11__10> rel_365_new_alloc_region = mk<t_btree_ii__0_1__11__10>();
// -- Table: context
Own<t_btree_i__0__1> rel_366_context = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_366_context;
// -- Table: @delta_context
Own<t_btree_i__0__1> rel_367_delta_context = mk<t_btree_i__0__1>();
// -- Table: @new_context
Own<t_btree_i__0__1> rel_368_new_context = mk<t_btree_i__0__1>();
// -- Table: context_depth
Own<t_btree_ii__1_0__11__01> rel_369_context_depth = mk<t_btree_ii__1_0__11__01>();
souffle::RelationWrapper<t_btree_ii__1_0__11__01> wrapper_rel_369_context_depth;
// -- Table: @delta_context_depth
Own<t_btree_ii__1_0__0__11__10__01> rel_370_delta_context_depth = mk<t_btree_ii__1_0__0__11__10__01>();
// -- Table: @new_context_depth
Own<t_btree_ii__1_0__0__11__10__01> rel_371_new_context_depth = mk<t_btree_ii__1_0__0__11__10__01>();
// -- Table: drop_last
Own<t_btree_ii__1_0__11__01> rel_372_drop_last = mk<t_btree_ii__1_0__11__01>();
souffle::RelationWrapper<t_btree_ii__1_0__11__01> wrapper_rel_372_drop_last;
// -- Table: @delta_drop_last
Own<t_btree_ii__1_0__11__01> rel_373_delta_drop_last = mk<t_btree_ii__1_0__11__01>();
// -- Table: @new_drop_last
Own<t_btree_ii__1_0__11__01> rel_374_new_drop_last = mk<t_btree_ii__1_0__11__01>();
// -- Table: static_subobjects._alloc_subregion
Own<t_btree_iiiiii__0_1__1_0_2_3_4_5__110000__111111__100000__010000> rel_375_static_subobjects_alloc_subregion = mk<t_btree_iiiiii__0_1__1_0_2_3_4_5__110000__111111__100000__010000>();
souffle::RelationWrapper<t_btree_iiiiii__0_1__1_0_2_3_4_5__110000__111111__100000__010000> wrapper_rel_375_static_subobjects_alloc_subregion;
// -- Table: @delta_static_subobjects._alloc_subregion
Own<t_btree_iiiiii__1_0_2__0_3_4_1_2_5__110000__111000__111111__100000__100110__010000> rel_376_delta_static_subobjects_alloc_subregion = mk<t_btree_iiiiii__1_0_2__0_3_4_1_2_5__110000__111000__111111__100000__100110__010000>();
// -- Table: @new_static_subobjects._alloc_subregion
Own<t_btree_iiiiii__1_0_2__0_3_4_1_2_5__110000__111000__111111__100000__100110__010000> rel_377_new_static_subobjects_alloc_subregion = mk<t_btree_iiiiii__1_0_2__0_3_4_1_2_5__110000__111000__111111__100000__100110__010000>();
// -- Table: static_subobjects._non_func_basic_allocation
Own<t_btree_i__0__1> rel_378_static_subobjects_non_func_basic_allocation = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_378_static_subobjects_non_func_basic_allocation;
// -- Table: @delta_static_subobjects._non_func_basic_allocation
Own<t_btree_i__0__1> rel_379_delta_static_subobjects_non_func_basic_allocation = mk<t_btree_i__0__1>();
// -- Table: @new_static_subobjects._non_func_basic_allocation
Own<t_btree_i__0__1> rel_380_new_static_subobjects_non_func_basic_allocation = mk<t_btree_i__0__1>();
// -- Table: static_subobjects.alloc_subregion_at_field
Own<t_btree_iii__0_1_2__110__111> rel_381_static_subobjects_alloc_subregion_at_field = mk<t_btree_iii__0_1_2__110__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__110__111> wrapper_rel_381_static_subobjects_alloc_subregion_at_field;
// -- Table: @delta_static_subobjects.alloc_subregion_at_field
Own<t_btree_iii__0_1_2__110__111> rel_382_delta_static_subobjects_alloc_subregion_at_field = mk<t_btree_iii__0_1_2__110__111>();
// -- Table: @new_static_subobjects.alloc_subregion_at_field
Own<t_btree_iii__0_1_2__110__111> rel_383_new_static_subobjects_alloc_subregion_at_field = mk<t_btree_iii__0_1_2__110__111>();
// -- Table: static_subobjects.alloc_subregion_at_any_array_index
Own<t_btree_ii__0_1__11__10> rel_384_static_subobjects_alloc_subregion_at_any_array_index = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_384_static_subobjects_alloc_subregion_at_any_array_index;
// -- Table: @delta_static_subobjects.alloc_subregion_at_any_array_index
Own<t_btree_ii__0_1__11__10> rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index = mk<t_btree_ii__0_1__11__10>();
// -- Table: @new_static_subobjects.alloc_subregion_at_any_array_index
Own<t_btree_ii__0_1__11__10> rel_386_new_static_subobjects_alloc_subregion_at_any_array_index = mk<t_btree_ii__0_1__11__10>();
// -- Table: static_subobjects.index_in_bounds
Own<t_btree_ii__0_1__11__10> rel_387_static_subobjects_index_in_bounds = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_387_static_subobjects_index_in_bounds;
// -- Table: @delta_static_subobjects.index_in_bounds
Own<t_btree_ii__0_1__11__10> rel_388_delta_static_subobjects_index_in_bounds = mk<t_btree_ii__0_1__11__10>();
// -- Table: @new_static_subobjects.index_in_bounds
Own<t_btree_ii__0_1__11__10> rel_389_new_static_subobjects_index_in_bounds = mk<t_btree_ii__0_1__11__10>();
// -- Table: static_subobjects.alloc_subregion_at_array_index
Own<t_btree_iii__2__0_1_2__001__110__111> rel_390_static_subobjects_alloc_subregion_at_array_index = mk<t_btree_iii__2__0_1_2__001__110__111>();
souffle::RelationWrapper<t_btree_iii__2__0_1_2__001__110__111> wrapper_rel_390_static_subobjects_alloc_subregion_at_array_index;
// -- Table: @delta_static_subobjects.alloc_subregion_at_array_index
Own<t_btree_iii__2__0_1_2__001__100__110__111> rel_391_delta_static_subobjects_alloc_subregion_at_array_index = mk<t_btree_iii__2__0_1_2__001__100__110__111>();
// -- Table: @new_static_subobjects.alloc_subregion_at_array_index
Own<t_btree_iii__2__0_1_2__001__100__110__111> rel_392_new_static_subobjects_alloc_subregion_at_array_index = mk<t_btree_iii__2__0_1_2__001__100__110__111>();
// -- Table: subset.interp_assignment.interp_assignment
Own<t_btree_iiii__0_1_2_3__1111> rel_393_subset_interp_assignment_interp_assignment = mk<t_btree_iiii__0_1_2_3__1111>();
souffle::RelationWrapper<t_btree_iiii__0_1_2_3__1111> wrapper_rel_393_subset_interp_assignment_interp_assignment;
// -- Table: @delta_subset.interp_assignment.interp_assignment
Own<t_btree_iiii__0_1_2_3__1111> rel_394_delta_subset_interp_assignment_interp_assignment = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: @new_subset.interp_assignment.interp_assignment
Own<t_btree_iiii__0_1_2_3__1111> rel_395_new_subset_interp_assignment_interp_assignment = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: subset.type_indication._heap_allocation_by_instr
Own<t_btree_iii__1_0_2__010__111> rel_396_subset_type_indication_heap_allocation_by_instr = mk<t_btree_iii__1_0_2__010__111>();
souffle::RelationWrapper<t_btree_iii__1_0_2__010__111> wrapper_rel_396_subset_type_indication_heap_allocation_by_instr;
// -- Table: @delta_subset.type_indication._heap_allocation_by_instr
Own<t_btree_iii__1_0_2__010__111> rel_397_delta_subset_type_indication_heap_allocation_by_instr = mk<t_btree_iii__1_0_2__010__111>();
// -- Table: @new_subset.type_indication._heap_allocation_by_instr
Own<t_btree_iii__1_0_2__010__111> rel_398_new_subset_type_indication_heap_allocation_by_instr = mk<t_btree_iii__1_0_2__010__111>();
// -- Table: subset.type_indication.heap_allocation_by_type_instr
Own<t_btree_iii__1_0_2__010__111> rel_399_subset_type_indication_heap_allocation_by_type_instr = mk<t_btree_iii__1_0_2__010__111>();
souffle::RelationWrapper<t_btree_iii__1_0_2__010__111> wrapper_rel_399_subset_type_indication_heap_allocation_by_type_instr;
// -- Table: @delta_subset.type_indication.heap_allocation_by_type_instr
Own<t_btree_iii__1_2_0__011__010__111> rel_400_delta_subset_type_indication_heap_allocation_by_type_instr = mk<t_btree_iii__1_2_0__011__010__111>();
// -- Table: @new_subset.type_indication.heap_allocation_by_type_instr
Own<t_btree_iii__1_2_0__011__010__111> rel_401_new_subset_type_indication_heap_allocation_by_type_instr = mk<t_btree_iii__1_2_0__011__010__111>();
// -- Table: subset.type_indication.assign_rebase_alloc
Own<t_btree_iiii__0_1_2_3__1111> rel_402_subset_type_indication_assign_rebase_alloc = mk<t_btree_iiii__0_1_2_3__1111>();
souffle::RelationWrapper<t_btree_iiii__0_1_2_3__1111> wrapper_rel_402_subset_type_indication_assign_rebase_alloc;
// -- Table: @delta_subset.type_indication.assign_rebase_alloc
Own<t_btree_iiii__0_1_2_3__1111> rel_403_delta_subset_type_indication_assign_rebase_alloc = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: @new_subset.type_indication.assign_rebase_alloc
Own<t_btree_iiii__0_1_2_3__1111> rel_404_new_subset_type_indication_assign_rebase_alloc = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: subset.type_indication.stack_allocation_by_type_instr
Own<t_btree_iii__1_0_2__010__111> rel_405_subset_type_indication_stack_allocation_by_type_instr = mk<t_btree_iii__1_0_2__010__111>();
souffle::RelationWrapper<t_btree_iii__1_0_2__010__111> wrapper_rel_405_subset_type_indication_stack_allocation_by_type_instr;
// -- Table: @delta_subset.type_indication.stack_allocation_by_type_instr
Own<t_btree_iii__1_2_0__011__010__111> rel_406_delta_subset_type_indication_stack_allocation_by_type_instr = mk<t_btree_iii__1_2_0__011__010__111>();
// -- Table: @new_subset.type_indication.stack_allocation_by_type_instr
Own<t_btree_iii__1_2_0__011__010__111> rel_407_new_subset_type_indication_stack_allocation_by_type_instr = mk<t_btree_iii__1_2_0__011__010__111>();
// -- Table: subset.type_indication.ty_indication
Own<t_btree_iii__2_0_1__001__111> rel_408_subset_type_indication_ty_indication = mk<t_btree_iii__2_0_1__001__111>();
souffle::RelationWrapper<t_btree_iii__2_0_1__001__111> wrapper_rel_408_subset_type_indication_ty_indication;
// -- Table: @delta_subset.type_indication.ty_indication
Own<t_btree_iii__2_0_1__001__101__111> rel_409_delta_subset_type_indication_ty_indication = mk<t_btree_iii__2_0_1__001__101__111>();
// -- Table: @new_subset.type_indication.ty_indication
Own<t_btree_iii__2_0_1__001__101__111> rel_410_new_subset_type_indication_ty_indication = mk<t_btree_iii__2_0_1__001__101__111>();
// -- Table: subset.callgraph.reachable_context
Own<t_btree_ii__1_0__11__01> rel_411_subset_callgraph_reachable_context = mk<t_btree_ii__1_0__11__01>();
souffle::RelationWrapper<t_btree_ii__1_0__11__01> wrapper_rel_411_subset_callgraph_reachable_context;
// -- Table: @delta_subset.callgraph.reachable_context
Own<t_btree_ii__1_0__11__01> rel_412_delta_subset_callgraph_reachable_context = mk<t_btree_ii__1_0__11__01>();
// -- Table: @new_subset.callgraph.reachable_context
Own<t_btree_ii__1_0__11__01> rel_413_new_subset_callgraph_reachable_context = mk<t_btree_ii__1_0__11__01>();
// -- Table: subset.callgraph.reachable_func
Own<t_btree_i__0__1> rel_414_subset_callgraph_reachable_func = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_414_subset_callgraph_reachable_func;
// -- Table: @delta_subset.callgraph.reachable_func
Own<t_btree_i__0__1> rel_415_delta_subset_callgraph_reachable_func = mk<t_btree_i__0__1>();
// -- Table: @new_subset.callgraph.reachable_func
Own<t_btree_i__0__1> rel_416_new_subset_callgraph_reachable_func = mk<t_btree_i__0__1>();
// -- Table: subset.callgraph.reachable_store
Own<t_btree_iii__0_2__0_1_2__101__110__111> rel_417_subset_callgraph_reachable_store = mk<t_btree_iii__0_2__0_1_2__101__110__111>();
souffle::RelationWrapper<t_btree_iii__0_2__0_1_2__101__110__111> wrapper_rel_417_subset_callgraph_reachable_store;
// -- Table: @delta_subset.callgraph.reachable_store
Own<t_btree_iii__0_1_2__111> rel_418_delta_subset_callgraph_reachable_store = mk<t_btree_iii__0_1_2__111>();
// -- Table: @new_subset.callgraph.reachable_store
Own<t_btree_iii__0_1_2__111> rel_419_new_subset_callgraph_reachable_store = mk<t_btree_iii__0_1_2__111>();
// -- Table: subset.callgraph.reachable_load
Own<t_btree_iii__0_2_1__101__111> rel_420_subset_callgraph_reachable_load = mk<t_btree_iii__0_2_1__101__111>();
souffle::RelationWrapper<t_btree_iii__0_2_1__101__111> wrapper_rel_420_subset_callgraph_reachable_load;
// -- Table: @delta_subset.callgraph.reachable_load
Own<t_btree_iii__0_1_2__111> rel_421_delta_subset_callgraph_reachable_load = mk<t_btree_iii__0_1_2__111>();
// -- Table: @new_subset.callgraph.reachable_load
Own<t_btree_iii__0_1_2__111> rel_422_new_subset_callgraph_reachable_load = mk<t_btree_iii__0_1_2__111>();
// -- Table: subset.callgraph.callgraph_edge
Own<t_btree_iiii__0_1_2_3__1111> rel_423_subset_callgraph_callgraph_edge = mk<t_btree_iiii__0_1_2_3__1111>();
souffle::RelationWrapper<t_btree_iiii__0_1_2_3__1111> wrapper_rel_423_subset_callgraph_callgraph_edge;
// -- Table: @delta_subset.callgraph.callgraph_edge
Own<t_btree_iiii__1_0_2_3__1111__0100> rel_424_delta_subset_callgraph_callgraph_edge = mk<t_btree_iiii__1_0_2_3__1111__0100>();
// -- Table: @new_subset.callgraph.callgraph_edge
Own<t_btree_iiii__1_0_2_3__1111__0100> rel_425_new_subset_callgraph_callgraph_edge = mk<t_btree_iiii__1_0_2_3__1111__0100>();
// -- Table: subset.callgraph._callgraph_edge_interim_direct_call
Own<t_btree_iii__0_1_2__111> rel_426_subset_callgraph_callgraph_edge_interim_direct_call = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_426_subset_callgraph_callgraph_edge_interim_direct_call;
// -- Table: @delta_subset.callgraph._callgraph_edge_interim_direct_call
Own<t_btree_iii__0_1_2__111> rel_427_delta_subset_callgraph_callgraph_edge_interim_direct_call = mk<t_btree_iii__0_1_2__111>();
// -- Table: @new_subset.callgraph._callgraph_edge_interim_direct_call
Own<t_btree_iii__0_1_2__111> rel_428_new_subset_callgraph_callgraph_edge_interim_direct_call = mk<t_btree_iii__0_1_2__111>();
// -- Table: subset.callgraph._callgraph_edge_interim_direct_invoke
Own<t_btree_iii__0_1_2__111> rel_429_subset_callgraph_callgraph_edge_interim_direct_invoke = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_429_subset_callgraph_callgraph_edge_interim_direct_invoke;
// -- Table: @delta_subset.callgraph._callgraph_edge_interim_direct_invoke
Own<t_btree_iii__0_1_2__111> rel_430_delta_subset_callgraph_callgraph_edge_interim_direct_invoke = mk<t_btree_iii__0_1_2__111>();
// -- Table: @new_subset.callgraph._callgraph_edge_interim_direct_invoke
Own<t_btree_iii__0_1_2__111> rel_431_new_subset_callgraph_callgraph_edge_interim_direct_invoke = mk<t_btree_iii__0_1_2__111>();
// -- Table: subset.callgraph._callgraph_edge_interim_indirect_call
Own<t_btree_iiii__0_1_2_3__1111> rel_432_subset_callgraph_callgraph_edge_interim_indirect_call = mk<t_btree_iiii__0_1_2_3__1111>();
souffle::RelationWrapper<t_btree_iiii__0_1_2_3__1111> wrapper_rel_432_subset_callgraph_callgraph_edge_interim_indirect_call;
// -- Table: @delta_subset.callgraph._callgraph_edge_interim_indirect_call
Own<t_btree_iiii__0_1_2_3__1111> rel_433_delta_subset_callgraph_callgraph_edge_interim_indirect_call = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: @new_subset.callgraph._callgraph_edge_interim_indirect_call
Own<t_btree_iiii__0_1_2_3__1111> rel_434_new_subset_callgraph_callgraph_edge_interim_indirect_call = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: subset.callgraph._callgraph_edge_interim_indirect_invoke
Own<t_btree_iiii__0_1_2_3__1111> rel_435_subset_callgraph_callgraph_edge_interim_indirect_invoke = mk<t_btree_iiii__0_1_2_3__1111>();
souffle::RelationWrapper<t_btree_iiii__0_1_2_3__1111> wrapper_rel_435_subset_callgraph_callgraph_edge_interim_indirect_invoke;
// -- Table: @delta_subset.callgraph._callgraph_edge_interim_indirect_invoke
Own<t_btree_iiii__0_1_2_3__1111> rel_436_delta_subset_callgraph_callgraph_edge_interim_indirect_invoke = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: @new_subset.callgraph._callgraph_edge_interim_indirect_invoke
Own<t_btree_iiii__0_1_2_3__1111> rel_437_new_subset_callgraph_callgraph_edge_interim_indirect_invoke = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: subset.var_points_to
Own<t_btree_iiii__2_3_1_0__1_0_3__1111__1101__0111__0100__0011> rel_438_subset_var_points_to = mk<t_btree_iiii__2_3_1_0__1_0_3__1111__1101__0111__0100__0011>();
souffle::RelationWrapper<t_btree_iiii__2_3_1_0__1_0_3__1111__1101__0111__0100__0011> wrapper_rel_438_subset_var_points_to;
// -- Table: @delta_subset.var_points_to
Own<t_btree_iiii__2_3_0_1__0_1_3__1111__1101__0011> rel_439_delta_subset_var_points_to = mk<t_btree_iiii__2_3_0_1__0_1_3__1111__1101__0011>();
// -- Table: @new_subset.var_points_to
Own<t_btree_iiii__2_3_0_1__0_1_3__1111__1101__0011> rel_440_new_subset_var_points_to = mk<t_btree_iiii__2_3_0_1__0_1_3__1111__1101__0011>();
// -- Table: subset.ptr_points_to
Own<t_btree_iiii__2_3_0_1__1__1111__0100__0011> rel_441_subset_ptr_points_to = mk<t_btree_iiii__2_3_0_1__1__1111__0100__0011>();
souffle::RelationWrapper<t_btree_iiii__2_3_0_1__1__1111__0100__0011> wrapper_rel_441_subset_ptr_points_to;
// -- Table: @delta_subset.ptr_points_to
Own<t_btree_iiii__2_3_0_1__1111__0011> rel_442_delta_subset_ptr_points_to = mk<t_btree_iiii__2_3_0_1__1111__0011>();
// -- Table: @new_subset.ptr_points_to
Own<t_btree_iiii__2_3_0_1__1111__0011> rel_443_new_subset_ptr_points_to = mk<t_btree_iiii__2_3_0_1__1111__0011>();
// -- Table: subset.operand_points_to
Own<t_btree_iiii__3_2_0_1__1_0__1111__1100__0100__0011__0001> rel_444_subset_operand_points_to = mk<t_btree_iiii__3_2_0_1__1_0__1111__1100__0100__0011__0001>();
souffle::RelationWrapper<t_btree_iiii__3_2_0_1__1_0__1111__1100__0100__0011__0001> wrapper_rel_444_subset_operand_points_to;
// -- Table: @delta_subset.operand_points_to
Own<t_btree_iiii__3_2_1_0__1111__0111__0011__0001> rel_445_delta_subset_operand_points_to = mk<t_btree_iiii__3_2_1_0__1111__0111__0011__0001>();
// -- Table: @new_subset.operand_points_to
Own<t_btree_iiii__3_2_1_0__1111__0111__0011__0001> rel_446_new_subset_operand_points_to = mk<t_btree_iiii__3_2_1_0__1111__0111__0011__0001>();
// -- Table: subset_signatures.sig_ptr_points_to
Own<t_btree_iiii__0_1_2_3__1111> rel_447_subset_signatures_sig_ptr_points_to = mk<t_btree_iiii__0_1_2_3__1111>();
souffle::RelationWrapper<t_btree_iiii__0_1_2_3__1111> wrapper_rel_447_subset_signatures_sig_ptr_points_to;
// -- Table: @delta_subset_signatures.sig_ptr_points_to
Own<t_btree_iiii__0_1_2_3__1111> rel_448_delta_subset_signatures_sig_ptr_points_to = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: @new_subset_signatures.sig_ptr_points_to
Own<t_btree_iiii__0_1_2_3__1111> rel_449_new_subset_signatures_sig_ptr_points_to = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: subset_signatures._sig_var_alloc
Own<t_btree_iiiii__0_1_2_3_4__11111> rel_450_subset_signatures_sig_var_alloc = mk<t_btree_iiiii__0_1_2_3_4__11111>();
souffle::RelationWrapper<t_btree_iiiii__0_1_2_3_4__11111> wrapper_rel_450_subset_signatures_sig_var_alloc;
// -- Table: @delta_subset_signatures._sig_var_alloc
Own<t_btree_iiiii__0_1_2_3_4__11111> rel_451_delta_subset_signatures_sig_var_alloc = mk<t_btree_iiiii__0_1_2_3_4__11111>();
// -- Table: @new_subset_signatures._sig_var_alloc
Own<t_btree_iiiii__0_1_2_3_4__11111> rel_452_new_subset_signatures_sig_var_alloc = mk<t_btree_iiiii__0_1_2_3_4__11111>();
// -- Table: subset_signatures._sig_ptr_alloc
Own<t_btree_iiiii__0_1_2_3_4__11111> rel_453_subset_signatures_sig_ptr_alloc = mk<t_btree_iiiii__0_1_2_3_4__11111>();
souffle::RelationWrapper<t_btree_iiiii__0_1_2_3_4__11111> wrapper_rel_453_subset_signatures_sig_ptr_alloc;
// -- Table: @delta_subset_signatures._sig_ptr_alloc
Own<t_btree_iiiii__0_1_2_3_4__11111> rel_454_delta_subset_signatures_sig_ptr_alloc = mk<t_btree_iiiii__0_1_2_3_4__11111>();
// -- Table: @new_subset_signatures._sig_ptr_alloc
Own<t_btree_iiiii__0_1_2_3_4__11111> rel_455_new_subset_signatures_sig_ptr_alloc = mk<t_btree_iiiii__0_1_2_3_4__11111>();
// -- Table: subset_signatures.signature_var_points_to_base
Own<t_btree_iiii__0_1_2_3__1111> rel_456_subset_signatures_signature_var_points_to_base = mk<t_btree_iiii__0_1_2_3__1111>();
souffle::RelationWrapper<t_btree_iiii__0_1_2_3__1111> wrapper_rel_456_subset_signatures_signature_var_points_to_base;
// -- Table: @delta_subset_signatures.signature_var_points_to_base
Own<t_btree_iiii__0_1_2_3__1111> rel_457_delta_subset_signatures_signature_var_points_to_base = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: @new_subset_signatures.signature_var_points_to_base
Own<t_btree_iiii__0_1_2_3__1111> rel_458_new_subset_signatures_signature_var_points_to_base = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: subset_signatures.signature_ptr_points_to_base
Own<t_btree_iiii__0_1_2_3__1111> rel_459_subset_signatures_signature_ptr_points_to_base = mk<t_btree_iiii__0_1_2_3__1111>();
souffle::RelationWrapper<t_btree_iiii__0_1_2_3__1111> wrapper_rel_459_subset_signatures_signature_ptr_points_to_base;
// -- Table: @delta_subset_signatures.signature_ptr_points_to_base
Own<t_btree_iiii__0_1_2_3__1111> rel_460_delta_subset_signatures_signature_ptr_points_to_base = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: @new_subset_signatures.signature_ptr_points_to_base
Own<t_btree_iiii__0_1_2_3__1111> rel_461_new_subset_signatures_signature_ptr_points_to_base = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: subset_signatures.memcpy_sig
Own<t_btree_iiii__0_1_2_3__1111> rel_462_subset_signatures_memcpy_sig = mk<t_btree_iiii__0_1_2_3__1111>();
souffle::RelationWrapper<t_btree_iiii__0_1_2_3__1111> wrapper_rel_462_subset_signatures_memcpy_sig;
// -- Table: @delta_subset_signatures.memcpy_sig
Own<t_btree_iiii__0_1_2_3__1111> rel_463_delta_subset_signatures_memcpy_sig = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: @new_subset_signatures.memcpy_sig
Own<t_btree_iiii__0_1_2_3__1111> rel_464_new_subset_signatures_memcpy_sig = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: subset_signatures._ptr_reaches_to_request
Own<t_btree_ii__0_1__11> rel_465_subset_signatures_ptr_reaches_to_request = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_465_subset_signatures_ptr_reaches_to_request;
// -- Table: @delta_subset_signatures._ptr_reaches_to_request
Own<t_btree_ii__0_1__11> rel_466_delta_subset_signatures_ptr_reaches_to_request = mk<t_btree_ii__0_1__11>();
// -- Table: @new_subset_signatures._ptr_reaches_to_request
Own<t_btree_ii__0_1__11> rel_467_new_subset_signatures_ptr_reaches_to_request = mk<t_btree_ii__0_1__11>();
// -- Table: subset_signatures._ptr_reaches_to
Own<t_btree_iiii__2_3_0_1__1111__0011> rel_468_subset_signatures_ptr_reaches_to = mk<t_btree_iiii__2_3_0_1__1111__0011>();
souffle::RelationWrapper<t_btree_iiii__2_3_0_1__1111__0011> wrapper_rel_468_subset_signatures_ptr_reaches_to;
// -- Table: @delta_subset_signatures._ptr_reaches_to
Own<t_btree_iiii__2_3_0_1__1111__0011> rel_469_delta_subset_signatures_ptr_reaches_to = mk<t_btree_iiii__2_3_0_1__1111__0011>();
// -- Table: @new_subset_signatures._ptr_reaches_to
Own<t_btree_iiii__2_3_0_1__1111__0011> rel_470_new_subset_signatures_ptr_reaches_to = mk<t_btree_iiii__2_3_0_1__1111__0011>();
// -- Table: subset_memcpy._memcpy_call
Own<t_btree_iiii__0_1_2_3__1111> rel_471_subset_memcpy_memcpy_call = mk<t_btree_iiii__0_1_2_3__1111>();
souffle::RelationWrapper<t_btree_iiii__0_1_2_3__1111> wrapper_rel_471_subset_memcpy_memcpy_call;
// -- Table: @delta_subset_memcpy._memcpy_call
Own<t_btree_iiii__0_1_2_3__1111> rel_472_delta_subset_memcpy_memcpy_call = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: @new_subset_memcpy._memcpy_call
Own<t_btree_iiii__0_1_2_3__1111> rel_473_new_subset_memcpy_memcpy_call = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: subset_memcpy._try_memcpy
Own<t_btree_iiiii__0_1_2_3_4__11111> rel_474_subset_memcpy_try_memcpy = mk<t_btree_iiiii__0_1_2_3_4__11111>();
souffle::RelationWrapper<t_btree_iiiii__0_1_2_3_4__11111> wrapper_rel_474_subset_memcpy_try_memcpy;
// -- Table: @delta_subset_memcpy._try_memcpy
Own<t_btree_iiiii__0_1_2_3_4__11111> rel_475_delta_subset_memcpy_try_memcpy = mk<t_btree_iiiii__0_1_2_3_4__11111>();
// -- Table: @new_subset_memcpy._try_memcpy
Own<t_btree_iiiii__0_1_2_3_4__11111> rel_476_new_subset_memcpy_try_memcpy = mk<t_btree_iiiii__0_1_2_3_4__11111>();
// -- Table: subset_memcpy._stripctx_memcpy
Own<t_btree_iii__0_1_2__111> rel_477_subset_memcpy_stripctx_memcpy = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_477_subset_memcpy_stripctx_memcpy;
// -- Table: @delta_subset_memcpy._stripctx_memcpy
Own<t_btree_iii__0_1_2__111> rel_478_delta_subset_memcpy_stripctx_memcpy = mk<t_btree_iii__0_1_2__111>();
// -- Table: @new_subset_memcpy._stripctx_memcpy
Own<t_btree_iii__0_1_2__111> rel_479_new_subset_memcpy_stripctx_memcpy = mk<t_btree_iii__0_1_2__111>();
// -- Table: subset_memcpy._type_compatible_memcpy
Own<t_btree_iii__0_1_2__111> rel_480_subset_memcpy_type_compatible_memcpy = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_480_subset_memcpy_type_compatible_memcpy;
// -- Table: @delta_subset_memcpy._type_compatible_memcpy
Own<t_btree_iii__0_1_2__111> rel_481_delta_subset_memcpy_type_compatible_memcpy = mk<t_btree_iii__0_1_2__111>();
// -- Table: @new_subset_memcpy._type_compatible_memcpy
Own<t_btree_iii__0_1_2__111> rel_482_new_subset_memcpy_type_compatible_memcpy = mk<t_btree_iii__0_1_2__111>();
// -- Table: subset_memcpy._well_typed_and_sized_memcpy
Own<t_btree_iii__0_1_2__111> rel_483_subset_memcpy_well_typed_and_sized_memcpy = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_483_subset_memcpy_well_typed_and_sized_memcpy;
// -- Table: @delta_subset_memcpy._well_typed_and_sized_memcpy
Own<t_btree_iii__0_1_2__111> rel_484_delta_subset_memcpy_well_typed_and_sized_memcpy = mk<t_btree_iii__0_1_2__111>();
// -- Table: @new_subset_memcpy._well_typed_and_sized_memcpy
Own<t_btree_iii__0_1_2__111> rel_485_new_subset_memcpy_well_typed_and_sized_memcpy = mk<t_btree_iii__0_1_2__111>();
// -- Table: subset_memcpy._do_memcpy
Own<t_btree_iiii__0_1_2_3__1111> rel_486_subset_memcpy_do_memcpy = mk<t_btree_iiii__0_1_2_3__1111>();
souffle::RelationWrapper<t_btree_iiii__0_1_2_3__1111> wrapper_rel_486_subset_memcpy_do_memcpy;
// -- Table: @delta_subset_memcpy._do_memcpy
Own<t_btree_iiii__0_1_2_3__1111> rel_487_delta_subset_memcpy_do_memcpy = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: @new_subset_memcpy._do_memcpy
Own<t_btree_iiii__0_1_2_3__1111> rel_488_new_subset_memcpy_do_memcpy = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: subset_memcpy.rec_memcpy
Own<t_btree_iiii__0_1_2_3__1111> rel_489_subset_memcpy_rec_memcpy = mk<t_btree_iiii__0_1_2_3__1111>();
souffle::RelationWrapper<t_btree_iiii__0_1_2_3__1111> wrapper_rel_489_subset_memcpy_rec_memcpy;
// -- Table: @delta_subset_memcpy.rec_memcpy
Own<t_btree_iiii__0_1_2_3__1111> rel_490_delta_subset_memcpy_rec_memcpy = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: @new_subset_memcpy.rec_memcpy
Own<t_btree_iiii__0_1_2_3__1111> rel_491_new_subset_memcpy_rec_memcpy = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: subset_gep._alloc_type_and_path
Own<t_btree_iii__0_1_2__100__111> rel_492_subset_gep_alloc_type_and_path = mk<t_btree_iii__0_1_2__100__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__100__111> wrapper_rel_492_subset_gep_alloc_type_and_path;
// -- Table: @delta_subset_gep._alloc_type_and_path
Own<t_btree_iii__0_1_2__100__111> rel_493_delta_subset_gep_alloc_type_and_path = mk<t_btree_iii__0_1_2__100__111>();
// -- Table: @new_subset_gep._alloc_type_and_path
Own<t_btree_iii__0_1_2__100__111> rel_494_new_subset_gep_alloc_type_and_path = mk<t_btree_iii__0_1_2__100__111>();
// -- Table: subset_gep._some_alloc_type_and_path
Own<t_btree_ii__0_1__11> rel_495_subset_gep_some_alloc_type_and_path = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_495_subset_gep_some_alloc_type_and_path;
// -- Table: @delta_subset_gep._some_alloc_type_and_path
Own<t_btree_ii__0_1__11> rel_496_delta_subset_gep_some_alloc_type_and_path = mk<t_btree_ii__0_1__11>();
// -- Table: @new_subset_gep._some_alloc_type_and_path
Own<t_btree_ii__0_1__11> rel_497_new_subset_gep_some_alloc_type_and_path = mk<t_btree_ii__0_1__11>();
// -- Table: subset_gep._gep_type_compatible
Own<t_btree_iii__0_1_2__111> rel_498_subset_gep_gep_type_compatible = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_498_subset_gep_gep_type_compatible;
// -- Table: @delta_subset_gep._gep_type_compatible
Own<t_btree_iii__0_1_2__111> rel_499_delta_subset_gep_gep_type_compatible = mk<t_btree_iii__0_1_2__111>();
// -- Table: @new_subset_gep._gep_type_compatible
Own<t_btree_iii__0_1_2__111> rel_500_new_subset_gep_gep_type_compatible = mk<t_btree_iii__0_1_2__111>();
// -- Table: subset_gep.gep_indexes_from
Own<t_btree_iiiii__1_0_2_3_4__11111__01000> rel_501_subset_gep_gep_indexes_from = mk<t_btree_iiiii__1_0_2_3_4__11111__01000>();
souffle::RelationWrapper<t_btree_iiiii__1_0_2_3_4__11111__01000> wrapper_rel_501_subset_gep_gep_indexes_from;
// -- Table: @delta_subset_gep.gep_indexes_from
Own<t_btree_iiiii__1_0_2_3_4__11111__01000> rel_502_delta_subset_gep_gep_indexes_from = mk<t_btree_iiiii__1_0_2_3_4__11111__01000>();
// -- Table: @new_subset_gep.gep_indexes_from
Own<t_btree_iiiii__1_0_2_3_4__11111__01000> rel_503_new_subset_gep_gep_indexes_from = mk<t_btree_iiiii__1_0_2_3_4__11111__01000>();
// -- Table: subset_gep.gep_points_to
Own<t_btree_iiii__0_1_2_3__1111__1100> rel_504_subset_gep_gep_points_to = mk<t_btree_iiii__0_1_2_3__1111__1100>();
souffle::RelationWrapper<t_btree_iiii__0_1_2_3__1111__1100> wrapper_rel_504_subset_gep_gep_points_to;
// -- Table: @delta_subset_gep.gep_points_to
Own<t_btree_iiii__0_1_2_3__1111__1100> rel_505_delta_subset_gep_gep_points_to = mk<t_btree_iiii__0_1_2_3__1111__1100>();
// -- Table: @new_subset_gep.gep_points_to
Own<t_btree_iiii__0_1_2_3__1111__1100> rel_506_new_subset_gep_gep_points_to = mk<t_btree_iiii__0_1_2_3__1111__1100>();
// -- Table: subset_gep._gep_last_index_points_to
Own<t_btree_iii__0_1_2__111> rel_507_subset_gep_gep_last_index_points_to = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_507_subset_gep_gep_last_index_points_to;
// -- Table: @delta_subset_gep._gep_last_index_points_to
Own<t_btree_iii__0_1_2__111> rel_508_delta_subset_gep_gep_last_index_points_to = mk<t_btree_iii__0_1_2__111>();
// -- Table: @new_subset_gep._gep_last_index_points_to
Own<t_btree_iii__0_1_2__111> rel_509_new_subset_gep_gep_last_index_points_to = mk<t_btree_iii__0_1_2__111>();
// -- Table: subset_gep._gep_address_ctx_points_to
Own<t_btree_iiii__2_3_0_1__1111__0011> rel_510_subset_gep_gep_address_ctx_points_to = mk<t_btree_iiii__2_3_0_1__1111__0011>();
souffle::RelationWrapper<t_btree_iiii__2_3_0_1__1111__0011> wrapper_rel_510_subset_gep_gep_address_ctx_points_to;
// -- Table: @delta_subset_gep._gep_address_ctx_points_to
Own<t_btree_iiii__2_3_0_1__1111__0011> rel_511_delta_subset_gep_gep_address_ctx_points_to = mk<t_btree_iiii__2_3_0_1__1111__0011>();
// -- Table: @new_subset_gep._gep_address_ctx_points_to
Own<t_btree_iiii__2_3_0_1__1111__0011> rel_512_new_subset_gep_gep_address_ctx_points_to = mk<t_btree_iiii__2_3_0_1__1111__0011>();
// -- Table: subset_cplusplus.is_init_by_ctor
Own<t_btree_iiii__0_2_3_1__1011__1111> rel_513_subset_cplusplus_is_init_by_ctor = mk<t_btree_iiii__0_2_3_1__1011__1111>();
souffle::RelationWrapper<t_btree_iiii__0_2_3_1__1011__1111> wrapper_rel_513_subset_cplusplus_is_init_by_ctor;
// -- Table: @delta_subset_cplusplus.is_init_by_ctor
Own<t_btree_iiii__0_2_3_1__1011__1111> rel_514_delta_subset_cplusplus_is_init_by_ctor = mk<t_btree_iiii__0_2_3_1__1011__1111>();
// -- Table: @new_subset_cplusplus.is_init_by_ctor
Own<t_btree_iiii__0_2_3_1__1011__1111> rel_515_new_subset_cplusplus_is_init_by_ctor = mk<t_btree_iiii__0_2_3_1__1011__1111>();
// -- Table: subset_at_exit._registers_dtor_atexit
Own<t_btree_iii__0_1_2__111> rel_516_subset_at_exit_registers_dtor_atexit = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_516_subset_at_exit_registers_dtor_atexit;
// -- Table: @delta_subset_at_exit._registers_dtor_atexit
Own<t_btree_iii__0_1_2__111> rel_517_delta_subset_at_exit_registers_dtor_atexit = mk<t_btree_iii__0_1_2__111>();
// -- Table: @new_subset_at_exit._registers_dtor_atexit
Own<t_btree_iii__0_1_2__111> rel_518_new_subset_at_exit_registers_dtor_atexit = mk<t_btree_iii__0_1_2__111>();
// -- Table: subset_at_exit._registers_atexit
Own<t_btree_ii__0_1__11> rel_519_subset_at_exit_registers_atexit = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_519_subset_at_exit_registers_atexit;
// -- Table: @delta_subset_at_exit._registers_atexit
Own<t_btree_ii__0_1__11> rel_520_delta_subset_at_exit_registers_atexit = mk<t_btree_ii__0_1__11>();
// -- Table: @new_subset_at_exit._registers_atexit
Own<t_btree_ii__0_1__11> rel_521_new_subset_at_exit_registers_atexit = mk<t_btree_ii__0_1__11>();
// -- Table: subset_at_exit.called_at_exit
Own<t_btree_i__0__1> rel_522_subset_at_exit_called_at_exit = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_522_subset_at_exit_called_at_exit;
// -- Table: @delta_subset_at_exit.called_at_exit
Own<t_btree_i__0__1> rel_523_delta_subset_at_exit_called_at_exit = mk<t_btree_i__0__1>();
// -- Table: @new_subset_at_exit.called_at_exit
Own<t_btree_i__0__1> rel_524_new_subset_at_exit_called_at_exit = mk<t_btree_i__0__1>();
// -- Table: subset_at_exit._dtor_accepts_recv
Own<t_btree_iii__0_1_2__111> rel_525_subset_at_exit_dtor_accepts_recv = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_525_subset_at_exit_dtor_accepts_recv;
// -- Table: @delta_subset_at_exit._dtor_accepts_recv
Own<t_btree_iii__0_1_2__111> rel_526_delta_subset_at_exit_dtor_accepts_recv = mk<t_btree_iii__0_1_2__111>();
// -- Table: @new_subset_at_exit._dtor_accepts_recv
Own<t_btree_iii__0_1_2__111> rel_527_new_subset_at_exit_dtor_accepts_recv = mk<t_btree_iii__0_1_2__111>();
// -- Table: subset_at_exit.at_exit_var_points_to
Own<t_btree_iiii__0_1_2_3__1111> rel_528_subset_at_exit_at_exit_var_points_to = mk<t_btree_iiii__0_1_2_3__1111>();
souffle::RelationWrapper<t_btree_iiii__0_1_2_3__1111> wrapper_rel_528_subset_at_exit_at_exit_var_points_to;
// -- Table: @delta_subset_at_exit.at_exit_var_points_to
Own<t_btree_iiii__0_1_2_3__1111> rel_529_delta_subset_at_exit_at_exit_var_points_to = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: @new_subset_at_exit.at_exit_var_points_to
Own<t_btree_iiii__0_1_2_3__1111> rel_530_new_subset_at_exit_at_exit_var_points_to = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: subset_allocations.allocated_at
Own<t_btree_iiii__0_1_2_3__1111> rel_531_subset_allocations_allocated_at = mk<t_btree_iiii__0_1_2_3__1111>();
souffle::RelationWrapper<t_btree_iiii__0_1_2_3__1111> wrapper_rel_531_subset_allocations_allocated_at;
// -- Table: @delta_subset_allocations.allocated_at
Own<t_btree_iiii__0_1_2_3__1111> rel_532_delta_subset_allocations_allocated_at = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: @new_subset_allocations.allocated_at
Own<t_btree_iiii__0_1_2_3__1111> rel_533_new_subset_allocations_allocated_at = mk<t_btree_iiii__0_1_2_3__1111>();
// -- Table: subset_allocation_type.allocation_type
Own<t_btree_ii__0_1__11__10> rel_534_subset_allocation_type_allocation_type = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_534_subset_allocation_type_allocation_type;
// -- Table: @delta_subset_allocation_type.allocation_type
Own<t_btree_ii__0_1__11__10> rel_535_delta_subset_allocation_type_allocation_type = mk<t_btree_ii__0_1__11__10>();
// -- Table: @new_subset_allocation_type.allocation_type
Own<t_btree_ii__0_1__11__10> rel_536_new_subset_allocation_type_allocation_type = mk<t_btree_ii__0_1__11__10>();
// -- Table: subset_subobjects._alloc_subregion
Own<t_btree_iiiiii__0_1__1_0_2_3_4_5__110000__111111__100000__010000> rel_537_subset_subobjects_alloc_subregion = mk<t_btree_iiiiii__0_1__1_0_2_3_4_5__110000__111111__100000__010000>();
souffle::RelationWrapper<t_btree_iiiiii__0_1__1_0_2_3_4_5__110000__111111__100000__010000> wrapper_rel_537_subset_subobjects_alloc_subregion;
// -- Table: @delta_subset_subobjects._alloc_subregion
Own<t_btree_iiiiii__1_0__0_2_1__0_3_4_1_2_5__110000__111000__111111__100000__100110__101000__010000> rel_538_delta_subset_subobjects_alloc_subregion = mk<t_btree_iiiiii__1_0__0_2_1__0_3_4_1_2_5__110000__111000__111111__100000__100110__101000__010000>();
// -- Table: @new_subset_subobjects._alloc_subregion
Own<t_btree_iiiiii__1_0__0_2_1__0_3_4_1_2_5__110000__111000__111111__100000__100110__101000__010000> rel_539_new_subset_subobjects_alloc_subregion = mk<t_btree_iiiiii__1_0__0_2_1__0_3_4_1_2_5__110000__111000__111111__100000__100110__101000__010000>();
// -- Table: subset_subobjects._non_func_basic_allocation
Own<t_btree_i__0__1> rel_540_subset_subobjects_non_func_basic_allocation = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_540_subset_subobjects_non_func_basic_allocation;
// -- Table: @delta_subset_subobjects._non_func_basic_allocation
Own<t_btree_i__0__1> rel_541_delta_subset_subobjects_non_func_basic_allocation = mk<t_btree_i__0__1>();
// -- Table: @new_subset_subobjects._non_func_basic_allocation
Own<t_btree_i__0__1> rel_542_new_subset_subobjects_non_func_basic_allocation = mk<t_btree_i__0__1>();
// -- Table: subset_subobjects.alloc_subregion_at_field
Own<t_btree_iii__0_1_2__100__110__111> rel_543_subset_subobjects_alloc_subregion_at_field = mk<t_btree_iii__0_1_2__100__110__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__100__110__111> wrapper_rel_543_subset_subobjects_alloc_subregion_at_field;
// -- Table: @delta_subset_subobjects.alloc_subregion_at_field
Own<t_btree_iii__0_2__1_0_2__010__100__101__110__111> rel_544_delta_subset_subobjects_alloc_subregion_at_field = mk<t_btree_iii__0_2__1_0_2__010__100__101__110__111>();
// -- Table: @new_subset_subobjects.alloc_subregion_at_field
Own<t_btree_iii__0_2__1_0_2__010__100__101__110__111> rel_545_new_subset_subobjects_alloc_subregion_at_field = mk<t_btree_iii__0_2__1_0_2__010__100__101__110__111>();
// -- Table: subset_subobjects.alloc_subregion_at_any_array_index
Own<t_btree_ii__1_0__0__11__10__01> rel_546_subset_subobjects_alloc_subregion_at_any_array_index = mk<t_btree_ii__1_0__0__11__10__01>();
souffle::RelationWrapper<t_btree_ii__1_0__0__11__10__01> wrapper_rel_546_subset_subobjects_alloc_subregion_at_any_array_index;
// -- Table: @delta_subset_subobjects.alloc_subregion_at_any_array_index
Own<t_btree_ii__1_0__0__11__10__01> rel_547_delta_subset_subobjects_alloc_subregion_at_any_array_index = mk<t_btree_ii__1_0__0__11__10__01>();
// -- Table: @new_subset_subobjects.alloc_subregion_at_any_array_index
Own<t_btree_ii__1_0__0__11__10__01> rel_548_new_subset_subobjects_alloc_subregion_at_any_array_index = mk<t_btree_ii__1_0__0__11__10__01>();
// -- Table: subset_subobjects.index_in_bounds
Own<t_btree_ii__0_1__11__10> rel_549_subset_subobjects_index_in_bounds = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_549_subset_subobjects_index_in_bounds;
// -- Table: @delta_subset_subobjects.index_in_bounds
Own<t_btree_ii__0_1__11__10> rel_550_delta_subset_subobjects_index_in_bounds = mk<t_btree_ii__0_1__11__10>();
// -- Table: @new_subset_subobjects.index_in_bounds
Own<t_btree_ii__0_1__11__10> rel_551_new_subset_subobjects_index_in_bounds = mk<t_btree_ii__0_1__11__10>();
// -- Table: subset_subobjects.alloc_subregion_at_array_index
Own<t_btree_iii__2__0_1_2__001__100__110__111> rel_552_subset_subobjects_alloc_subregion_at_array_index = mk<t_btree_iii__2__0_1_2__001__100__110__111>();
souffle::RelationWrapper<t_btree_iii__2__0_1_2__001__100__110__111> wrapper_rel_552_subset_subobjects_alloc_subregion_at_array_index;
// -- Table: @delta_subset_subobjects.alloc_subregion_at_array_index
Own<t_btree_iii__1__2_0__0_1_2__001__010__100__101__110__111> rel_553_delta_subset_subobjects_alloc_subregion_at_array_index = mk<t_btree_iii__1__2_0__0_1_2__001__010__100__101__110__111>();
// -- Table: @new_subset_subobjects.alloc_subregion_at_array_index
Own<t_btree_iii__1__2_0__0_1_2__001__010__100__101__110__111> rel_554_new_subset_subobjects_alloc_subregion_at_array_index = mk<t_btree_iii__1__2_0__0_1_2__001__010__100__101__110__111>();
// -- Table: subset_subobjects.alloc_subregion_offset
Own<t_btree_iii__0_2__0_1_2__100__101__110__111> rel_555_subset_subobjects_alloc_subregion_offset = mk<t_btree_iii__0_2__0_1_2__100__101__110__111>();
souffle::RelationWrapper<t_btree_iii__0_2__0_1_2__100__101__110__111> wrapper_rel_555_subset_subobjects_alloc_subregion_offset;
// -- Table: @delta_subset_subobjects.alloc_subregion_offset
Own<t_btree_iii__0_2__0_1_2__100__101__110__111> rel_556_delta_subset_subobjects_alloc_subregion_offset = mk<t_btree_iii__0_2__0_1_2__100__101__110__111>();
// -- Table: @new_subset_subobjects.alloc_subregion_offset
Own<t_btree_iii__0_2__0_1_2__100__101__110__111> rel_557_new_subset_subobjects_alloc_subregion_offset = mk<t_btree_iii__0_2__0_1_2__100__101__110__111>();
// -- Table: subset_aliases.alloc_aliases
Own<t_btree_ii__1_0__11__01> rel_558_subset_aliases_alloc_aliases = mk<t_btree_ii__1_0__11__01>();
souffle::RelationWrapper<t_btree_ii__1_0__11__01> wrapper_rel_558_subset_aliases_alloc_aliases;
// -- Table: @delta_subset_aliases.alloc_aliases
Own<t_btree_ii__1_0__11__01> rel_559_delta_subset_aliases_alloc_aliases = mk<t_btree_ii__1_0__11__01>();
// -- Table: @new_subset_aliases.alloc_aliases
Own<t_btree_ii__1_0__11__01> rel_560_new_subset_aliases_alloc_aliases = mk<t_btree_ii__1_0__11__01>();
// -- Table: subset_aliases.alloc_matches
Own<t_btree_ii__1_0__11__01> rel_561_subset_aliases_alloc_matches = mk<t_btree_ii__1_0__11__01>();
souffle::RelationWrapper<t_btree_ii__1_0__11__01> wrapper_rel_561_subset_aliases_alloc_matches;
// -- Table: @delta_subset_aliases.alloc_matches
Own<t_btree_ii__1_0__11__01> rel_562_delta_subset_aliases_alloc_matches = mk<t_btree_ii__1_0__11__01>();
// -- Table: @new_subset_aliases.alloc_matches
Own<t_btree_ii__1_0__11__01> rel_563_new_subset_aliases_alloc_matches = mk<t_btree_ii__1_0__11__01>();
// -- Table: subset_aliases.alloc_may_alias
Own<t_btree_ii__0_1__11__10> rel_564_subset_aliases_alloc_may_alias = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_564_subset_aliases_alloc_may_alias;
// -- Table: @delta_subset_aliases.alloc_may_alias
Own<t_btree_ii__0_1__11__10> rel_565_delta_subset_aliases_alloc_may_alias = mk<t_btree_ii__0_1__11__10>();
// -- Table: @new_subset_aliases.alloc_may_alias
Own<t_btree_ii__0_1__11__10> rel_566_new_subset_aliases_alloc_may_alias = mk<t_btree_ii__0_1__11__10>();
// -- Table: allocation_by_instr
Own<t_btree_ii__0_1__11__10> rel_567_allocation_by_instr = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_567_allocation_by_instr;
// -- Table: subset_lift.allocation_by_instr_ctx
Own<t_btree_iiii__0_1_2_3__1111> rel_568_subset_lift_allocation_by_instr_ctx = mk<t_btree_iiii__0_1_2_3__1111>();
souffle::RelationWrapper<t_btree_iiii__0_1_2_3__1111> wrapper_rel_568_subset_lift_allocation_by_instr_ctx;
// -- Table: context_to_string
Own<t_btree_ii__0_1__11> rel_569_context_to_string = mk<t_btree_ii__0_1__11>();
souffle::RelationWrapper<t_btree_ii__0_1__11> wrapper_rel_569_context_to_string;
// -- Table: @delta_context_to_string
Own<t_btree_ii__0_1__11__10> rel_570_delta_context_to_string = mk<t_btree_ii__0_1__11__10>();
// -- Table: @new_context_to_string
Own<t_btree_ii__0_1__11__10> rel_571_new_context_to_string = mk<t_btree_ii__0_1__11__10>();
// -- Table: subset_lift._allocation_with_context
Own<t_btree_ii__0_1__11__10> rel_572_subset_lift_allocation_with_context = mk<t_btree_ii__0_1__11__10>();
souffle::RelationWrapper<t_btree_ii__0_1__11__10> wrapper_rel_572_subset_lift_allocation_with_context;
// -- Table: subset_lift.alloc_may_alias_ctx
Own<t_btree_iii__0_1_2__111> rel_573_subset_lift_alloc_may_alias_ctx = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_573_subset_lift_alloc_may_alias_ctx;
// -- Table: subset_lift.alloc_must_alias_ctx
Own<t_btree_iii__0_1_2__111> rel_574_subset_lift_alloc_must_alias_ctx = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_574_subset_lift_alloc_must_alias_ctx;
// -- Table: subset_lift.alloc_subregion_ctx
Own<t_btree_iii__0_1_2__111> rel_575_subset_lift_alloc_subregion_ctx = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_575_subset_lift_alloc_subregion_ctx;
// -- Table: subset_lift.allocation_size_ctx
Own<t_btree_iii__0_1_2__111> rel_576_subset_lift_allocation_size_ctx = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_576_subset_lift_allocation_size_ctx;
// -- Table: empty_path
Own<t_btree_i__0__1> rel_577_empty_path = mk<t_btree_i__0__1>();
souffle::RelationWrapper<t_btree_i__0__1> wrapper_rel_577_empty_path;
// -- Table: subset_subobjects.alloc_subregion_at_path
Own<t_btree_iii__0_2_1__101__111> rel_578_subset_subobjects_alloc_subregion_at_path = mk<t_btree_iii__0_2_1__101__111>();
souffle::RelationWrapper<t_btree_iii__0_2_1__101__111> wrapper_rel_578_subset_subobjects_alloc_subregion_at_path;
// -- Table: subset_lift.alloc_contains_ctx
Own<t_btree_iii__0_1_2__111> rel_579_subset_lift_alloc_contains_ctx = mk<t_btree_iii__0_1_2__111>();
souffle::RelationWrapper<t_btree_iii__0_1_2__111> wrapper_rel_579_subset_lift_alloc_contains_ctx;
public:
Sf_subset()
: wrapper_rel_1_int8_type(0, *rel_1_int8_type, *this, "int8_type", std::array<const char *,1>{{"s:IntegerType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_2_pointer_type_has_component(1, *rel_2_pointer_type_has_component, *this, "pointer_type_has_component", std::array<const char *,2>{{"s:PointerType","s:Type"}}, std::array<const char *,2>{{"type","comp"}}, 0)
, wrapper_rel_3_disconnected0(2, *rel_3_disconnected0, *this, "+disconnected0", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_4_user_options(3, *rel_4_user_options, *this, "user_options", std::array<const char *,2>{{"s:symbol","s:symbol"}}, std::array<const char *,2>{{"?key","?value"}}, 0)
, wrapper_rel_5_disconnected10(4, *rel_5_disconnected10, *this, "+disconnected10", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_6_disconnected12(5, *rel_6_disconnected12, *this, "+disconnected12", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_7_disconnected14(6, *rel_7_disconnected14, *this, "+disconnected14", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_8_disconnected16(7, *rel_8_disconnected16, *this, "+disconnected16", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_9_disconnected18(8, *rel_9_disconnected18, *this, "+disconnected18", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_10_disconnected2(9, *rel_10_disconnected2, *this, "+disconnected2", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_11_disconnected20(10, *rel_11_disconnected20, *this, "+disconnected20", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_12_disconnected22(11, *rel_12_disconnected22, *this, "+disconnected22", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_13_disconnected24(12, *rel_13_disconnected24, *this, "+disconnected24", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_14_disconnected26(13, *rel_14_disconnected26, *this, "+disconnected26", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_15_disconnected28(14, *rel_15_disconnected28, *this, "+disconnected28", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_16_disconnected30(15, *rel_16_disconnected30, *this, "+disconnected30", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_17_disconnected32(16, *rel_17_disconnected32, *this, "+disconnected32", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_18_disconnected34(17, *rel_18_disconnected34, *this, "+disconnected34", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_19_disconnected36(18, *rel_19_disconnected36, *this, "+disconnected36", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_20_disconnected38(19, *rel_20_disconnected38, *this, "+disconnected38", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_21_disconnected4(20, *rel_21_disconnected4, *this, "+disconnected4", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_22_disconnected41(21, *rel_22_disconnected41, *this, "+disconnected41", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_23_disconnected6(22, *rel_23_disconnected6, *this, "+disconnected6", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_24_disconnected8(23, *rel_24_disconnected8, *this, "+disconnected8", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_25_insensitive(24, *rel_25_insensitive, *this, "insensitive", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_26_max_context_depth(25, *rel_26_max_context_depth, *this, "max_context_depth", std::array<const char *,1>{{"i:number"}}, std::array<const char *,1>{{"n"}}, 0)
, wrapper_rel_27_call_instr_func_operand(26, *rel_27_call_instr_func_operand, *this, "call_instr_func_operand", std::array<const char *,2>{{"s:CallInstruction","s:Operand"}}, std::array<const char *,2>{{"instr","op"}}, 0)
, wrapper_rel_28_func_type(27, *rel_28_func_type, *this, "func_type", std::array<const char *,1>{{"s:FunctionType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_29_constant_has_type(28, *rel_29_constant_has_type, *this, "constant_has_type", std::array<const char *,2>{{"s:Constant","s:Type"}}, std::array<const char *,2>{{"c","type"}}, 0)
, wrapper_rel_30_variable_has_type(29, *rel_30_variable_has_type, *this, "variable_has_type", std::array<const char *,2>{{"s:Variable","s:Type"}}, std::array<const char *,2>{{"v","type"}}, 0)
, wrapper_rel_31_operand_has_type(30, *rel_31_operand_has_type, *this, "operand_has_type", std::array<const char *,2>{{"s:Operand","s:Type"}}, std::array<const char *,2>{{"op","type"}}, 0)
, wrapper_rel_32_call_instr_fn_type(31, *rel_32_call_instr_fn_type, *this, "call_instr_fn_type", std::array<const char *,2>{{"s:CallInstruction","s:Type"}}, std::array<const char *,2>{{"instr","type"}}, 0)
, wrapper_rel_33_invoke_instr_func_operand(32, *rel_33_invoke_instr_func_operand, *this, "invoke_instr_func_operand", std::array<const char *,2>{{"s:InvokeInstruction","s:Operand"}}, std::array<const char *,2>{{"instr","op"}}, 0)
, wrapper_rel_34_invoke_instr_fn_type(33, *rel_34_invoke_instr_fn_type, *this, "invoke_instr_fn_type", std::array<const char *,2>{{"s:InvokeInstruction","s:Type"}}, std::array<const char *,2>{{"instr","type"}}, 0)
, wrapper_rel_35_call_or_invoke_instr_fn_type(34, *rel_35_call_or_invoke_instr_fn_type, *this, "call_or_invoke_instr_fn_type", std::array<const char *,2>{{"s:Instruction","s:Type"}}, std::array<const char *,2>{{"?instr","?type"}}, 0)
, wrapper_rel_36_variable(35, *rel_36_variable, *this, "variable", std::array<const char *,1>{{"s:Variable"}}, std::array<const char *,1>{{"v"}}, 0)
, wrapper_rel_37_indirect_call_instr(36, *rel_37_indirect_call_instr, *this, "indirect_call_instr", std::array<const char *,1>{{"s:CallInstruction"}}, std::array<const char *,1>{{"instr"}}, 0)
, wrapper_rel_38_indirect_invoke_instr(37, *rel_38_indirect_invoke_instr, *this, "indirect_invoke_instr", std::array<const char *,1>{{"s:InvokeInstruction"}}, std::array<const char *,1>{{"instr"}}, 0)
, wrapper_rel_39_indirect_call_or_invoke_instr(38, *rel_39_indirect_call_or_invoke_instr, *this, "indirect_call_or_invoke_instr", std::array<const char *,1>{{"s:Instruction"}}, std::array<const char *,1>{{"?instr"}}, 0)
, wrapper_rel_40_struct_type_field(39, *rel_40_struct_type_field, *this, "struct_type_field", std::array<const char *,3>{{"s:StructType","i:FieldIndex","s:Type"}}, std::array<const char *,3>{{"type","index","field"}}, 0)
, wrapper_rel_41_struct_type_nfields(40, *rel_41_struct_type_nfields, *this, "struct_type_nfields", std::array<const char *,2>{{"s:StructType","i:number"}}, std::array<const char *,2>{{"type","total"}}, 0)
, wrapper_rel_42_array_type_has_component(41, *rel_42_array_type_has_component, *this, "array_type_has_component", std::array<const char *,2>{{"s:ArrayType","s:Type"}}, std::array<const char *,2>{{"type","comp"}}, 0)
, wrapper_rel_43_array_type_has_size(42, *rel_43_array_type_has_size, *this, "array_type_has_size", std::array<const char *,2>{{"s:ArrayType","i:number"}}, std::array<const char *,2>{{"type","size"}}, 0)
, wrapper_rel_44_func_type_has_varargs(43, *rel_44_func_type_has_varargs, *this, "func_type_has_varargs", std::array<const char *,1>{{"s:FunctionType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_45_func_type_nparams(44, *rel_45_func_type_nparams, *this, "func_type_nparams", std::array<const char *,2>{{"s:FunctionType","i:number"}}, std::array<const char *,2>{{"type","total"}}, 0)
, wrapper_rel_46_pointer_type(45, *rel_46_pointer_type, *this, "pointer_type", std::array<const char *,1>{{"s:PointerType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_47_pointer_type_base_component(46, *rel_47_pointer_type_base_component, *this, "pointer_type_base_component", std::array<const char *,2>{{"s:PointerType","s:Type"}}, std::array<const char *,2>{{"type","baseComp"}}, 0)
, wrapper_rel_50_array_type(47, *rel_50_array_type, *this, "array_type", std::array<const char *,1>{{"s:ArrayType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_51_opaque_struct_type(48, *rel_51_opaque_struct_type, *this, "opaque_struct_type", std::array<const char *,1>{{"s:OpaqueStructType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_52_struct_type(49, *rel_52_struct_type, *this, "struct_type", std::array<const char *,1>{{"s:StructType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_53_aggregate_type(50, *rel_53_aggregate_type, *this, "aggregate_type", std::array<const char *,1>{{"s:AggregateType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_54_vector_type(51, *rel_54_vector_type, *this, "vector_type", std::array<const char *,1>{{"s:VectorType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_55_derived_type(52, *rel_55_derived_type, *this, "derived_type", std::array<const char *,1>{{"s:DerivedType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_56_double_type(53, *rel_56_double_type, *this, "double_type", std::array<const char *,1>{{"s:FPType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_57_float_type(54, *rel_57_float_type, *this, "float_type", std::array<const char *,1>{{"s:FPType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_58_fp128_type(55, *rel_58_fp128_type, *this, "fp128_type", std::array<const char *,1>{{"s:FPType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_59_half_type(56, *rel_59_half_type, *this, "half_type", std::array<const char *,1>{{"s:FPType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_60_fp_type(57, *rel_60_fp_type, *this, "fp_type", std::array<const char *,1>{{"s:FPType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_61_int1_type(58, *rel_61_int1_type, *this, "int1_type", std::array<const char *,1>{{"s:IntegerType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_62_int32_type(59, *rel_62_int32_type, *this, "int32_type", std::array<const char *,1>{{"s:IntegerType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_63_int64_type(60, *rel_63_int64_type, *this, "int64_type", std::array<const char *,1>{{"s:IntegerType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_64_integer_type(61, *rel_64_integer_type, *this, "integer_type", std::array<const char *,1>{{"s:IntegerType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_65_integer_pointer_type(62, *rel_65_integer_pointer_type, *this, "integer_pointer_type", std::array<const char *,1>{{"s:PointerType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_66_label_type(63, *rel_66_label_type, *this, "label_type", std::array<const char *,1>{{"s:LabelType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_67_metadata_type(64, *rel_67_metadata_type, *this, "metadata_type", std::array<const char *,1>{{"s:MetadataType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_68_void_type(65, *rel_68_void_type, *this, "void_type", std::array<const char *,1>{{"s:VoidType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_69_x86mmx_type(66, *rel_69_x86mmx_type, *this, "x86mmx_type", std::array<const char *,1>{{"s:PrimitiveType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_70_primitive_type(67, *rel_70_primitive_type, *this, "primitive_type", std::array<const char *,1>{{"s:PrimitiveType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_71_type(68, *rel_71_type, *this, "type", std::array<const char *,1>{{"s:Type"}}, std::array<const char *,1>{{"t"}}, 0)
, wrapper_rel_72_func_type_param(69, *rel_72_func_type_param, *this, "func_type_param", std::array<const char *,3>{{"s:FunctionType","i:ArgumentIndex","s:Type"}}, std::array<const char *,3>{{"type","index","param"}}, 0)
, wrapper_rel_73_func_type_return(70, *rel_73_func_type_return, *this, "func_type_return", std::array<const char *,2>{{"s:FunctionType","s:Type"}}, std::array<const char *,2>{{"type","ret"}}, 0)
, wrapper_rel_74_type_compatible(71, *rel_74_type_compatible, *this, "type_compatible", std::array<const char *,2>{{"s:Type","s:Type"}}, std::array<const char *,2>{{"?type1","?type2"}}, 0)
, wrapper_rel_77_type_compatible_up_to_field(72, *rel_77_type_compatible_up_to_field, *this, "type_compatible_up_to_field", std::array<const char *,3>{{"s:StructType","s:StructType","i:FieldIndex"}}, std::array<const char *,3>{{"?type1","?type2","?field"}}, 0)
, wrapper_rel_80_type_compatible_up_to_arg(73, *rel_80_type_compatible_up_to_arg, *this, "type_compatible_up_to_arg", std::array<const char *,3>{{"s:FunctionType","s:FunctionType","i:ArgumentIndex"}}, std::array<const char *,3>{{"?from","?to","?index"}}, 0)
, wrapper_rel_83_eligible_base_type(74, *rel_83_eligible_base_type, *this, "_eligible_base_type", std::array<const char *,2>{{"s:StructType","s:StructType"}}, std::array<const char *,2>{{"?superType","?type"}}, 0)
, wrapper_rel_86_type_expands_base_type(75, *rel_86_type_expands_base_type, *this, "_type_expands_base_type", std::array<const char *,2>{{"s:StructType","s:StructType"}}, std::array<const char *,2>{{"?superType","?type"}}, 0)
, wrapper_rel_89_agg_subclause(76, *rel_89_agg_subclause, *this, "__agg_subclause", std::array<const char *,3>{{"s:Type","s:Instruction","s:Type"}}, std::array<const char *,3>{{"?fnType","?instr","?targetType"}}, 0)
, wrapper_rel_90_alias_name(77, *rel_90_alias_name, *this, "alias_name", std::array<const char *,2>{{"s:Alias","s:symbol"}}, std::array<const char *,2>{{"x","name"}}, 0)
, wrapper_rel_91_constant_has_value(78, *rel_91_constant_has_value, *this, "constant_has_value", std::array<const char *,2>{{"s:Constant","s:symbol"}}, std::array<const char *,2>{{"c","val"}}, 0)
, wrapper_rel_92_alias(79, *rel_92_alias, *this, "_alias", std::array<const char *,2>{{"s:Constant","s:Alias"}}, std::array<const char *,2>{{"c","a"}}, 0)
, wrapper_rel_93_alias_aliasee(80, *rel_93_alias_aliasee, *this, "alias_aliasee", std::array<const char *,2>{{"s:Alias","s:Constant"}}, std::array<const char *,2>{{"x","y"}}, 0)
, wrapper_rel_94_aliasee(81, *rel_94_aliasee, *this, "_aliasee", std::array<const char *,2>{{"s:Constant","s:Alias"}}, std::array<const char *,2>{{"c","a"}}, 0)
, wrapper_rel_95_aliased_constants(82, *rel_95_aliased_constants, *this, "aliased_constants", std::array<const char *,2>{{"s:Constant","s:Constant"}}, std::array<const char *,2>{{"c1","c2"}}, 0)
, wrapper_rel_96_global_region(83, *rel_96_global_region, *this, "global_region", std::array<const char *,1>{{"s:Region"}}, std::array<const char *,1>{{"r"}}, 0)
, wrapper_rel_97_heap_region(84, *rel_97_heap_region, *this, "heap_region", std::array<const char *,1>{{"s:Region"}}, std::array<const char *,1>{{"r"}}, 0)
, wrapper_rel_98_stack_region(85, *rel_98_stack_region, *this, "stack_region", std::array<const char *,1>{{"s:Region"}}, std::array<const char *,1>{{"r"}}, 0)
, wrapper_rel_99_alloc_region(86, *rel_99_alloc_region, *this, "_alloc_region", std::array<const char *,1>{{"s:Region"}}, std::array<const char *,1>{{"?region"}}, 0)
, wrapper_rel_100_getelementptr_constant_expression_index(87, *rel_100_getelementptr_constant_expression_index, *this, "getelementptr_constant_expression_index", std::array<const char *,3>{{"s:GetElementPtrConstantExpression","i:GepIndex","s:Constant"}}, std::array<const char *,3>{{"cexpr","i","c"}}, 0)
, wrapper_rel_101_constant_expression_next_index(88, *rel_101_constant_expression_next_index, *this, "_constant_expression_next_index", std::array<const char *,3>{{"s:ConstantExpression","i:number","i:number"}}, std::array<const char *,3>{{"cexpr","i","j"}}, 0)
, wrapper_rel_102_getelementptr_constant_expression_base(89, *rel_102_getelementptr_constant_expression_base, *this, "getelementptr_constant_expression_base", std::array<const char *,2>{{"s:GetElementPtrConstantExpression","s:Constant"}}, std::array<const char *,2>{{"cexpr","base"}}, 0)
, wrapper_rel_103_getelementptr_constant_expression_base_type(90, *rel_103_getelementptr_constant_expression_base_type, *this, "_getelementptr_constant_expression_base_type", std::array<const char *,2>{{"s:GetElementPtrConstantExpression","s:Type"}}, std::array<const char *,2>{{"cexpr","type"}}, 0)
, wrapper_rel_104_constant_to_int(91, *rel_104_constant_to_int, *this, "constant_to_int", std::array<const char *,2>{{"s:Constant","i:number"}}, std::array<const char *,2>{{"c","val"}}, 0)
, wrapper_rel_105_vector_type_has_component(92, *rel_105_vector_type_has_component, *this, "vector_type_has_component", std::array<const char *,2>{{"s:VectorType","s:Type"}}, std::array<const char *,2>{{"type","comp"}}, 0)
, wrapper_rel_106_getelementptr_constant_expression_interm_type(93, *rel_106_getelementptr_constant_expression_interm_type, *this, "_getelementptr_constant_expression_interm_type", std::array<const char *,3>{{"s:GetElementPtrConstantExpression","i:number","s:Type"}}, std::array<const char *,3>{{"cexpr","i","type"}}, 0)
, wrapper_rel_109_type_has_subelement(94, *rel_109_type_has_subelement, *this, "type_has_subelement", std::array<const char *,2>{{"s:Type","s:Type"}}, std::array<const char *,2>{{"?type","?elem"}}, 0)
, wrapper_rel_112_type_contains_pointer(95, *rel_112_type_contains_pointer, *this, "type_contains_pointer", std::array<const char *,1>{{"s:Type"}}, std::array<const char *,1>{{"?type"}}, 0)
, wrapper_rel_113_func_type_has_pointer_arg(96, *rel_113_func_type_has_pointer_arg, *this, "func_type_has_pointer_arg", std::array<const char *,1>{{"s:FunctionType"}}, std::array<const char *,1>{{"?funcType"}}, 0)
, wrapper_rel_114_func_type_has_no_pointer_args(97, *rel_114_func_type_has_no_pointer_args, *this, "func_type_has_no_pointer_args", std::array<const char *,1>{{"s:FunctionType"}}, std::array<const char *,1>{{"?funcType"}}, 0)
, wrapper_rel_115_func_type_has_pointer_return(98, *rel_115_func_type_has_pointer_return, *this, "func_type_has_pointer_return", std::array<const char *,1>{{"s:FunctionType"}}, std::array<const char *,1>{{"?funcType"}}, 0)
, wrapper_rel_116_func_type_has_no_pointer_return(99, *rel_116_func_type_has_no_pointer_return, *this, "func_type_has_no_pointer_return", std::array<const char *,1>{{"s:FunctionType"}}, std::array<const char *,1>{{"?funcType"}}, 0)
, wrapper_rel_117_constant_array(100, *rel_117_constant_array, *this, "constant_array", std::array<const char *,1>{{"s:ConstantArray"}}, std::array<const char *,1>{{"c"}}, 0)
, wrapper_rel_118_bitcast_constant_expression(101, *rel_118_bitcast_constant_expression, *this, "bitcast_constant_expression", std::array<const char *,1>{{"s:BitcastConstantExpression"}}, std::array<const char *,1>{{"c"}}, 0)
, wrapper_rel_119_getelementptr_constant_expression(102, *rel_119_getelementptr_constant_expression, *this, "getelementptr_constant_expression", std::array<const char *,1>{{"s:GetElementPtrConstantExpression"}}, std::array<const char *,1>{{"c"}}, 0)
, wrapper_rel_120_inttoptr_constant_expression(103, *rel_120_inttoptr_constant_expression, *this, "inttoptr_constant_expression", std::array<const char *,1>{{"s:IntToPtrConstantExpression"}}, std::array<const char *,1>{{"c"}}, 0)
, wrapper_rel_121_ptrtoint_constant_expression(104, *rel_121_ptrtoint_constant_expression, *this, "ptrtoint_constant_expression", std::array<const char *,1>{{"s:PtrToIntConstantExpression"}}, std::array<const char *,1>{{"c"}}, 0)
, wrapper_rel_122_constant_expression(105, *rel_122_constant_expression, *this, "constant_expression", std::array<const char *,1>{{"s:ConstantExpression"}}, std::array<const char *,1>{{"c"}}, 0)
, wrapper_rel_123_constant_struct(106, *rel_123_constant_struct, *this, "constant_struct", std::array<const char *,1>{{"s:ConstantStruct"}}, std::array<const char *,1>{{"c"}}, 0)
, wrapper_rel_124_fp_constant(107, *rel_124_fp_constant, *this, "fp_constant", std::array<const char *,1>{{"s:FPConstant"}}, std::array<const char *,1>{{"c"}}, 0)
, wrapper_rel_125_func_constant(108, *rel_125_func_constant, *this, "func_constant", std::array<const char *,1>{{"s:FunctionConstant"}}, std::array<const char *,1>{{"c"}}, 0)
, wrapper_rel_126_global_var_constant(109, *rel_126_global_var_constant, *this, "global_var_constant", std::array<const char *,1>{{"s:GlobalVariableConstant"}}, std::array<const char *,1>{{"c"}}, 0)
, wrapper_rel_127_inline_asm(110, *rel_127_inline_asm, *this, "inline_asm", std::array<const char *,1>{{"s:InlineASM"}}, std::array<const char *,1>{{"asm"}}, 0)
, wrapper_rel_128_integer_constant(111, *rel_128_integer_constant, *this, "integer_constant", std::array<const char *,1>{{"s:IntegerConstant"}}, std::array<const char *,1>{{"c"}}, 0)
, wrapper_rel_129_nullptr_constant(112, *rel_129_nullptr_constant, *this, "nullptr_constant", std::array<const char *,1>{{"s:NullPtrConstant"}}, std::array<const char *,1>{{"c"}}, 0)
, wrapper_rel_130_poison_constant(113, *rel_130_poison_constant, *this, "poison_constant", std::array<const char *,1>{{"s:Constant"}}, std::array<const char *,1>{{"c"}}, 0)
, wrapper_rel_131_undef_constant(114, *rel_131_undef_constant, *this, "undef_constant", std::array<const char *,1>{{"s:Constant"}}, std::array<const char *,1>{{"c"}}, 0)
, wrapper_rel_132_constant(115, *rel_132_constant, *this, "constant", std::array<const char *,1>{{"s:Constant"}}, std::array<const char *,1>{{"c"}}, 0)
, wrapper_rel_133_direct_call_instr(116, *rel_133_direct_call_instr, *this, "direct_call_instr", std::array<const char *,1>{{"s:CallInstruction"}}, std::array<const char *,1>{{"instr"}}, 0)
, wrapper_rel_134_direct_invoke_instr(117, *rel_134_direct_invoke_instr, *this, "direct_invoke_instr", std::array<const char *,1>{{"s:InvokeInstruction"}}, std::array<const char *,1>{{"instr"}}, 0)
, wrapper_rel_135_operand(118, *rel_135_operand, *this, "operand", std::array<const char *,1>{{"s:Operand"}}, std::array<const char *,1>{{"op"}}, 0)
, wrapper_rel_136_bitcast_constant_expression_from(119, *rel_136_bitcast_constant_expression_from, *this, "bitcast_constant_expression_from", std::array<const char *,2>{{"s:BitcastConstantExpression","s:Constant"}}, std::array<const char *,2>{{"cexpr","val"}}, 0)
, wrapper_rel_137_func_constant_fn_name(120, *rel_137_func_constant_fn_name, *this, "func_constant_fn_name", std::array<const char *,2>{{"s:FunctionConstant","s:symbol"}}, std::array<const char *,2>{{"fc","name"}}, 0)
, wrapper_rel_138_func_name(121, *rel_138_func_name, *this, "func_name", std::array<const char *,2>{{"s:FunctionDecl","s:FunctionName"}}, std::array<const char *,2>{{"func","name"}}, 0)
, wrapper_rel_139_constant_references_func(122, *rel_139_constant_references_func, *this, "constant_references_func", std::array<const char *,2>{{"s:Constant","s:FunctionDecl"}}, std::array<const char *,2>{{"c","f"}}, 0)
, wrapper_rel_142_instr_calls_func(123, *rel_142_instr_calls_func, *this, "_instr_calls_func", std::array<const char *,2>{{"s:Instruction","s:FunctionDecl"}}, std::array<const char *,2>{{"instr","target"}}, 0)
, wrapper_rel_143_call_instr_arg(124, *rel_143_call_instr_arg, *this, "call_instr_arg", std::array<const char *,3>{{"s:CallInstruction","i:ArgumentIndex","s:Operand"}}, std::array<const char *,3>{{"instr","i","arg"}}, 0)
, wrapper_rel_144_invoke_instr_arg(125, *rel_144_invoke_instr_arg, *this, "invoke_instr_arg", std::array<const char *,3>{{"s:InvokeInstruction","i:ArgumentIndex","s:Operand"}}, std::array<const char *,3>{{"instr","i","arg"}}, 0)
, wrapper_rel_145_actual_arg(126, *rel_145_actual_arg, *this, "actual_arg", std::array<const char *,3>{{"s:CallBase","i:ArgumentIndex","s:Operand"}}, std::array<const char *,3>{{"?instr","?index","?argument"}}, 0)
, wrapper_rel_146_argv_alloc(127, *rel_146_argv_alloc, *this, "argv_alloc", std::array<const char *,1>{{"s:BasicAllocation"}}, std::array<const char *,1>{{"alloc"}}, 0)
, wrapper_rel_147_alloca_instr(128, *rel_147_alloca_instr, *this, "alloca_instr", std::array<const char *,1>{{"s:AllocaInstruction"}}, std::array<const char *,1>{{"instr"}}, 0)
, wrapper_rel_148_alloca_instr_type(129, *rel_148_alloca_instr_type, *this, "alloca_instr_type", std::array<const char *,2>{{"s:AllocaInstruction","s:Type"}}, std::array<const char *,2>{{"instr","type"}}, 0)
, wrapper_rel_149_call_instr(130, *rel_149_call_instr, *this, "call_instr", std::array<const char *,1>{{"s:CallInstruction"}}, std::array<const char *,1>{{"instr"}}, 0)
, wrapper_rel_150_func(131, *rel_150_func, *this, "func", std::array<const char *,1>{{"s:Function"}}, std::array<const char *,1>{{"func"}}, 0)
, wrapper_rel_151_func_decl_to_defn(132, *rel_151_func_decl_to_defn, *this, "func_decl_to_defn", std::array<const char *,2>{{"s:FunctionDecl","s:Function"}}, std::array<const char *,2>{{"fdecl","func"}}, 0)
, wrapper_rel_152_call_instr_fn_target(133, *rel_152_call_instr_fn_target, *this, "call_instr_fn_target", std::array<const char *,2>{{"s:CallInstruction","s:FunctionDecl"}}, std::array<const char *,2>{{"instr","func"}}, 0)
, wrapper_rel_153_func_decl(134, *rel_153_func_decl, *this, "func_decl", std::array<const char *,1>{{"s:FunctionDecl"}}, std::array<const char *,1>{{"func"}}, 0)
, wrapper_rel_154_global_allocation_by_func(135, *rel_154_global_allocation_by_func, *this, "global_allocation_by_func", std::array<const char *,2>{{"s:FunctionDecl","s:GlobalAllocation"}}, std::array<const char *,2>{{"?func","?globalAlloc"}}, 0)
, wrapper_rel_155_func_by_location(136, *rel_155_func_by_location, *this, "func_by_location", std::array<const char *,2>{{"s:GlobalAllocation","s:FunctionDecl"}}, std::array<const char *,2>{{"?alloc","?callee"}}, 0)
, wrapper_rel_156_num_direct_calls_to_func(137, *rel_156_num_direct_calls_to_func, *this, "num_direct_calls_to_func", std::array<const char *,2>{{"i:number","s:FunctionDecl"}}, std::array<const char *,2>{{"?n","?func"}}, 0)
, wrapper_rel_157_main_func(138, *rel_157_main_func, *this, "main_func", std::array<const char *,1>{{"s:Function"}}, std::array<const char *,1>{{"func"}}, 0)
, wrapper_rel_158_func_ty(139, *rel_158_func_ty, *this, "func_ty", std::array<const char *,2>{{"s:FunctionDecl","s:FunctionType"}}, std::array<const char *,2>{{"func","type"}}, 0)
, wrapper_rel_159_num_indirect_calls_to_compatible_func(140, *rel_159_num_indirect_calls_to_compatible_func, *this, "num_indirect_calls_to_compatible_func", std::array<const char *,2>{{"i:number","s:FunctionDecl"}}, std::array<const char *,2>{{"?n","?func"}}, 0)
, wrapper_rel_160_max_num_callsites(141, *rel_160_max_num_callsites, *this, "max_num_callsites", std::array<const char *,2>{{"s:FunctionDecl","i:number"}}, std::array<const char *,2>{{"?func","?n"}}, 0)
, wrapper_rel_161_cxx_alloc_exception(142, *rel_161_cxx_alloc_exception, *this, "cxx_alloc_exception", std::array<const char *,1>{{"s:FunctionDecl"}}, std::array<const char *,1>{{"?func"}}, 0)
, wrapper_rel_162_cxx_atexit_func(143, *rel_162_cxx_atexit_func, *this, "cxx_atexit_func", std::array<const char *,1>{{"s:FunctionDecl"}}, std::array<const char *,1>{{"?func"}}, 0)
, wrapper_rel_163_class_type_constructor(144, *rel_163_class_type_constructor, *this, "class_type_constructor", std::array<const char *,2>{{"s:FunctionDecl","s:ClassType"}}, std::array<const char *,2>{{"?cTor","?type"}}, 0)
, wrapper_rel_164_global_var(145, *rel_164_global_var, *this, "global_var", std::array<const char *,1>{{"s:GlobalVariable"}}, std::array<const char *,1>{{"gv"}}, 0)
, wrapper_rel_165_global_var_name(146, *rel_165_global_var_name, *this, "global_var_name", std::array<const char *,2>{{"s:GlobalVariable","s:GlobalVarName"}}, std::array<const char *,2>{{"gv","name"}}, 0)
, wrapper_rel_166_global_allocation_by_variable(147, *rel_166_global_allocation_by_variable, *this, "global_allocation_by_variable", std::array<const char *,2>{{"s:GlobalVariable","s:GlobalAllocation"}}, std::array<const char *,2>{{"?var","?globalAlloc"}}, 0)
, wrapper_rel_167_global_allocation_by_name(148, *rel_167_global_allocation_by_name, *this, "global_allocation_by_name", std::array<const char *,2>{{"s:GlobalName","s:GlobalAllocation"}}, std::array<const char *,2>{{"?global","?globalAlloc"}}, 0)
, wrapper_rel_168_global_allocation(149, *rel_168_global_allocation, *this, "global_allocation", std::array<const char *,1>{{"s:GlobalAllocation"}}, std::array<const char *,1>{{"?globalAlloc"}}, 0)
, wrapper_rel_169_global_var_type(150, *rel_169_global_var_type, *this, "global_var_type", std::array<const char *,2>{{"s:GlobalVariable","s:Type"}}, std::array<const char *,2>{{"gv","type"}}, 0)
, wrapper_rel_170_func_signature(151, *rel_170_func_signature, *this, "func_signature", std::array<const char *,2>{{"s:FunctionDecl","s:symbol"}}, std::array<const char *,2>{{"func","signature"}}, 0)
, wrapper_rel_171_heap_alloc_func(152, *rel_171_heap_alloc_func, *this, "heap_alloc_func", std::array<const char *,1>{{"s:Function"}}, std::array<const char *,1>{{"?func"}}, 0)
, wrapper_rel_172_cxx_new_func(153, *rel_172_cxx_new_func, *this, "cxx_new_func", std::array<const char *,1>{{"s:FunctionDecl"}}, std::array<const char *,1>{{"?func"}}, 0)
, wrapper_rel_173_instr_assigns_to(154, *rel_173_instr_assigns_to, *this, "instr_assigns_to", std::array<const char *,2>{{"s:Instruction","s:Variable"}}, std::array<const char *,2>{{"instr","var"}}, 0)
, wrapper_rel_174_instr_returns_type(155, *rel_174_instr_returns_type, *this, "instr_returns_type", std::array<const char *,2>{{"s:Instruction","s:Type"}}, std::array<const char *,2>{{"instr","type"}}, 0)
, wrapper_rel_175_instr_func(156, *rel_175_instr_func, *this, "instr_func", std::array<const char *,2>{{"s:Instruction","s:Function"}}, std::array<const char *,2>{{"instr","func"}}, 0)
, wrapper_rel_176_invoke_instr(157, *rel_176_invoke_instr, *this, "invoke_instr", std::array<const char *,1>{{"s:InvokeInstruction"}}, std::array<const char *,1>{{"instr"}}, 0)
, wrapper_rel_177_invoke_instr_fn_target(158, *rel_177_invoke_instr_fn_target, *this, "invoke_instr_fn_target", std::array<const char *,2>{{"s:InvokeInstruction","s:FunctionDecl"}}, std::array<const char *,2>{{"instr","func"}}, 0)
, wrapper_rel_178_sized_alloc_instr(159, *rel_178_sized_alloc_instr, *this, "sized_alloc_instr", std::array<const char *,2>{{"s:Instruction","i:Bytes"}}, std::array<const char *,2>{{"?insn","?size"}}, 0)
, wrapper_rel_179_context_item_by_invoc_interim(160, *rel_179_context_item_by_invoc_interim, *this, "context_item_by_invoc_interim", std::array<const char *,2>{{"s:CallBase","s:ContextItem"}}, std::array<const char *,2>{{"?invoc","?ctxItem"}}, 0)
, wrapper_rel_180_func_section(161, *rel_180_func_section, *this, "func_section", std::array<const char *,2>{{"s:Function","s:symbol"}}, std::array<const char *,2>{{"func","section"}}, 0)
, wrapper_rel_181_called_at_startup(162, *rel_181_called_at_startup, *this, "called_at_startup", std::array<const char *,1>{{"s:FunctionDecl"}}, std::array<const char *,1>{{"func"}}, 0)
, wrapper_rel_182_empty_alloc_context(163, *rel_182_empty_alloc_context, *this, "empty_alloc_context", std::array<const char *,1>{{"r:Context"}}, std::array<const char *,1>{{"?ctx"}}, 0)
, wrapper_rel_183_exit_context(164, *rel_183_exit_context, *this, "exit_context", std::array<const char *,1>{{"r:Context"}}, std::array<const char *,1>{{"?ctx"}}, 0)
, wrapper_rel_184_main_context(165, *rel_184_main_context, *this, "main_context", std::array<const char *,1>{{"r:Context"}}, std::array<const char *,1>{{"?ctx"}}, 0)
, wrapper_rel_185_startup_context(166, *rel_185_startup_context, *this, "startup_context", std::array<const char *,1>{{"r:Context"}}, std::array<const char *,1>{{"?ctx"}}, 0)
, wrapper_rel_186_user_option_default(167, *rel_186_user_option_default, *this, "user_option_default", std::array<const char *,2>{{"s:symbol","s:symbol"}}, std::array<const char *,2>{{"?key","?value"}}, 0)
, wrapper_rel_187_user_option_valid_value(168, *rel_187_user_option_valid_value, *this, "user_option_valid_value", std::array<const char *,2>{{"s:symbol","s:symbol"}}, std::array<const char *,2>{{"?key","?value"}}, 0)
, wrapper_rel_188_user_option_selected(169, *rel_188_user_option_selected, *this, "user_option_selected", std::array<const char *,2>{{"s:symbol","s:symbol"}}, std::array<const char *,2>{{"?key","?value"}}, 0)
, wrapper_rel_189_user_option_defaulted(170, *rel_189_user_option_defaulted, *this, "user_option_defaulted", std::array<const char *,2>{{"s:symbol","s:symbol"}}, std::array<const char *,2>{{"?key","?value"}}, 0)
, wrapper_rel_190_user_option_value(171, *rel_190_user_option_value, *this, "user_option_value", std::array<const char *,2>{{"s:symbol","s:symbol"}}, std::array<const char *,2>{{"?key","?value"}}, 0)
, wrapper_rel_191_drop_context_by_invoc(172, *rel_191_drop_context_by_invoc, *this, "drop_context_by_invoc", std::array<const char *,1>{{"s:Instruction"}}, std::array<const char *,1>{{"?invoc"}}, 0)
, wrapper_rel_192_drop_context_item_by_invoc(173, *rel_192_drop_context_item_by_invoc, *this, "drop_context_item_by_invoc", std::array<const char *,1>{{"s:Instruction"}}, std::array<const char *,1>{{"?invoc"}}, 0)
, wrapper_rel_193_context_item_by_invoc(174, *rel_193_context_item_by_invoc, *this, "context_item_by_invoc", std::array<const char *,2>{{"s:CallBase","s:ContextItem"}}, std::array<const char *,2>{{"?invoc","?ctxItem"}}, 0)
, wrapper_rel_194_inlined_constructors(175, *rel_194_inlined_constructors, *this, "inlined_constructors", std::array<const char *,0>{{}}, std::array<const char *,0>{{}}, 0)
, wrapper_rel_195_constant_in_func_name(176, *rel_195_constant_in_func_name, *this, "constant_in_func_name", std::array<const char *,2>{{"s:Constant","s:FunctionName"}}, std::array<const char *,2>{{"v0","v1"}}, 0)
, wrapper_rel_196_constant_in_func(177, *rel_196_constant_in_func, *this, "constant_in_func", std::array<const char *,2>{{"s:Constant","s:Function"}}, std::array<const char *,2>{{"c","func"}}, 0)
, wrapper_rel_197_global_var_constant_name(178, *rel_197_global_var_constant_name, *this, "global_var_constant_name", std::array<const char *,2>{{"s:GlobalVariableConstant","s:symbol"}}, std::array<const char *,2>{{"c","name"}}, 0)
, wrapper_rel_198_constant_references_variable(179, *rel_198_constant_references_variable, *this, "constant_references_variable", std::array<const char *,2>{{"s:Constant","s:GlobalVariable"}}, std::array<const char *,2>{{"c","v"}}, 0)
, wrapper_rel_201_constant_array_index(180, *rel_201_constant_array_index, *this, "constant_array_index", std::array<const char *,3>{{"s:ConstantArray","i:number","s:Constant"}}, std::array<const char *,3>{{"c","i","ic"}}, 0)
, wrapper_rel_202_getelementptr_instr_index(181, *rel_202_getelementptr_instr_index, *this, "getelementptr_instr_index", std::array<const char *,3>{{"s:GetElementPtrInstruction","i:GepIndex","s:Operand"}}, std::array<const char *,3>{{"instr","i","idx"}}, 0)
, wrapper_rel_203_getelementptr_instr_base(182, *rel_203_getelementptr_instr_base, *this, "getelementptr_instr_base", std::array<const char *,2>{{"s:GetElementPtrInstruction","s:Operand"}}, std::array<const char *,2>{{"instr","ptr"}}, 0)
, wrapper_rel_204_getelementptr_instr_base_type(183, *rel_204_getelementptr_instr_base_type, *this, "getelementptr_instr_base_type", std::array<const char *,2>{{"s:GetElementPtrInstruction","s:Type"}}, std::array<const char *,2>{{"instr","type"}}, 0)
, wrapper_rel_205_gep_is_vector_based(184, *rel_205_gep_is_vector_based, *this, "gep_is_vector_based", std::array<const char *,1>{{"s:GetElementPtrInstruction"}}, std::array<const char *,1>{{"instr"}}, 0)
, wrapper_rel_206_extractvalue_instr_index(185, *rel_206_extractvalue_instr_index, *this, "extractvalue_instr_index", std::array<const char *,3>{{"s:ExtractValueInstruction","i:number","i:number"}}, std::array<const char *,3>{{"instr","i","idx"}}, 0)
, wrapper_rel_207_insertvalue_instr_index(186, *rel_207_insertvalue_instr_index, *this, "insertvalue_instr_index", std::array<const char *,3>{{"s:InsertValueInstruction","i:number","i:number"}}, std::array<const char *,3>{{"instr","i","idx"}}, 0)
, wrapper_rel_208_instr_successor_index(187, *rel_208_instr_successor_index, *this, "instr_successor_index", std::array<const char *,3>{{"s:Instruction","i:number","i:number"}}, std::array<const char *,3>{{"instr","index","next_index"}}, 0)
, wrapper_rel_209_getelementptr_instrterm_type(188, *rel_209_getelementptr_instrterm_type, *this, "getelementptr_instrterm_type", std::array<const char *,3>{{"s:GetElementPtrInstruction","i:number","s:Type"}}, std::array<const char *,3>{{"instr","i","type"}}, 0)
, wrapper_rel_212_array_indices_no_typecomp(189, *rel_212_array_indices_no_typecomp, *this, "array_indices__no_typecomp", std::array<const char *,3>{{"s:Region","s:ArrayType","i:ArrayIndex"}}, std::array<const char *,3>{{"?region","?type","?index"}}, 0)
, wrapper_rel_213_array_indices(190, *rel_213_array_indices, *this, "array_indices", std::array<const char *,3>{{"s:Region","s:ArrayType","i:ArrayIndex"}}, std::array<const char *,3>{{"?region","?type","?index"}}, 0)
, wrapper_rel_214_ppc_fp128_type(191, *rel_214_ppc_fp128_type, *this, "ppc_fp128_type", std::array<const char *,1>{{"s:FPType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_215_x86_fp80_type(192, *rel_215_x86_fp80_type, *this, "x86_fp80_type", std::array<const char *,1>{{"s:FPType"}}, std::array<const char *,1>{{"type"}}, 0)
, wrapper_rel_216_type_has_size(193, *rel_216_type_has_size, *this, "type_has_size", std::array<const char *,2>{{"s:Type","i:Bytes"}}, std::array<const char *,2>{{"t","size"}}, 0)
, wrapper_rel_217_pointer_index(194, *rel_217_pointer_index, *this, "pointer_index", std::array<const char *,3>{{"s:Region","s:Type","i:ArrayIndex"}}, std::array<const char *,3>{{"?region","?type","?index"}}, 0)
, wrapper_rel_218_pointer_offset(195, *rel_218_pointer_offset, *this, "pointer_offset", std::array<const char *,3>{{"s:Region","s:Type","i:SubregionOffset"}}, std::array<const char *,3>{{"?region","?type","?offset"}}, 0)
, wrapper_rel_219_array_offset(196, *rel_219_array_offset, *this, "array_offset", std::array<const char *,3>{{"s:Region","s:Type","i:SubregionOffset"}}, std::array<const char *,3>{{"?region","?type","?offset"}}, 0)
, wrapper_rel_220_gep_zero_index_offset(197, *rel_220_gep_zero_index_offset, *this, "gep_zero_index_offset", std::array<const char *,2>{{"s:GetElementPtrInstruction","i:SubregionOffset"}}, std::array<const char *,2>{{"?insn","?offset"}}, 0)
, wrapper_rel_221_empty_path_component(198, *rel_221_empty_path_component, *this, "empty_path_component", std::array<const char *,1>{{"s:EmptyPathComponent"}}, std::array<const char *,1>{{"?component"}}, 0)
, wrapper_rel_222_path_component_at_any_index(199, *rel_222_path_component_at_any_index, *this, "path_component_at_any_index", std::array<const char *,1>{{"s:AnyArrayIndexPathComponent"}}, std::array<const char *,1>{{"?component"}}, 0)
, wrapper_rel_223_alloca_instr_size(200, *rel_223_alloca_instr_size, *this, "alloca_instr_size", std::array<const char *,2>{{"s:AllocaInstruction","s:Operand"}}, std::array<const char *,2>{{"instr","size"}}, 0)
, wrapper_rel_224_external_linkage_type(201, *rel_224_external_linkage_type, *this, "external_linkage_type", std::array<const char *,1>{{"s:LinkageType"}}, std::array<const char *,1>{{"link"}}, 0)
, wrapper_rel_225_global_var_linkage(202, *rel_225_global_var_linkage, *this, "global_var_linkage", std::array<const char *,2>{{"s:GlobalVariable","s:LinkageType"}}, std::array<const char *,2>{{"gv","link"}}, 0)
, wrapper_rel_226_typeinfo_vtable(203, *rel_226_typeinfo_vtable, *this, "typeinfo_vtable", std::array<const char *,2>{{"s:VirtualTable","s:symbol"}}, std::array<const char *,2>{{"?vt","?name"}}, 0)
, wrapper_rel_227_variable_has_name(204, *rel_227_variable_has_name, *this, "variable_has_name", std::array<const char *,2>{{"s:Variable","s:symbol"}}, std::array<const char *,2>{{"v","name"}}, 0)
, wrapper_rel_228_bitcast_instr_from_operand(205, *rel_228_bitcast_instr_from_operand, *this, "bitcast_instr_from_operand", std::array<const char *,2>{{"s:BitcastInstruction","s:Operand"}}, std::array<const char *,2>{{"instr","val"}}, 0)
, wrapper_rel_229_bitcast_instr_to_type(206, *rel_229_bitcast_instr_to_type, *this, "bitcast_instr_to_type", std::array<const char *,2>{{"s:BitcastInstruction","s:Type"}}, std::array<const char *,2>{{"instr","type"}}, 0)
, wrapper_rel_230_variable_in_func_name(207, *rel_230_variable_in_func_name, *this, "variable_in_func_name", std::array<const char *,2>{{"s:Variable","s:FunctionName"}}, std::array<const char *,2>{{"v0","v1"}}, 0)
, wrapper_rel_231_variable_in_func(208, *rel_231_variable_in_func, *this, "variable_in_func", std::array<const char *,2>{{"s:Variable","s:Function"}}, std::array<const char *,2>{{"v","func"}}, 0)
, wrapper_rel_232_signature_arg_alloc(209, *rel_232_signature_arg_alloc, *this, "signature_arg_alloc", std::array<const char *,2>{{"s:FunctionName","i:ArgumentIndex"}}, std::array<const char *,2>{{"?func","?index"}}, 0)
, wrapper_rel_233_signature_arg_alloc_once(210, *rel_233_signature_arg_alloc_once, *this, "signature_arg_alloc_once", std::array<const char *,2>{{"s:FunctionName","i:ArgumentIndex"}}, std::array<const char *,2>{{"?func","?index"}}, 0)
, wrapper_rel_234_func_param(211, *rel_234_func_param, *this, "func_param", std::array<const char *,3>{{"s:Function","i:ArgumentIndex","s:Variable"}}, std::array<const char *,3>{{"func","index","param"}}, 0)
, wrapper_rel_235_argv_var_points_to(212, *rel_235_argv_var_points_to, *this, "argv_var_points_to", std::array<const char *,4>{{"r:Context","s:Allocation","r:Context","s:Variable"}}, std::array<const char *,4>{{"?aCtx","?alloc","?ctx","?var"}}, 0)
, wrapper_rel_236_phi_instr(213, *rel_236_phi_instr, *this, "phi_instr", std::array<const char *,1>{{"s:PhiInstruction"}}, std::array<const char *,1>{{"instr"}}, 0)
, wrapper_rel_237_phi_instr_pair_label(214, *rel_237_phi_instr_pair_label, *this, "phi_instr_pair_label", std::array<const char *,3>{{"s:symbol","i:number","s:symbol"}}, std::array<const char *,3>{{"v0","v1","v2"}}, 0)
, wrapper_rel_238_phi_instr_pair_value(215, *rel_238_phi_instr_pair_value, *this, "phi_instr_pair_value", std::array<const char *,3>{{"s:symbol","i:number","s:symbol"}}, std::array<const char *,3>{{"v0","v1","v2"}}, 0)
, wrapper_rel_239_phi_instr_pair(216, *rel_239_phi_instr_pair, *this, "phi_instr_pair", std::array<const char *,4>{{"s:PhiInstruction","i:number","s:Operand","s:Variable"}}, std::array<const char *,4>{{"instr","index","value","label"}}, 0)
, wrapper_rel_240_ptrtoint_instr_from_operand(217, *rel_240_ptrtoint_instr_from_operand, *this, "ptrtoint_instr_from_operand", std::array<const char *,2>{{"s:PtrToIntInstruction","s:Operand"}}, std::array<const char *,2>{{"instr","val"}}, 0)
, wrapper_rel_241_select_instr(218, *rel_241_select_instr, *this, "select_instr", std::array<const char *,1>{{"s:SelectInstruction"}}, std::array<const char *,1>{{"instr"}}, 0)
, wrapper_rel_242_select_instr_first_operand(219, *rel_242_select_instr_first_operand, *this, "select_instr_first_operand", std::array<const char *,2>{{"s:SelectInstruction","s:Operand"}}, std::array<const char *,2>{{"instr","op"}}, 0)
, wrapper_rel_243_select_instr_second_operand(220, *rel_243_select_instr_second_operand, *this, "select_instr_second_operand", std::array<const char *,2>{{"s:SelectInstruction","s:Operand"}}, std::array<const char *,2>{{"instr","op"}}, 0)
, wrapper_rel_244_inttoptr_instr(221, *rel_244_inttoptr_instr, *this, "inttoptr_instr", std::array<const char *,1>{{"s:IntToPtrInstruction"}}, std::array<const char *,1>{{"instr"}}, 0)
, wrapper_rel_245_load_instr_address(222, *rel_245_load_instr_address, *this, "load_instr_address", std::array<const char *,2>{{"s:LoadInstruction","s:Operand"}}, std::array<const char *,2>{{"instr","pointer"}}, 0)
, wrapper_rel_246_ret_instr_operand(223, *rel_246_ret_instr_operand, *this, "ret_instr_operand", std::array<const char *,2>{{"s:RetInstruction","s:Operand"}}, std::array<const char *,2>{{"instr","val"}}, 0)
, wrapper_rel_247_func_returns_value(224, *rel_247_func_returns_value, *this, "func_returns_value", std::array<const char *,2>{{"s:Operand","s:Function"}}, std::array<const char *,2>{{"?retValue","?inFunction"}}, 0)
, wrapper_rel_248_va_arg_instr(225, *rel_248_va_arg_instr, *this, "va_arg_instr", std::array<const char *,1>{{"s:VaArgInstruction"}}, std::array<const char *,1>{{"instr"}}, 0)
, wrapper_rel_249_va_arg_instr_type(226, *rel_249_va_arg_instr_type, *this, "va_arg_instr_type", std::array<const char *,2>{{"s:VaArgInstruction","s:Type"}}, std::array<const char *,2>{{"instr","type"}}, 0)
, wrapper_rel_250_subset_interp_assignment_va_arg_target(227, *rel_250_subset_interp_assignment_va_arg_target, *this, "subset.interp_assignment._va_arg_target", std::array<const char *,3>{{"s:Variable","s:Type","s:Function"}}, std::array<const char *,3>{{"?toVar","?argType","?callee"}}, 0)
, wrapper_rel_251_constant_struct_index(228, *rel_251_constant_struct_index, *this, "constant_struct_index", std::array<const char *,3>{{"s:ConstantStruct","i:number","s:Constant"}}, std::array<const char *,3>{{"c","i","ic"}}, 0)
, wrapper_rel_252_global_var_initializer(229, *rel_252_global_var_initializer, *this, "global_var_initializer", std::array<const char *,2>{{"s:GlobalVariable","s:Constant"}}, std::array<const char *,2>{{"gv","init"}}, 0)
, wrapper_rel_253_store_instr_address(230, *rel_253_store_instr_address, *this, "store_instr_address", std::array<const char *,2>{{"s:StoreInstruction","s:Operand"}}, std::array<const char *,2>{{"instr","pointer"}}, 0)
, wrapper_rel_254_store_instr_value(231, *rel_254_store_instr_value, *this, "store_instr_value", std::array<const char *,2>{{"s:StoreInstruction","s:Operand"}}, std::array<const char *,2>{{"instr","value"}}, 0)
, wrapper_rel_255_signature_arg_memcpy_arg(232, *rel_255_signature_arg_memcpy_arg, *this, "signature_arg_memcpy_arg", std::array<const char *,3>{{"s:FunctionName","i:ArgumentIndex","i:ArgumentIndex"}}, std::array<const char *,3>{{"?func","?index1","?index2"}}, 0)
, wrapper_rel_256_signature_arg_memcpy_arg_reachable(233, *rel_256_signature_arg_memcpy_arg_reachable, *this, "signature_arg_memcpy_arg_reachable", std::array<const char *,3>{{"s:FunctionName","i:ArgumentIndex","i:ArgumentIndex"}}, std::array<const char *,3>{{"?func","?index1","?index2"}}, 0)
, wrapper_rel_257_signature_arg_memcpy_global(234, *rel_257_signature_arg_memcpy_global, *this, "signature_arg_memcpy_global", std::array<const char *,3>{{"s:FunctionName","i:ArgumentIndex","s:GlobalVarName"}}, std::array<const char *,3>{{"?func","?index","?global"}}, 0)
, wrapper_rel_258_signature_arg_memcpy_global_reachable(235, *rel_258_signature_arg_memcpy_global_reachable, *this, "signature_arg_memcpy_global_reachable", std::array<const char *,3>{{"s:FunctionName","i:ArgumentIndex","s:GlobalVarName"}}, std::array<const char *,3>{{"?func","?index","?global"}}, 0)
, wrapper_rel_259_signature_global_memcpy_arg(236, *rel_259_signature_global_memcpy_arg, *this, "signature_global_memcpy_arg", std::array<const char *,3>{{"s:FunctionName","s:GlobalVarName","i:ArgumentIndex"}}, std::array<const char *,3>{{"?func","?global","?index"}}, 0)
, wrapper_rel_260_signature_global_memcpy_arg_reachable(237, *rel_260_signature_global_memcpy_arg_reachable, *this, "signature_global_memcpy_arg_reachable", std::array<const char *,3>{{"s:FunctionName","s:GlobalVarName","i:ArgumentIndex"}}, std::array<const char *,3>{{"?func","?global","?index"}}, 0)
, wrapper_rel_261_signature_return_aliases_arg_reachable(238, *rel_261_signature_return_aliases_arg_reachable, *this, "signature_return_aliases_arg_reachable", std::array<const char *,2>{{"s:FunctionName","i:ArgumentIndex"}}, std::array<const char *,2>{{"?func","?index"}}, 0)
, wrapper_rel_262_signature_return_aliases_global_reachable(239, *rel_262_signature_return_aliases_global_reachable, *this, "signature_return_aliases_global_reachable", std::array<const char *,2>{{"s:FunctionName","s:GlobalVarName"}}, std::array<const char *,2>{{"?func","?global"}}, 0)
, wrapper_rel_263_struct_type_field_offset(240, *rel_263_struct_type_field_offset, *this, "struct_type_field_offset", std::array<const char *,3>{{"s:StructType","i:FieldIndex","i:SubregionOffset"}}, std::array<const char *,3>{{"type","index","offset"}}, 0)
, wrapper_rel_264_signature_arg_points_to_global(241, *rel_264_signature_arg_points_to_global, *this, "signature_arg_points_to_global", std::array<const char *,3>{{"s:FunctionName","i:ArgumentIndex","s:GlobalVarName"}}, std::array<const char *,3>{{"?func","?index","?global"}}, 0)
, wrapper_rel_265_unknown_location(242, *rel_265_unknown_location, *this, "unknown_location", std::array<const char *,1>{{"s:UnknownAllocation"}}, std::array<const char *,1>{{"?alloc"}}, 0)
, wrapper_rel_266_getelementptr_instr_nindices(243, *rel_266_getelementptr_instr_nindices, *this, "getelementptr_instr_nindices", std::array<const char *,2>{{"s:GetElementPtrInstruction","i:number"}}, std::array<const char *,2>{{"instr","total"}}, 0)
, wrapper_rel_267_null_location(244, *rel_267_null_location, *this, "null_location", std::array<const char *,1>{{"s:NullAllocation"}}, std::array<const char *,1>{{"?alloc"}}, 0)
, wrapper_rel_268_non_allocation(245, *rel_268_non_allocation, *this, "non_allocation", std::array<const char *,1>{{"s:NonAllocation"}}, std::array<const char *,1>{{"?alloc"}}, 0)
, wrapper_rel_269_signature_return_alloc(246, *rel_269_signature_return_alloc, *this, "signature_return_alloc", std::array<const char *,1>{{"s:FunctionName"}}, std::array<const char *,1>{{"?func"}}, 0)
, wrapper_rel_270_signature_return_alloc_once(247, *rel_270_signature_return_alloc_once, *this, "signature_return_alloc_once", std::array<const char *,1>{{"s:FunctionName"}}, std::array<const char *,1>{{"?func"}}, 0)
, wrapper_rel_271_signature_return_aliases_arg(248, *rel_271_signature_return_aliases_arg, *this, "signature_return_aliases_arg", std::array<const char *,2>{{"s:FunctionName","i:ArgumentIndex"}}, std::array<const char *,2>{{"?func","?index"}}, 0)
, wrapper_rel_272_signature_return_aliases_global(249, *rel_272_signature_return_aliases_global, *this, "signature_return_aliases_global", std::array<const char *,2>{{"s:FunctionName","s:GlobalVarName"}}, std::array<const char *,2>{{"?func","?global"}}, 0)
, wrapper_rel_273_signature_return_points_to_global(250, *rel_273_signature_return_points_to_global, *this, "signature_return_points_to_global", std::array<const char *,2>{{"s:FunctionName","s:GlobalVarName"}}, std::array<const char *,2>{{"?func","?global"}}, 0)
, wrapper_rel_274_getelementptr_constant_expression_nindices(251, *rel_274_getelementptr_constant_expression_nindices, *this, "getelementptr_constant_expression_nindices", std::array<const char *,2>{{"s:GetElementPtrConstantExpression","i:number"}}, std::array<const char *,2>{{"cexpr","size"}}, 0)
, wrapper_rel_275_ptrtoint_constant_expression_from(252, *rel_275_ptrtoint_constant_expression_from, *this, "ptrtoint_constant_expression_from", std::array<const char *,2>{{"s:IntToPtrConstantExpression","s:Constant"}}, std::array<const char *,2>{{"cexpr","val"}}, 0)
, wrapper_rel_276_subset_merge_reachable_call(253, *rel_276_subset_merge_reachable_call, *this, "subset._merge._reachable_call", std::array<const char *,2>{{"r:Context","s:CallBase"}}, std::array<const char *,2>{{"?ctx","?instr"}}, 0)
, wrapper_rel_279_subset_type_indication_stack_type_indication(254, *rel_279_subset_type_indication_stack_type_indication, *this, "subset.type_indication.stack_type_indication", std::array<const char *,3>{{"s:Type","r:Context","s:Allocation"}}, std::array<const char *,3>{{"?type","?aCtx","?alloc"}}, 0)
, wrapper_rel_282_subset_merge_merge(255, *rel_282_subset_merge_merge, *this, "subset._merge.merge", std::array<const char *,3>{{"r:Context","s:CallBase","r:Context"}}, std::array<const char *,3>{{"?newCtx","?callerInstr","?callerCtx"}}, 0)
, wrapper_rel_285_subset_stripctx_stripctx_operand_points_to(256, *rel_285_subset_stripctx_stripctx_operand_points_to, *this, "subset.stripctx.stripctx_operand_points_to", std::array<const char *,2>{{"s:Allocation","s:Operand"}}, std::array<const char *,2>{{"?to","?from"}}, 0)
, wrapper_rel_288_subset_exception_object_exception_object(257, *rel_288_subset_exception_object_exception_object, *this, "subset.exception_object._exception_object", std::array<const char *,1>{{"s:ExceptionObject"}}, std::array<const char *,1>{{"?alloc"}}, 0)
, wrapper_rel_291_subset_exception_object_heap_allocation_by_alloc_exc(258, *rel_291_subset_exception_object_heap_allocation_by_alloc_exc, *this, "subset.exception_object.heap_allocation_by_alloc_exc", std::array<const char *,2>{{"s:CallBase","s:HeapAllocation"}}, std::array<const char *,2>{{"?insn","?heapAlloc"}}, 0)
, wrapper_rel_294_argv_ptr_points_to(259, *rel_294_argv_ptr_points_to, *this, "argv_ptr_points_to", std::array<const char *,2>{{"s:Allocation","s:Allocation"}}, std::array<const char *,2>{{"from","to"}}, 0)
, wrapper_rel_297_allocation(260, *rel_297_allocation, *this, "allocation", std::array<const char *,1>{{"s:Allocation"}}, std::array<const char *,1>{{"?alloc"}}, 0)
, wrapper_rel_300_basic_allocation(261, *rel_300_basic_allocation, *this, "basic_allocation", std::array<const char *,1>{{"s:BasicAllocation"}}, std::array<const char *,1>{{"?basicAlloc"}}, 0)
, wrapper_rel_303_stack_allocation(262, *rel_303_stack_allocation, *this, "stack_allocation", std::array<const char *,1>{{"s:StackAllocation"}}, std::array<const char *,1>{{"?stackAlloc"}}, 0)
, wrapper_rel_306_heap_allocation(263, *rel_306_heap_allocation, *this, "heap_allocation", std::array<const char *,1>{{"s:HeapAllocation"}}, std::array<const char *,1>{{"?heapAlloc"}}, 0)
, wrapper_rel_309_signature_allocation(264, *rel_309_signature_allocation, *this, "signature_allocation", std::array<const char *,1>{{"s:SignatureAllocation"}}, std::array<const char *,1>{{"?sigAlloc"}}, 0)
, wrapper_rel_312_stack_allocation_by_instr(265, *rel_312_stack_allocation_by_instr, *this, "stack_allocation_by_instr", std::array<const char *,2>{{"s:AllocaInstruction","s:StackAllocation"}}, std::array<const char *,2>{{"?insn","?stackAlloc"}}, 0)
, wrapper_rel_315_heap_allocation_by_instr(266, *rel_315_heap_allocation_by_instr, *this, "heap_allocation_by_instr", std::array<const char *,2>{{"s:CallBase","s:HeapAllocation"}}, std::array<const char *,2>{{"?insn","?heapAlloc"}}, 0)
, wrapper_rel_318_ptr_compatible_allocation(267, *rel_318_ptr_compatible_allocation, *this, "ptr_compatible_allocation", std::array<const char *,1>{{"s:Allocation"}}, std::array<const char *,1>{{"?alloc"}}, 0)
, wrapper_rel_321_static_allocation_type(268, *rel_321_static_allocation_type, *this, "static_allocation_type", std::array<const char *,2>{{"s:Allocation","s:Type"}}, std::array<const char *,2>{{"?alloc","?type"}}, 0)
, wrapper_rel_324_allocation_size(269, *rel_324_allocation_size, *this, "allocation_size", std::array<const char *,2>{{"s:Allocation","i:Bytes"}}, std::array<const char *,2>{{"?alloc","?size"}}, 0)
, wrapper_rel_327_dynamically_sized_alloc(270, *rel_327_dynamically_sized_alloc, *this, "dynamically_sized_alloc", std::array<const char *,1>{{"s:Allocation"}}, std::array<const char *,1>{{"?alloc"}}, 0)
, wrapper_rel_330_path_component(271, *rel_330_path_component, *this, "path_component", std::array<const char *,1>{{"s:PathComponent"}}, std::array<const char *,1>{{"?component"}}, 0)
, wrapper_rel_333_path_component_at_field(272, *rel_333_path_component_at_field, *this, "path_component_at_field", std::array<const char *,2>{{"s:FieldPathComponent","i:FieldIndex"}}, std::array<const char *,2>{{"?component","?field"}}, 0)
, wrapper_rel_336_path_component_at_index(273, *rel_336_path_component_at_index, *this, "path_component_at_index", std::array<const char *,2>{{"s:ArrayIndexPathComponent","i:ArrayIndex"}}, std::array<const char *,2>{{"?component","?index"}}, 0)
, wrapper_rel_339_assign_instr(274, *rel_339_assign_instr, *this, "assign_instr", std::array<const char *,2>{{"s:Variable","s:Operand"}}, std::array<const char *,2>{{"?toVar","?value"}}, 0)
, wrapper_rel_342_initialized_by_constant(275, *rel_342_initialized_by_constant, *this, "initialized_by_constant", std::array<const char *,2>{{"s:Allocation","s:Constant"}}, std::array<const char *,2>{{"?alloc","?constant"}}, 0)
, wrapper_rel_345_constant_ptr_points_to(276, *rel_345_constant_ptr_points_to, *this, "constant_ptr_points_to", std::array<const char *,4>{{"r:Context","s:Allocation","r:Context","s:Allocation"}}, std::array<const char *,4>{{"?aCtx","?alloc","?ptrACtx","?ptrAlloc"}}, 0)
, wrapper_rel_348_gep_constant_expr_indexes_from(277, *rel_348_gep_constant_expr_indexes_from, *this, "gep_constant_expr_indexes_from", std::array<const char *,4>{{"s:GetElementPtrConstantExpression","i:GepIndex","s:Allocation","s:Type"}}, std::array<const char *,4>{{"?cExpr","?index","?alloc","?type"}}, 0)
, wrapper_rel_351_gep_constant_expr_points_to(278, *rel_351_gep_constant_expr_points_to, *this, "gep_constant_expr_points_to", std::array<const char *,3>{{"s:GetElementPtrConstantExpression","i:GepIndex","s:Allocation"}}, std::array<const char *,3>{{"?cExpr","?index","?alloc"}}, 0)
, wrapper_rel_354_gep_constant_expr_index_offset(279, *rel_354_gep_constant_expr_index_offset, *this, "gep_constant_expr_index_offset", std::array<const char *,4>{{"s:GetElementPtrConstantExpression","i:GepIndex","s:Allocation","i:number"}}, std::array<const char *,4>{{"?insn","?index","?alloc","?offset"}}, 0)
, wrapper_rel_357_constant_points_to(280, *rel_357_constant_points_to, *this, "constant_points_to", std::array<const char *,2>{{"s:Constant","s:Allocation"}}, std::array<const char *,2>{{"?constant","?alloc"}}, 0)
, wrapper_rel_360_heap_allocation_by_new(281, *rel_360_heap_allocation_by_new, *this, "heap_allocation_by_new", std::array<const char *,2>{{"s:CallBase","s:HeapAllocation"}}, std::array<const char *,2>{{"?insn","?heapAlloc"}}, 0)
, wrapper_rel_363_alloc_region(282, *rel_363_alloc_region, *this, "alloc_region", std::array<const char *,2>{{"s:Allocation","s:Region"}}, std::array<const char *,2>{{"?alloc","?region"}}, 0)
, wrapper_rel_366_context(283, *rel_366_context, *this, "context", std::array<const char *,1>{{"r:Context"}}, std::array<const char *,1>{{"ctx"}}, 0)
, wrapper_rel_369_context_depth(284, *rel_369_context_depth, *this, "context_depth", std::array<const char *,2>{{"i:number","r:Context"}}, std::array<const char *,2>{{"n","ctx"}}, 0)
, wrapper_rel_372_drop_last(285, *rel_372_drop_last, *this, "drop_last", std::array<const char *,2>{{"r:Context","r:Context"}}, std::array<const char *,2>{{"out","in"}}, 0)
, wrapper_rel_375_static_subobjects_alloc_subregion(286, *rel_375_static_subobjects_alloc_subregion, *this, "static_subobjects._alloc_subregion", std::array<const char *,6>{{"s:AllocSubregion","s:Allocation","s:PathComponent","s:BasicAllocation","s:Path","s:Type"}}, std::array<const char *,6>{{"?region","?base","?component","?root","?path","?type"}}, 0)
, wrapper_rel_378_static_subobjects_non_func_basic_allocation(287, *rel_378_static_subobjects_non_func_basic_allocation, *this, "static_subobjects._non_func_basic_allocation", std::array<const char *,1>{{"s:BasicAllocation"}}, std::array<const char *,1>{{"?alloc"}}, 0)
, wrapper_rel_381_static_subobjects_alloc_subregion_at_field(288, *rel_381_static_subobjects_alloc_subregion_at_field, *this, "static_subobjects.alloc_subregion_at_field", std::array<const char *,3>{{"s:Allocation","i:FieldIndex","s:FieldSubregion"}}, std::array<const char *,3>{{"?alloc","?index","?region"}}, 0)
, wrapper_rel_384_static_subobjects_alloc_subregion_at_any_array_index(289, *rel_384_static_subobjects_alloc_subregion_at_any_array_index, *this, "static_subobjects.alloc_subregion_at_any_array_index", std::array<const char *,2>{{"s:Allocation","s:AnyArrayIndexSubregion"}}, std::array<const char *,2>{{"?alloc","?region"}}, 0)
, wrapper_rel_387_static_subobjects_index_in_bounds(290, *rel_387_static_subobjects_index_in_bounds, *this, "static_subobjects.index_in_bounds", std::array<const char *,2>{{"s:Allocation","i:ArrayIndex"}}, std::array<const char *,2>{{"?alloc","?index"}}, 0)
, wrapper_rel_390_static_subobjects_alloc_subregion_at_array_index(291, *rel_390_static_subobjects_alloc_subregion_at_array_index, *this, "static_subobjects.alloc_subregion_at_array_index", std::array<const char *,3>{{"s:Allocation","i:ArrayIndex","s:ArrayIndexSubregion"}}, std::array<const char *,3>{{"?alloc","?index","?region"}}, 0)
, wrapper_rel_393_subset_interp_assignment_interp_assignment(292, *rel_393_subset_interp_assignment_interp_assignment, *this, "subset.interp_assignment.interp_assignment", std::array<const char *,4>{{"r:Context","s:Variable","r:Context","s:Operand"}}, std::array<const char *,4>{{"?toCtx","?toVar","?fromCtx","?fromValue"}}, 0)
, wrapper_rel_396_subset_type_indication_heap_allocation_by_instr(293, *rel_396_subset_type_indication_heap_allocation_by_instr, *this, "subset.type_indication._heap_allocation_by_instr", std::array<const char *,3>{{"s:Instruction","s:Allocation","s:Allocation"}}, std::array<const char *,3>{{"?insn","?alloc","?untyped"}}, 0)
, wrapper_rel_399_subset_type_indication_heap_allocation_by_type_instr(294, *rel_399_subset_type_indication_heap_allocation_by_type_instr, *this, "subset.type_indication.heap_allocation_by_type_instr", std::array<const char *,3>{{"s:Type","s:CallBase","s:HeapAllocation"}}, std::array<const char *,3>{{"?type","?insn","?heapAlloc"}}, 0)
, wrapper_rel_402_subset_type_indication_assign_rebase_alloc(295, *rel_402_subset_type_indication_assign_rebase_alloc, *this, "subset.type_indication.assign_rebase_alloc", std::array<const char *,4>{{"s:Allocation","r:Context","s:Allocation","s:Variable"}}, std::array<const char *,4>{{"?typedAlloc","?aCtx","?alloc","?var"}}, 0)
, wrapper_rel_405_subset_type_indication_stack_allocation_by_type_instr(296, *rel_405_subset_type_indication_stack_allocation_by_type_instr, *this, "subset.type_indication.stack_allocation_by_type_instr", std::array<const char *,3>{{"s:Type","s:AllocaInstruction","s:StackAllocation"}}, std::array<const char *,3>{{"?type","?insn","?stackAlloc"}}, 0)
, wrapper_rel_408_subset_type_indication_ty_indication(297, *rel_408_subset_type_indication_ty_indication, *this, "subset.type_indication.ty_indication", std::array<const char *,3>{{"s:Type","r:Context","s:Allocation"}}, std::array<const char *,3>{{"?type","?aCtx","?alloc"}}, 0)
, wrapper_rel_411_subset_callgraph_reachable_context(298, *rel_411_subset_callgraph_reachable_context, *this, "subset.callgraph.reachable_context", std::array<const char *,2>{{"r:Context","s:FunctionDecl"}}, std::array<const char *,2>{{"?ctx","?func"}}, 0)
, wrapper_rel_414_subset_callgraph_reachable_func(299, *rel_414_subset_callgraph_reachable_func, *this, "subset.callgraph.reachable_func", std::array<const char *,1>{{"s:FunctionDecl"}}, std::array<const char *,1>{{"func"}}, 0)
, wrapper_rel_417_subset_callgraph_reachable_store(300, *rel_417_subset_callgraph_reachable_store, *this, "subset.callgraph.reachable_store", std::array<const char *,3>{{"r:Context","s:Operand","s:Operand"}}, std::array<const char *,3>{{"?ctx","?toAddress","?value"}}, 0)
, wrapper_rel_420_subset_callgraph_reachable_load(301, *rel_420_subset_callgraph_reachable_load, *this, "subset.callgraph.reachable_load", std::array<const char *,3>{{"r:Context","s:Variable","s:Operand"}}, std::array<const char *,3>{{"?ctx","?toVar","?fromAdress"}}, 0)
, wrapper_rel_423_subset_callgraph_callgraph_edge(302, *rel_423_subset_callgraph_callgraph_edge, *this, "subset.callgraph.callgraph_edge", std::array<const char *,4>{{"r:Context","s:FunctionDecl","r:Context","s:CallBase"}}, std::array<const char *,4>{{"?calleeCtx","?callee","?callerCtx","?callerInstr"}}, 0)
, wrapper_rel_426_subset_callgraph_callgraph_edge_interim_direct_call(303, *rel_426_subset_callgraph_callgraph_edge_interim_direct_call, *this, "subset.callgraph._callgraph_edge_interim_direct_call", std::array<const char *,3>{{"s:FunctionDecl","r:Context","s:CallBase"}}, std::array<const char *,3>{{"?callee","?callerCtx","?callerInstr"}}, 0)
, wrapper_rel_429_subset_callgraph_callgraph_edge_interim_direct_invoke(304, *rel_429_subset_callgraph_callgraph_edge_interim_direct_invoke, *this, "subset.callgraph._callgraph_edge_interim_direct_invoke", std::array<const char *,3>{{"s:FunctionDecl","r:Context","s:CallBase"}}, std::array<const char *,3>{{"?callee","?callerCtx","?callerInstr"}}, 0)
, wrapper_rel_432_subset_callgraph_callgraph_edge_interim_indirect_call(305, *rel_432_subset_callgraph_callgraph_edge_interim_indirect_call, *this, "subset.callgraph._callgraph_edge_interim_indirect_call", std::array<const char *,4>{{"s:FunctionDecl","r:Context","r:Context","s:CallBase"}}, std::array<const char *,4>{{"?callee","?callerCtx","?aCtx","?callerInstr"}}, 0)
, wrapper_rel_435_subset_callgraph_callgraph_edge_interim_indirect_invoke(306, *rel_435_subset_callgraph_callgraph_edge_interim_indirect_invoke, *this, "subset.callgraph._callgraph_edge_interim_indirect_invoke", std::array<const char *,4>{{"s:FunctionDecl","r:Context","r:Context","s:CallBase"}}, std::array<const char *,4>{{"?callee","?callerCtx","?aCtx","?callerInstr"}}, 0)
, wrapper_rel_438_subset_var_points_to(307, *rel_438_subset_var_points_to, *this, "subset.var_points_to", std::array<const char *,4>{{"r:Context","s:Allocation","r:Context","s:Variable"}}, std::array<const char *,4>{{"?aCtx","?alloc","?ctx","?var"}}, 0)
, wrapper_rel_441_subset_ptr_points_to(308, *rel_441_subset_ptr_points_to, *this, "subset.ptr_points_to", std::array<const char *,4>{{"r:Context","s:Allocation","r:Context","s:Allocation"}}, std::array<const char *,4>{{"?aCtx","?alloc","?ptrACtx","?ptrAlloc"}}, 0)
, wrapper_rel_444_subset_operand_points_to(309, *rel_444_subset_operand_points_to, *this, "subset.operand_points_to", std::array<const char *,4>{{"r:Context","s:Allocation","r:Context","s:Operand"}}, std::array<const char *,4>{{"?aCtx","?alloc","?ctx","?operand"}}, 0)
, wrapper_rel_447_subset_signatures_sig_ptr_points_to(310, *rel_447_subset_signatures_sig_ptr_points_to, *this, "subset_signatures.sig_ptr_points_to", std::array<const char *,4>{{"r:Context","s:Allocation","r:Context","s:Allocation"}}, std::array<const char *,4>{{"?aCtx","?alloc","?ptrACtx","?ptrAlloc"}}, 0)
, wrapper_rel_450_subset_signatures_sig_var_alloc(311, *rel_450_subset_signatures_sig_var_alloc, *this, "subset_signatures._sig_var_alloc", std::array<const char *,5>{{"r:Context","s:SignatureAllocation","r:Context","s:Variable","s:Type"}}, std::array<const char *,5>{{"?aCtx","?sigAlloc","?ctx","?var","?type"}}, 0)
, wrapper_rel_453_subset_signatures_sig_ptr_alloc(312, *rel_453_subset_signatures_sig_ptr_alloc, *this, "subset_signatures._sig_ptr_alloc", std::array<const char *,5>{{"r:Context","s:SignatureAllocation","r:Context","s:Allocation","s:Type"}}, std::array<const char *,5>{{"?aCtx","?sigAlloc","?ctx","?ptr","?type"}}, 0)
, wrapper_rel_456_subset_signatures_signature_var_points_to_base(313, *rel_456_subset_signatures_signature_var_points_to_base, *this, "subset_signatures.signature_var_points_to_base", std::array<const char *,4>{{"r:Context","s:Allocation","r:Context","s:Variable"}}, std::array<const char *,4>{{"?aCtx","?alloc","?ctx","?var"}}, 0)
, wrapper_rel_459_subset_signatures_signature_ptr_points_to_base(314, *rel_459_subset_signatures_signature_ptr_points_to_base, *this, "subset_signatures.signature_ptr_points_to_base", std::array<const char *,4>{{"r:Context","s:Allocation","r:Context","s:Allocation"}}, std::array<const char *,4>{{"?aCtx","?alloc","?ptrACtx","?ptrAlloc"}}, 0)
, wrapper_rel_462_subset_signatures_memcpy_sig(315, *rel_462_subset_signatures_memcpy_sig, *this, "subset_signatures.memcpy_sig", std::array<const char *,4>{{"r:Context","s:Allocation","r:Context","s:Allocation"}}, std::array<const char *,4>{{"?toCtx","?to","?fromCtx","?from"}}, 0)
, wrapper_rel_465_subset_signatures_ptr_reaches_to_request(316, *rel_465_subset_signatures_ptr_reaches_to_request, *this, "subset_signatures._ptr_reaches_to_request", std::array<const char *,2>{{"r:Context","s:Allocation"}}, std::array<const char *,2>{{"?ptrACtx","?ptrAlloc"}}, 0)
, wrapper_rel_468_subset_signatures_ptr_reaches_to(317, *rel_468_subset_signatures_ptr_reaches_to, *this, "subset_signatures._ptr_reaches_to", std::array<const char *,4>{{"r:Context","s:Allocation","r:Context","s:Allocation"}}, std::array<const char *,4>{{"?aCtx","?alloc","?ptrACtx","?ptrAlloc"}}, 0)
, wrapper_rel_471_subset_memcpy_memcpy_call(318, *rel_471_subset_memcpy_memcpy_call, *this, "subset_memcpy._memcpy_call", std::array<const char *,4>{{"r:Context","s:Operand","s:Operand","i:number"}}, std::array<const char *,4>{{"?ctx","?to","?from","?size"}}, 0)
, wrapper_rel_474_subset_memcpy_try_memcpy(319, *rel_474_subset_memcpy_try_memcpy, *this, "subset_memcpy._try_memcpy", std::array<const char *,5>{{"r:Context","s:Allocation","r:Context","s:Allocation","i:number"}}, std::array<const char *,5>{{"?toCtx","?to","?fromCtx","?from","size"}}, 0)
, wrapper_rel_477_subset_memcpy_stripctx_memcpy(320, *rel_477_subset_memcpy_stripctx_memcpy, *this, "subset_memcpy._stripctx_memcpy", std::array<const char *,3>{{"s:Allocation","s:Allocation","i:number"}}, std::array<const char *,3>{{"?toAlloc","?fromAlloc","?size"}}, 0)
, wrapper_rel_480_subset_memcpy_type_compatible_memcpy(321, *rel_480_subset_memcpy_type_compatible_memcpy, *this, "subset_memcpy._type_compatible_memcpy", std::array<const char *,3>{{"s:Allocation","s:Allocation","i:number"}}, std::array<const char *,3>{{"?to","?from","?size"}}, 0)
, wrapper_rel_483_subset_memcpy_well_typed_and_sized_memcpy(322, *rel_483_subset_memcpy_well_typed_and_sized_memcpy, *this, "subset_memcpy._well_typed_and_sized_memcpy", std::array<const char *,3>{{"s:Allocation","s:Allocation","i:number"}}, std::array<const char *,3>{{"?to","?from","?size"}}, 0)
, wrapper_rel_486_subset_memcpy_do_memcpy(323, *rel_486_subset_memcpy_do_memcpy, *this, "subset_memcpy._do_memcpy", std::array<const char *,4>{{"r:Context","s:Allocation","r:Context","s:Allocation"}}, std::array<const char *,4>{{"?toCtx","?to","?fromCtx","?from"}}, 0)
, wrapper_rel_489_subset_memcpy_rec_memcpy(324, *rel_489_subset_memcpy_rec_memcpy, *this, "subset_memcpy.rec_memcpy", std::array<const char *,4>{{"r:Context","s:Allocation","r:Context","s:Allocation"}}, std::array<const char *,4>{{"?toCtx","?to","?fromCtx","?from"}}, 0)
, wrapper_rel_492_subset_gep_alloc_type_and_path(325, *rel_492_subset_gep_alloc_type_and_path, *this, "subset_gep._alloc_type_and_path", std::array<const char *,3>{{"s:Allocation","s:Type","s:PathComponent"}}, std::array<const char *,3>{{"?alloc","?allocType","?component"}}, 0)
, wrapper_rel_495_subset_gep_some_alloc_type_and_path(326, *rel_495_subset_gep_some_alloc_type_and_path, *this, "subset_gep._some_alloc_type_and_path", std::array<const char *,2>{{"s:Type","s:PathComponent"}}, std::array<const char *,2>{{"?allocType","?component"}}, 0)
, wrapper_rel_498_subset_gep_gep_type_compatible(327, *rel_498_subset_gep_gep_type_compatible, *this, "subset_gep._gep_type_compatible", std::array<const char *,3>{{"s:Type","s:Type","s:PathComponent"}}, std::array<const char *,3>{{"?gepType","?allocType","?component"}}, 0)
, wrapper_rel_501_subset_gep_gep_indexes_from(328, *rel_501_subset_gep_gep_indexes_from, *this, "subset_gep.gep_indexes_from", std::array<const char *,5>{{"s:GetElementPtrInstruction","i:GepIndex","s:Allocation","s:Allocation","s:Type"}}, std::array<const char *,5>{{"?insn","?index","?baseAlloc","?alloc","?type"}}, 0)
, wrapper_rel_504_subset_gep_gep_points_to(329, *rel_504_subset_gep_gep_points_to, *this, "subset_gep.gep_points_to", std::array<const char *,4>{{"s:GetElementPtrInstruction","i:GepIndex","s:Allocation","s:Allocation"}}, std::array<const char *,4>{{"?insn","?index","?baseAlloc","?alloc"}}, 0)
, wrapper_rel_507_subset_gep_gep_last_index_points_to(330, *rel_507_subset_gep_gep_last_index_points_to, *this, "subset_gep._gep_last_index_points_to", std::array<const char *,3>{{"s:Allocation","s:Allocation","s:GetElementPtrInstruction"}}, std::array<const char *,3>{{"?alloc","?baseAlloc","?insn"}}, 0)
, wrapper_rel_510_subset_gep_gep_address_ctx_points_to(331, *rel_510_subset_gep_gep_address_ctx_points_to, *this, "subset_gep._gep_address_ctx_points_to", std::array<const char *,4>{{"r:Context","r:Context","s:Allocation","s:GetElementPtrInstruction"}}, std::array<const char *,4>{{"?ctx","?aCtx","?baseAlloc","?insn"}}, 0)
, wrapper_rel_513_subset_cplusplus_is_init_by_ctor(332, *rel_513_subset_cplusplus_is_init_by_ctor, *this, "subset_cplusplus.is_init_by_ctor", std::array<const char *,4>{{"s:ClassType","s:FunctionDecl","s:Function","s:Allocation"}}, std::array<const char *,4>{{"?type","?ctor","?inFunction","?alloc"}}, 0)
, wrapper_rel_516_subset_at_exit_registers_dtor_atexit(333, *rel_516_subset_at_exit_registers_dtor_atexit, *this, "subset_at_exit._registers_dtor_atexit", std::array<const char *,3>{{"r:Context","s:Operand","s:Operand"}}, std::array<const char *,3>{{"?callCtx","?dtorOperand","?recvOperand"}}, 0)
, wrapper_rel_519_subset_at_exit_registers_atexit(334, *rel_519_subset_at_exit_registers_atexit, *this, "subset_at_exit._registers_atexit", std::array<const char *,2>{{"r:Context","s:Operand"}}, std::array<const char *,2>{{"?callerCtx","?funcOp"}}, 0)
, wrapper_rel_522_subset_at_exit_called_at_exit(335, *rel_522_subset_at_exit_called_at_exit, *this, "subset_at_exit.called_at_exit", std::array<const char *,1>{{"s:FunctionDecl"}}, std::array<const char *,1>{{"func"}}, 0)
, wrapper_rel_525_subset_at_exit_dtor_accepts_recv(336, *rel_525_subset_at_exit_dtor_accepts_recv, *this, "subset_at_exit._dtor_accepts_recv", std::array<const char *,3>{{"r:Context","s:GlobalAllocation","s:FunctionDecl"}}, std::array<const char *,3>{{"?aCtx","?recvObj","?dtor"}}, 0)
, wrapper_rel_528_subset_at_exit_at_exit_var_points_to(337, *rel_528_subset_at_exit_at_exit_var_points_to, *this, "subset_at_exit.at_exit_var_points_to", std::array<const char *,4>{{"r:Context","s:Allocation","r:Context","s:Variable"}}, std::array<const char *,4>{{"?aCtx","?alloc","?ctx","?var"}}, 0)
, wrapper_rel_531_subset_allocations_allocated_at(338, *rel_531_subset_allocations_allocated_at, *this, "subset_allocations.allocated_at", std::array<const char *,4>{{"r:Context","s:Allocation","r:Context","s:Variable"}}, std::array<const char *,4>{{"?aCtx","?alloc","?ctx","?var"}}, 0)
, wrapper_rel_534_subset_allocation_type_allocation_type(339, *rel_534_subset_allocation_type_allocation_type, *this, "subset_allocation_type.allocation_type", std::array<const char *,2>{{"s:Allocation","s:Type"}}, std::array<const char *,2>{{"?alloc","?type"}}, 0)
, wrapper_rel_537_subset_subobjects_alloc_subregion(340, *rel_537_subset_subobjects_alloc_subregion, *this, "subset_subobjects._alloc_subregion", std::array<const char *,6>{{"s:AllocSubregion","s:Allocation","s:PathComponent","s:BasicAllocation","s:Path","s:Type"}}, std::array<const char *,6>{{"?region","?base","?component","?root","?path","?type"}}, 0)
, wrapper_rel_540_subset_subobjects_non_func_basic_allocation(341, *rel_540_subset_subobjects_non_func_basic_allocation, *this, "subset_subobjects._non_func_basic_allocation", std::array<const char *,1>{{"s:BasicAllocation"}}, std::array<const char *,1>{{"?alloc"}}, 0)
, wrapper_rel_543_subset_subobjects_alloc_subregion_at_field(342, *rel_543_subset_subobjects_alloc_subregion_at_field, *this, "subset_subobjects.alloc_subregion_at_field", std::array<const char *,3>{{"s:Allocation","i:FieldIndex","s:FieldSubregion"}}, std::array<const char *,3>{{"?alloc","?index","?region"}}, 0)
, wrapper_rel_546_subset_subobjects_alloc_subregion_at_any_array_index(343, *rel_546_subset_subobjects_alloc_subregion_at_any_array_index, *this, "subset_subobjects.alloc_subregion_at_any_array_index", std::array<const char *,2>{{"s:Allocation","s:AnyArrayIndexSubregion"}}, std::array<const char *,2>{{"?alloc","?region"}}, 0)
, wrapper_rel_549_subset_subobjects_index_in_bounds(344, *rel_549_subset_subobjects_index_in_bounds, *this, "subset_subobjects.index_in_bounds", std::array<const char *,2>{{"s:Allocation","i:ArrayIndex"}}, std::array<const char *,2>{{"?alloc","?index"}}, 0)
, wrapper_rel_552_subset_subobjects_alloc_subregion_at_array_index(345, *rel_552_subset_subobjects_alloc_subregion_at_array_index, *this, "subset_subobjects.alloc_subregion_at_array_index", std::array<const char *,3>{{"s:Allocation","i:ArrayIndex","s:ArrayIndexSubregion"}}, std::array<const char *,3>{{"?alloc","?index","?region"}}, 0)
, wrapper_rel_555_subset_subobjects_alloc_subregion_offset(346, *rel_555_subset_subobjects_alloc_subregion_offset, *this, "subset_subobjects.alloc_subregion_offset", std::array<const char *,3>{{"s:Allocation","s:AllocSubregion","i:SubregionOffset"}}, std::array<const char *,3>{{"?base","?subAlloc","?offset"}}, 0)
, wrapper_rel_558_subset_aliases_alloc_aliases(347, *rel_558_subset_aliases_alloc_aliases, *this, "subset_aliases.alloc_aliases", std::array<const char *,2>{{"s:Allocation","s:Allocation"}}, std::array<const char *,2>{{"?alloc1","?alloc2"}}, 0)
, wrapper_rel_561_subset_aliases_alloc_matches(348, *rel_561_subset_aliases_alloc_matches, *this, "subset_aliases.alloc_matches", std::array<const char *,2>{{"s:Allocation","s:Allocation"}}, std::array<const char *,2>{{"?alloc","?starredAlloc"}}, 0)
, wrapper_rel_564_subset_aliases_alloc_may_alias(349, *rel_564_subset_aliases_alloc_may_alias, *this, "subset_aliases.alloc_may_alias", std::array<const char *,2>{{"s:Allocation","s:Allocation"}}, std::array<const char *,2>{{"?alloc1","?alloc2"}}, 0)
, wrapper_rel_567_allocation_by_instr(350, *rel_567_allocation_by_instr, *this, "allocation_by_instr", std::array<const char *,2>{{"s:AllocInstruction","s:Allocation"}}, std::array<const char *,2>{{"?insn","?alloc"}}, 0)
, wrapper_rel_568_subset_lift_allocation_by_instr_ctx(351, *rel_568_subset_lift_allocation_by_instr_ctx, *this, "subset_lift.allocation_by_instr_ctx", std::array<const char *,4>{{"r:Context","s:Instruction","r:Context","s:Allocation"}}, std::array<const char *,4>{{"?ctx","?insn","?aCtx","?alloc"}}, 0)
, wrapper_rel_569_context_to_string(352, *rel_569_context_to_string, *this, "context_to_string", std::array<const char *,2>{{"r:Context","s:symbol"}}, std::array<const char *,2>{{"ctx","str"}}, 0)
, wrapper_rel_572_subset_lift_allocation_with_context(353, *rel_572_subset_lift_allocation_with_context, *this, "subset_lift._allocation_with_context", std::array<const char *,2>{{"r:Context","s:Allocation"}}, std::array<const char *,2>{{"?aCtx","?alloc"}}, 0)
, wrapper_rel_573_subset_lift_alloc_may_alias_ctx(354, *rel_573_subset_lift_alloc_may_alias_ctx, *this, "subset_lift.alloc_may_alias_ctx", std::array<const char *,3>{{"r:Context","s:Allocation","s:Allocation"}}, std::array<const char *,3>{{"?aCtx","?alloc1","?alloc2"}}, 0)
, wrapper_rel_574_subset_lift_alloc_must_alias_ctx(355, *rel_574_subset_lift_alloc_must_alias_ctx, *this, "subset_lift.alloc_must_alias_ctx", std::array<const char *,3>{{"r:Context","s:Allocation","s:Allocation"}}, std::array<const char *,3>{{"?aCtx","?alloc1","?alloc2"}}, 0)
, wrapper_rel_575_subset_lift_alloc_subregion_ctx(356, *rel_575_subset_lift_alloc_subregion_ctx, *this, "subset_lift.alloc_subregion_ctx", std::array<const char *,3>{{"r:Context","s:Allocation","s:Allocation"}}, std::array<const char *,3>{{"?aCtx","?alloc1","?alloc2"}}, 0)
, wrapper_rel_576_subset_lift_allocation_size_ctx(357, *rel_576_subset_lift_allocation_size_ctx, *this, "subset_lift.allocation_size_ctx", std::array<const char *,3>{{"r:Context","s:Allocation","i:number"}}, std::array<const char *,3>{{"?actx","?alloc","?size"}}, 0)
, wrapper_rel_577_empty_path(358, *rel_577_empty_path, *this, "empty_path", std::array<const char *,1>{{"s:Path"}}, std::array<const char *,1>{{"?path"}}, 0)
, wrapper_rel_578_subset_subobjects_alloc_subregion_at_path(359, *rel_578_subset_subobjects_alloc_subregion_at_path, *this, "subset_subobjects.alloc_subregion_at_path", std::array<const char *,3>{{"s:Allocation","s:Path","s:Allocation"}}, std::array<const char *,3>{{"?base","?str","?obj"}}, 0)
, wrapper_rel_579_subset_lift_alloc_contains_ctx(360, *rel_579_subset_lift_alloc_contains_ctx, *this, "subset_lift.alloc_contains_ctx", std::array<const char *,3>{{"r:Context","s:Allocation","s:Allocation"}}, std::array<const char *,3>{{"?aCtx","?alloc1","?alloc2"}}, 0)
{
addRelation("int8_type", wrapper_rel_1_int8_type, false, false);
addRelation("pointer_type_has_component", wrapper_rel_2_pointer_type_has_component, true, false);
addRelation("+disconnected0", wrapper_rel_3_disconnected0, false, false);
addRelation("user_options", wrapper_rel_4_user_options, true, false);
addRelation("+disconnected10", wrapper_rel_5_disconnected10, false, false);
addRelation("+disconnected12", wrapper_rel_6_disconnected12, false, false);
addRelation("+disconnected14", wrapper_rel_7_disconnected14, false, false);
addRelation("+disconnected16", wrapper_rel_8_disconnected16, false, false);
addRelation("+disconnected18", wrapper_rel_9_disconnected18, false, false);
addRelation("+disconnected2", wrapper_rel_10_disconnected2, false, false);
addRelation("+disconnected20", wrapper_rel_11_disconnected20, false, false);
addRelation("+disconnected22", wrapper_rel_12_disconnected22, false, false);
addRelation("+disconnected24", wrapper_rel_13_disconnected24, false, false);
addRelation("+disconnected26", wrapper_rel_14_disconnected26, false, false);
addRelation("+disconnected28", wrapper_rel_15_disconnected28, false, false);
addRelation("+disconnected30", wrapper_rel_16_disconnected30, false, false);
addRelation("+disconnected32", wrapper_rel_17_disconnected32, false, false);
addRelation("+disconnected34", wrapper_rel_18_disconnected34, false, false);
addRelation("+disconnected36", wrapper_rel_19_disconnected36, false, false);
addRelation("+disconnected38", wrapper_rel_20_disconnected38, false, false);
addRelation("+disconnected4", wrapper_rel_21_disconnected4, false, false);
addRelation("+disconnected41", wrapper_rel_22_disconnected41, false, false);
addRelation("+disconnected6", wrapper_rel_23_disconnected6, false, false);
addRelation("+disconnected8", wrapper_rel_24_disconnected8, false, false);
addRelation("insensitive", wrapper_rel_25_insensitive, false, false);
addRelation("max_context_depth", wrapper_rel_26_max_context_depth, false, false);
addRelation("call_instr_func_operand", wrapper_rel_27_call_instr_func_operand, true, false);
addRelation("func_type", wrapper_rel_28_func_type, true, false);
addRelation("constant_has_type", wrapper_rel_29_constant_has_type, true, false);
addRelation("variable_has_type", wrapper_rel_30_variable_has_type, true, false);
addRelation("operand_has_type", wrapper_rel_31_operand_has_type, false, false);
addRelation("call_instr_fn_type", wrapper_rel_32_call_instr_fn_type, false, false);
addRelation("invoke_instr_func_operand", wrapper_rel_33_invoke_instr_func_operand, true, false);
addRelation("invoke_instr_fn_type", wrapper_rel_34_invoke_instr_fn_type, false, false);
addRelation("call_or_invoke_instr_fn_type", wrapper_rel_35_call_or_invoke_instr_fn_type, false, false);
addRelation("variable", wrapper_rel_36_variable, true, false);
addRelation("indirect_call_instr", wrapper_rel_37_indirect_call_instr, false, false);
addRelation("indirect_invoke_instr", wrapper_rel_38_indirect_invoke_instr, false, false);
addRelation("indirect_call_or_invoke_instr", wrapper_rel_39_indirect_call_or_invoke_instr, false, false);
addRelation("struct_type_field", wrapper_rel_40_struct_type_field, true, false);
addRelation("struct_type_nfields", wrapper_rel_41_struct_type_nfields, true, false);
addRelation("array_type_has_component", wrapper_rel_42_array_type_has_component, true, false);
addRelation("array_type_has_size", wrapper_rel_43_array_type_has_size, true, false);
addRelation("func_type_has_varargs", wrapper_rel_44_func_type_has_varargs, true, false);
addRelation("func_type_nparams", wrapper_rel_45_func_type_nparams, true, false);
addRelation("pointer_type", wrapper_rel_46_pointer_type, true, false);
addRelation("pointer_type_base_component", wrapper_rel_47_pointer_type_base_component, false, false);
addRelation("array_type", wrapper_rel_50_array_type, true, false);
addRelation("opaque_struct_type", wrapper_rel_51_opaque_struct_type, true, false);
addRelation("struct_type", wrapper_rel_52_struct_type, true, false);
addRelation("aggregate_type", wrapper_rel_53_aggregate_type, false, false);
addRelation("vector_type", wrapper_rel_54_vector_type, true, false);
addRelation("derived_type", wrapper_rel_55_derived_type, false, false);
addRelation("double_type", wrapper_rel_56_double_type, false, false);
addRelation("float_type", wrapper_rel_57_float_type, false, false);
addRelation("fp128_type", wrapper_rel_58_fp128_type, false, false);
addRelation("half_type", wrapper_rel_59_half_type, false, false);
addRelation("fp_type", wrapper_rel_60_fp_type, true, false);
addRelation("int1_type", wrapper_rel_61_int1_type, false, false);
addRelation("int32_type", wrapper_rel_62_int32_type, false, false);
addRelation("int64_type", wrapper_rel_63_int64_type, false, false);
addRelation("integer_type", wrapper_rel_64_integer_type, true, false);
addRelation("integer_pointer_type", wrapper_rel_65_integer_pointer_type, false, false);
addRelation("label_type", wrapper_rel_66_label_type, false, false);
addRelation("metadata_type", wrapper_rel_67_metadata_type, false, false);
addRelation("void_type", wrapper_rel_68_void_type, false, false);
addRelation("x86mmx_type", wrapper_rel_69_x86mmx_type, false, false);
addRelation("primitive_type", wrapper_rel_70_primitive_type, true, false);
addRelation("type", wrapper_rel_71_type, false, false);
addRelation("func_type_param", wrapper_rel_72_func_type_param, true, false);
addRelation("func_type_return", wrapper_rel_73_func_type_return, true, false);
addRelation("type_compatible", wrapper_rel_74_type_compatible, false, false);
addRelation("type_compatible_up_to_field", wrapper_rel_77_type_compatible_up_to_field, false, false);
addRelation("type_compatible_up_to_arg", wrapper_rel_80_type_compatible_up_to_arg, false, false);
addRelation("_eligible_base_type", wrapper_rel_83_eligible_base_type, false, false);
addRelation("_type_expands_base_type", wrapper_rel_86_type_expands_base_type, false, false);
addRelation("__agg_subclause", wrapper_rel_89_agg_subclause, false, false);
addRelation("alias_name", wrapper_rel_90_alias_name, true, false);
addRelation("constant_has_value", wrapper_rel_91_constant_has_value, true, false);
addRelation("_alias", wrapper_rel_92_alias, false, false);
addRelation("alias_aliasee", wrapper_rel_93_alias_aliasee, true, false);
addRelation("_aliasee", wrapper_rel_94_aliasee, false, false);
addRelation("aliased_constants", wrapper_rel_95_aliased_constants, false, false);
addRelation("global_region", wrapper_rel_96_global_region, false, false);
addRelation("heap_region", wrapper_rel_97_heap_region, false, false);
addRelation("stack_region", wrapper_rel_98_stack_region, false, false);
addRelation("_alloc_region", wrapper_rel_99_alloc_region, false, false);
addRelation("getelementptr_constant_expression_index", wrapper_rel_100_getelementptr_constant_expression_index, true, false);
addRelation("_constant_expression_next_index", wrapper_rel_101_constant_expression_next_index, false, false);
addRelation("getelementptr_constant_expression_base", wrapper_rel_102_getelementptr_constant_expression_base, true, false);
addRelation("_getelementptr_constant_expression_base_type", wrapper_rel_103_getelementptr_constant_expression_base_type, false, false);
addRelation("constant_to_int", wrapper_rel_104_constant_to_int, true, false);
addRelation("vector_type_has_component", wrapper_rel_105_vector_type_has_component, true, false);
addRelation("_getelementptr_constant_expression_interm_type", wrapper_rel_106_getelementptr_constant_expression_interm_type, false, false);
addRelation("type_has_subelement", wrapper_rel_109_type_has_subelement, false, false);
addRelation("type_contains_pointer", wrapper_rel_112_type_contains_pointer, false, false);
addRelation("func_type_has_pointer_arg", wrapper_rel_113_func_type_has_pointer_arg, false, false);
addRelation("func_type_has_no_pointer_args", wrapper_rel_114_func_type_has_no_pointer_args, false, false);
addRelation("func_type_has_pointer_return", wrapper_rel_115_func_type_has_pointer_return, false, false);
addRelation("func_type_has_no_pointer_return", wrapper_rel_116_func_type_has_no_pointer_return, false, false);
addRelation("constant_array", wrapper_rel_117_constant_array, true, false);
addRelation("bitcast_constant_expression", wrapper_rel_118_bitcast_constant_expression, true, false);
addRelation("getelementptr_constant_expression", wrapper_rel_119_getelementptr_constant_expression, true, false);
addRelation("inttoptr_constant_expression", wrapper_rel_120_inttoptr_constant_expression, true, false);
addRelation("ptrtoint_constant_expression", wrapper_rel_121_ptrtoint_constant_expression, true, false);
addRelation("constant_expression", wrapper_rel_122_constant_expression, true, false);
addRelation("constant_struct", wrapper_rel_123_constant_struct, true, false);
addRelation("fp_constant", wrapper_rel_124_fp_constant, true, false);
addRelation("func_constant", wrapper_rel_125_func_constant, true, false);
addRelation("global_var_constant", wrapper_rel_126_global_var_constant, true, false);
addRelation("inline_asm", wrapper_rel_127_inline_asm, true, false);
addRelation("integer_constant", wrapper_rel_128_integer_constant, true, false);
addRelation("nullptr_constant", wrapper_rel_129_nullptr_constant, true, false);
addRelation("poison_constant", wrapper_rel_130_poison_constant, true, false);
addRelation("undef_constant", wrapper_rel_131_undef_constant, true, false);
addRelation("constant", wrapper_rel_132_constant, true, false);
addRelation("direct_call_instr", wrapper_rel_133_direct_call_instr, false, false);
addRelation("direct_invoke_instr", wrapper_rel_134_direct_invoke_instr, false, false);
addRelation("operand", wrapper_rel_135_operand, false, false);
addRelation("bitcast_constant_expression_from", wrapper_rel_136_bitcast_constant_expression_from, true, false);
addRelation("func_constant_fn_name", wrapper_rel_137_func_constant_fn_name, true, false);
addRelation("func_name", wrapper_rel_138_func_name, true, false);
addRelation("constant_references_func", wrapper_rel_139_constant_references_func, false, false);
addRelation("_instr_calls_func", wrapper_rel_142_instr_calls_func, false, false);
addRelation("call_instr_arg", wrapper_rel_143_call_instr_arg, true, false);
addRelation("invoke_instr_arg", wrapper_rel_144_invoke_instr_arg, true, false);
addRelation("actual_arg", wrapper_rel_145_actual_arg, false, false);
addRelation("argv_alloc", wrapper_rel_146_argv_alloc, false, false);
addRelation("alloca_instr", wrapper_rel_147_alloca_instr, true, false);
addRelation("alloca_instr_type", wrapper_rel_148_alloca_instr_type, true, false);
addRelation("call_instr", wrapper_rel_149_call_instr, true, false);
addRelation("func", wrapper_rel_150_func, true, false);
addRelation("func_decl_to_defn", wrapper_rel_151_func_decl_to_defn, false, false);
addRelation("call_instr_fn_target", wrapper_rel_152_call_instr_fn_target, false, false);
addRelation("func_decl", wrapper_rel_153_func_decl, true, false);
addRelation("global_allocation_by_func", wrapper_rel_154_global_allocation_by_func, false, false);
addRelation("func_by_location", wrapper_rel_155_func_by_location, false, false);
addRelation("num_direct_calls_to_func", wrapper_rel_156_num_direct_calls_to_func, false, false);
addRelation("main_func", wrapper_rel_157_main_func, false, false);
addRelation("func_ty", wrapper_rel_158_func_ty, true, false);
addRelation("num_indirect_calls_to_compatible_func", wrapper_rel_159_num_indirect_calls_to_compatible_func, false, false);
addRelation("max_num_callsites", wrapper_rel_160_max_num_callsites, false, false);
addRelation("cxx_alloc_exception", wrapper_rel_161_cxx_alloc_exception, false, false);
addRelation("cxx_atexit_func", wrapper_rel_162_cxx_atexit_func, false, false);
addRelation("class_type_constructor", wrapper_rel_163_class_type_constructor, false, false);
addRelation("global_var", wrapper_rel_164_global_var, true, false);
addRelation("global_var_name", wrapper_rel_165_global_var_name, true, false);
addRelation("global_allocation_by_variable", wrapper_rel_166_global_allocation_by_variable, false, true);
addRelation("global_allocation_by_name", wrapper_rel_167_global_allocation_by_name, false, false);
addRelation("global_allocation", wrapper_rel_168_global_allocation, false, false);
addRelation("global_var_type", wrapper_rel_169_global_var_type, true, false);
addRelation("func_signature", wrapper_rel_170_func_signature, true, false);
addRelation("heap_alloc_func", wrapper_rel_171_heap_alloc_func, false, false);
addRelation("cxx_new_func", wrapper_rel_172_cxx_new_func, false, false);
addRelation("instr_assigns_to", wrapper_rel_173_instr_assigns_to, true, false);
addRelation("instr_returns_type", wrapper_rel_174_instr_returns_type, false, false);
addRelation("instr_func", wrapper_rel_175_instr_func, true, false);
addRelation("invoke_instr", wrapper_rel_176_invoke_instr, true, false);
addRelation("invoke_instr_fn_target", wrapper_rel_177_invoke_instr_fn_target, false, false);
addRelation("sized_alloc_instr", wrapper_rel_178_sized_alloc_instr, false, false);
addRelation("context_item_by_invoc_interim", wrapper_rel_179_context_item_by_invoc_interim, false, false);
addRelation("func_section", wrapper_rel_180_func_section, true, false);
addRelation("called_at_startup", wrapper_rel_181_called_at_startup, false, false);
addRelation("empty_alloc_context", wrapper_rel_182_empty_alloc_context, false, false);
addRelation("exit_context", wrapper_rel_183_exit_context, false, false);
addRelation("main_context", wrapper_rel_184_main_context, false, false);
addRelation("startup_context", wrapper_rel_185_startup_context, false, false);
addRelation("user_option_default", wrapper_rel_186_user_option_default, false, false);
addRelation("user_option_valid_value", wrapper_rel_187_user_option_valid_value, false, false);
addRelation("user_option_selected", wrapper_rel_188_user_option_selected, false, false);
addRelation("user_option_defaulted", wrapper_rel_189_user_option_defaulted, false, false);
addRelation("user_option_value", wrapper_rel_190_user_option_value, false, false);
addRelation("drop_context_by_invoc", wrapper_rel_191_drop_context_by_invoc, false, false);
addRelation("drop_context_item_by_invoc", wrapper_rel_192_drop_context_item_by_invoc, false, false);
addRelation("context_item_by_invoc", wrapper_rel_193_context_item_by_invoc, false, false);
addRelation("inlined_constructors", wrapper_rel_194_inlined_constructors, false, false);
addRelation("constant_in_func_name", wrapper_rel_195_constant_in_func_name, true, false);
addRelation("constant_in_func", wrapper_rel_196_constant_in_func, false, false);
addRelation("global_var_constant_name", wrapper_rel_197_global_var_constant_name, true, false);
addRelation("constant_references_variable", wrapper_rel_198_constant_references_variable, false, false);
addRelation("constant_array_index", wrapper_rel_201_constant_array_index, true, false);
addRelation("getelementptr_instr_index", wrapper_rel_202_getelementptr_instr_index, true, false);
addRelation("getelementptr_instr_base", wrapper_rel_203_getelementptr_instr_base, true, false);
addRelation("getelementptr_instr_base_type", wrapper_rel_204_getelementptr_instr_base_type, false, false);
addRelation("gep_is_vector_based", wrapper_rel_205_gep_is_vector_based, false, false);
addRelation("extractvalue_instr_index", wrapper_rel_206_extractvalue_instr_index, true, false);
addRelation("insertvalue_instr_index", wrapper_rel_207_insertvalue_instr_index, true, false);
addRelation("instr_successor_index", wrapper_rel_208_instr_successor_index, false, false);
addRelation("getelementptr_instrterm_type", wrapper_rel_209_getelementptr_instrterm_type, false, false);
addRelation("array_indices__no_typecomp", wrapper_rel_212_array_indices_no_typecomp, false, false);
addRelation("array_indices", wrapper_rel_213_array_indices, false, false);
addRelation("ppc_fp128_type", wrapper_rel_214_ppc_fp128_type, false, false);
addRelation("x86_fp80_type", wrapper_rel_215_x86_fp80_type, false, false);
addRelation("type_has_size", wrapper_rel_216_type_has_size, true, false);
addRelation("pointer_index", wrapper_rel_217_pointer_index, false, false);
addRelation("pointer_offset", wrapper_rel_218_pointer_offset, false, false);
addRelation("array_offset", wrapper_rel_219_array_offset, false, false);
addRelation("gep_zero_index_offset", wrapper_rel_220_gep_zero_index_offset, false, false);
addRelation("empty_path_component", wrapper_rel_221_empty_path_component, false, false);
addRelation("path_component_at_any_index", wrapper_rel_222_path_component_at_any_index, false, false);
addRelation("alloca_instr_size", wrapper_rel_223_alloca_instr_size, true, false);
addRelation("external_linkage_type", wrapper_rel_224_external_linkage_type, false, false);
addRelation("global_var_linkage", wrapper_rel_225_global_var_linkage, true, false);
addRelation("typeinfo_vtable", wrapper_rel_226_typeinfo_vtable, false, false);
addRelation("variable_has_name", wrapper_rel_227_variable_has_name, true, false);
addRelation("bitcast_instr_from_operand", wrapper_rel_228_bitcast_instr_from_operand, true, false);
addRelation("bitcast_instr_to_type", wrapper_rel_229_bitcast_instr_to_type, true, false);
addRelation("variable_in_func_name", wrapper_rel_230_variable_in_func_name, true, false);
addRelation("variable_in_func", wrapper_rel_231_variable_in_func, false, false);
addRelation("signature_arg_alloc", wrapper_rel_232_signature_arg_alloc, true, false);
addRelation("signature_arg_alloc_once", wrapper_rel_233_signature_arg_alloc_once, true, false);
addRelation("func_param", wrapper_rel_234_func_param, true, false);
addRelation("argv_var_points_to", wrapper_rel_235_argv_var_points_to, false, false);
addRelation("phi_instr", wrapper_rel_236_phi_instr, true, false);
addRelation("phi_instr_pair_label", wrapper_rel_237_phi_instr_pair_label, true, false);
addRelation("phi_instr_pair_value", wrapper_rel_238_phi_instr_pair_value, true, false);
addRelation("phi_instr_pair", wrapper_rel_239_phi_instr_pair, false, false);
addRelation("ptrtoint_instr_from_operand", wrapper_rel_240_ptrtoint_instr_from_operand, true, false);
addRelation("select_instr", wrapper_rel_241_select_instr, true, false);
addRelation("select_instr_first_operand", wrapper_rel_242_select_instr_first_operand, true, false);
addRelation("select_instr_second_operand", wrapper_rel_243_select_instr_second_operand, true, false);
addRelation("inttoptr_instr", wrapper_rel_244_inttoptr_instr, true, false);
addRelation("load_instr_address", wrapper_rel_245_load_instr_address, true, false);
addRelation("ret_instr_operand", wrapper_rel_246_ret_instr_operand, true, false);
addRelation("func_returns_value", wrapper_rel_247_func_returns_value, false, false);
addRelation("va_arg_instr", wrapper_rel_248_va_arg_instr, true, false);
addRelation("va_arg_instr_type", wrapper_rel_249_va_arg_instr_type, true, false);
addRelation("subset.interp_assignment._va_arg_target", wrapper_rel_250_subset_interp_assignment_va_arg_target, false, false);
addRelation("constant_struct_index", wrapper_rel_251_constant_struct_index, true, false);
addRelation("global_var_initializer", wrapper_rel_252_global_var_initializer, true, false);
addRelation("store_instr_address", wrapper_rel_253_store_instr_address, true, false);
addRelation("store_instr_value", wrapper_rel_254_store_instr_value, true, false);
addRelation("signature_arg_memcpy_arg", wrapper_rel_255_signature_arg_memcpy_arg, true, false);
addRelation("signature_arg_memcpy_arg_reachable", wrapper_rel_256_signature_arg_memcpy_arg_reachable, true, false);
addRelation("signature_arg_memcpy_global", wrapper_rel_257_signature_arg_memcpy_global, true, false);
addRelation("signature_arg_memcpy_global_reachable", wrapper_rel_258_signature_arg_memcpy_global_reachable, true, false);
addRelation("signature_global_memcpy_arg", wrapper_rel_259_signature_global_memcpy_arg, true, false);
addRelation("signature_global_memcpy_arg_reachable", wrapper_rel_260_signature_global_memcpy_arg_reachable, true, false);
addRelation("signature_return_aliases_arg_reachable", wrapper_rel_261_signature_return_aliases_arg_reachable, true, false);
addRelation("signature_return_aliases_global_reachable", wrapper_rel_262_signature_return_aliases_global_reachable, true, false);
addRelation("struct_type_field_offset", wrapper_rel_263_struct_type_field_offset, true, false);
addRelation("signature_arg_points_to_global", wrapper_rel_264_signature_arg_points_to_global, true, false);
addRelation("unknown_location", wrapper_rel_265_unknown_location, false, false);
addRelation("getelementptr_instr_nindices", wrapper_rel_266_getelementptr_instr_nindices, true, false);
addRelation("null_location", wrapper_rel_267_null_location, false, false);
addRelation("non_allocation", wrapper_rel_268_non_allocation, false, false);
addRelation("signature_return_alloc", wrapper_rel_269_signature_return_alloc, true, false);
addRelation("signature_return_alloc_once", wrapper_rel_270_signature_return_alloc_once, true, false);
addRelation("signature_return_aliases_arg", wrapper_rel_271_signature_return_aliases_arg, true, false);
addRelation("signature_return_aliases_global", wrapper_rel_272_signature_return_aliases_global, true, false);
addRelation("signature_return_points_to_global", wrapper_rel_273_signature_return_points_to_global, true, false);
addRelation("getelementptr_constant_expression_nindices", wrapper_rel_274_getelementptr_constant_expression_nindices, true, false);
addRelation("ptrtoint_constant_expression_from", wrapper_rel_275_ptrtoint_constant_expression_from, true, false);
addRelation("subset._merge._reachable_call", wrapper_rel_276_subset_merge_reachable_call, false, false);
addRelation("subset.type_indication.stack_type_indication", wrapper_rel_279_subset_type_indication_stack_type_indication, false, false);
addRelation("subset._merge.merge", wrapper_rel_282_subset_merge_merge, false, false);
addRelation("subset.stripctx.stripctx_operand_points_to", wrapper_rel_285_subset_stripctx_stripctx_operand_points_to, false, false);
addRelation("subset.exception_object._exception_object", wrapper_rel_288_subset_exception_object_exception_object, false, false);
addRelation("subset.exception_object.heap_allocation_by_alloc_exc", wrapper_rel_291_subset_exception_object_heap_allocation_by_alloc_exc, false, false);
addRelation("argv_ptr_points_to", wrapper_rel_294_argv_ptr_points_to, false, false);
addRelation("allocation", wrapper_rel_297_allocation, false, false);
addRelation("basic_allocation", wrapper_rel_300_basic_allocation, false, false);
addRelation("stack_allocation", wrapper_rel_303_stack_allocation, false, false);
addRelation("heap_allocation", wrapper_rel_306_heap_allocation, false, false);
addRelation("signature_allocation", wrapper_rel_309_signature_allocation, false, false);
addRelation("stack_allocation_by_instr", wrapper_rel_312_stack_allocation_by_instr, false, false);
addRelation("heap_allocation_by_instr", wrapper_rel_315_heap_allocation_by_instr, false, false);
addRelation("ptr_compatible_allocation", wrapper_rel_318_ptr_compatible_allocation, false, false);
addRelation("static_allocation_type", wrapper_rel_321_static_allocation_type, false, false);
addRelation("allocation_size", wrapper_rel_324_allocation_size, false, false);
addRelation("dynamically_sized_alloc", wrapper_rel_327_dynamically_sized_alloc, false, false);
addRelation("path_component", wrapper_rel_330_path_component, false, false);
addRelation("path_component_at_field", wrapper_rel_333_path_component_at_field, false, false);
addRelation("path_component_at_index", wrapper_rel_336_path_component_at_index, false, false);
addRelation("assign_instr", wrapper_rel_339_assign_instr, false, false);
addRelation("initialized_by_constant", wrapper_rel_342_initialized_by_constant, false, false);
addRelation("constant_ptr_points_to", wrapper_rel_345_constant_ptr_points_to, false, false);
addRelation("gep_constant_expr_indexes_from", wrapper_rel_348_gep_constant_expr_indexes_from, false, false);
addRelation("gep_constant_expr_points_to", wrapper_rel_351_gep_constant_expr_points_to, false, false);
addRelation("gep_constant_expr_index_offset", wrapper_rel_354_gep_constant_expr_index_offset, false, false);
addRelation("constant_points_to", wrapper_rel_357_constant_points_to, false, false);
addRelation("heap_allocation_by_new", wrapper_rel_360_heap_allocation_by_new, false, false);
addRelation("alloc_region", wrapper_rel_363_alloc_region, false, false);
addRelation("context", wrapper_rel_366_context, false, false);
addRelation("context_depth", wrapper_rel_369_context_depth, false, false);
addRelation("drop_last", wrapper_rel_372_drop_last, false, false);
addRelation("static_subobjects._alloc_subregion", wrapper_rel_375_static_subobjects_alloc_subregion, false, false);
addRelation("static_subobjects._non_func_basic_allocation", wrapper_rel_378_static_subobjects_non_func_basic_allocation, false, false);
addRelation("static_subobjects.alloc_subregion_at_field", wrapper_rel_381_static_subobjects_alloc_subregion_at_field, false, false);
addRelation("static_subobjects.alloc_subregion_at_any_array_index", wrapper_rel_384_static_subobjects_alloc_subregion_at_any_array_index, false, false);
addRelation("static_subobjects.index_in_bounds", wrapper_rel_387_static_subobjects_index_in_bounds, false, false);
addRelation("static_subobjects.alloc_subregion_at_array_index", wrapper_rel_390_static_subobjects_alloc_subregion_at_array_index, false, false);
addRelation("subset.interp_assignment.interp_assignment", wrapper_rel_393_subset_interp_assignment_interp_assignment, false, false);
addRelation("subset.type_indication._heap_allocation_by_instr", wrapper_rel_396_subset_type_indication_heap_allocation_by_instr, false, false);
addRelation("subset.type_indication.heap_allocation_by_type_instr", wrapper_rel_399_subset_type_indication_heap_allocation_by_type_instr, false, false);
addRelation("subset.type_indication.assign_rebase_alloc", wrapper_rel_402_subset_type_indication_assign_rebase_alloc, false, false);
addRelation("subset.type_indication.stack_allocation_by_type_instr", wrapper_rel_405_subset_type_indication_stack_allocation_by_type_instr, false, false);
addRelation("subset.type_indication.ty_indication", wrapper_rel_408_subset_type_indication_ty_indication, false, false);
addRelation("subset.callgraph.reachable_context", wrapper_rel_411_subset_callgraph_reachable_context, false, false);
addRelation("subset.callgraph.reachable_func", wrapper_rel_414_subset_callgraph_reachable_func, false, false);
addRelation("subset.callgraph.reachable_store", wrapper_rel_417_subset_callgraph_reachable_store, false, false);
addRelation("subset.callgraph.reachable_load", wrapper_rel_420_subset_callgraph_reachable_load, false, false);
addRelation("subset.callgraph.callgraph_edge", wrapper_rel_423_subset_callgraph_callgraph_edge, false, true);
addRelation("subset.callgraph._callgraph_edge_interim_direct_call", wrapper_rel_426_subset_callgraph_callgraph_edge_interim_direct_call, false, false);
addRelation("subset.callgraph._callgraph_edge_interim_direct_invoke", wrapper_rel_429_subset_callgraph_callgraph_edge_interim_direct_invoke, false, false);
addRelation("subset.callgraph._callgraph_edge_interim_indirect_call", wrapper_rel_432_subset_callgraph_callgraph_edge_interim_indirect_call, false, false);
addRelation("subset.callgraph._callgraph_edge_interim_indirect_invoke", wrapper_rel_435_subset_callgraph_callgraph_edge_interim_indirect_invoke, false, false);
addRelation("subset.var_points_to", wrapper_rel_438_subset_var_points_to, false, true);
addRelation("subset.ptr_points_to", wrapper_rel_441_subset_ptr_points_to, false, true);
addRelation("subset.operand_points_to", wrapper_rel_444_subset_operand_points_to, false, true);
addRelation("subset_signatures.sig_ptr_points_to", wrapper_rel_447_subset_signatures_sig_ptr_points_to, false, false);
addRelation("subset_signatures._sig_var_alloc", wrapper_rel_450_subset_signatures_sig_var_alloc, false, false);
addRelation("subset_signatures._sig_ptr_alloc", wrapper_rel_453_subset_signatures_sig_ptr_alloc, false, false);
addRelation("subset_signatures.signature_var_points_to_base", wrapper_rel_456_subset_signatures_signature_var_points_to_base, false, false);
addRelation("subset_signatures.signature_ptr_points_to_base", wrapper_rel_459_subset_signatures_signature_ptr_points_to_base, false, false);
addRelation("subset_signatures.memcpy_sig", wrapper_rel_462_subset_signatures_memcpy_sig, false, false);
addRelation("subset_signatures._ptr_reaches_to_request", wrapper_rel_465_subset_signatures_ptr_reaches_to_request, false, false);
addRelation("subset_signatures._ptr_reaches_to", wrapper_rel_468_subset_signatures_ptr_reaches_to, false, false);
addRelation("subset_memcpy._memcpy_call", wrapper_rel_471_subset_memcpy_memcpy_call, false, false);
addRelation("subset_memcpy._try_memcpy", wrapper_rel_474_subset_memcpy_try_memcpy, false, false);
addRelation("subset_memcpy._stripctx_memcpy", wrapper_rel_477_subset_memcpy_stripctx_memcpy, false, false);
addRelation("subset_memcpy._type_compatible_memcpy", wrapper_rel_480_subset_memcpy_type_compatible_memcpy, false, false);
addRelation("subset_memcpy._well_typed_and_sized_memcpy", wrapper_rel_483_subset_memcpy_well_typed_and_sized_memcpy, false, false);
addRelation("subset_memcpy._do_memcpy", wrapper_rel_486_subset_memcpy_do_memcpy, false, false);
addRelation("subset_memcpy.rec_memcpy", wrapper_rel_489_subset_memcpy_rec_memcpy, false, false);
addRelation("subset_gep._alloc_type_and_path", wrapper_rel_492_subset_gep_alloc_type_and_path, false, false);
addRelation("subset_gep._some_alloc_type_and_path", wrapper_rel_495_subset_gep_some_alloc_type_and_path, false, false);
addRelation("subset_gep._gep_type_compatible", wrapper_rel_498_subset_gep_gep_type_compatible, false, false);
addRelation("subset_gep.gep_indexes_from", wrapper_rel_501_subset_gep_gep_indexes_from, false, false);
addRelation("subset_gep.gep_points_to", wrapper_rel_504_subset_gep_gep_points_to, false, false);
addRelation("subset_gep._gep_last_index_points_to", wrapper_rel_507_subset_gep_gep_last_index_points_to, false, false);
addRelation("subset_gep._gep_address_ctx_points_to", wrapper_rel_510_subset_gep_gep_address_ctx_points_to, false, false);
addRelation("subset_cplusplus.is_init_by_ctor", wrapper_rel_513_subset_cplusplus_is_init_by_ctor, false, false);
addRelation("subset_at_exit._registers_dtor_atexit", wrapper_rel_516_subset_at_exit_registers_dtor_atexit, false, false);
addRelation("subset_at_exit._registers_atexit", wrapper_rel_519_subset_at_exit_registers_atexit, false, false);
addRelation("subset_at_exit.called_at_exit", wrapper_rel_522_subset_at_exit_called_at_exit, false, false);
addRelation("subset_at_exit._dtor_accepts_recv", wrapper_rel_525_subset_at_exit_dtor_accepts_recv, false, false);
addRelation("subset_at_exit.at_exit_var_points_to", wrapper_rel_528_subset_at_exit_at_exit_var_points_to, false, false);
addRelation("subset_allocations.allocated_at", wrapper_rel_531_subset_allocations_allocated_at, false, false);
addRelation("subset_allocation_type.allocation_type", wrapper_rel_534_subset_allocation_type_allocation_type, false, false);
addRelation("subset_subobjects._alloc_subregion", wrapper_rel_537_subset_subobjects_alloc_subregion, false, false);
addRelation("subset_subobjects._non_func_basic_allocation", wrapper_rel_540_subset_subobjects_non_func_basic_allocation, false, false);
addRelation("subset_subobjects.alloc_subregion_at_field", wrapper_rel_543_subset_subobjects_alloc_subregion_at_field, false, false);
addRelation("subset_subobjects.alloc_subregion_at_any_array_index", wrapper_rel_546_subset_subobjects_alloc_subregion_at_any_array_index, false, false);
addRelation("subset_subobjects.index_in_bounds", wrapper_rel_549_subset_subobjects_index_in_bounds, false, false);
addRelation("subset_subobjects.alloc_subregion_at_array_index", wrapper_rel_552_subset_subobjects_alloc_subregion_at_array_index, false, false);
addRelation("subset_subobjects.alloc_subregion_offset", wrapper_rel_555_subset_subobjects_alloc_subregion_offset, false, false);
addRelation("subset_aliases.alloc_aliases", wrapper_rel_558_subset_aliases_alloc_aliases, false, false);
addRelation("subset_aliases.alloc_matches", wrapper_rel_561_subset_aliases_alloc_matches, false, false);
addRelation("subset_aliases.alloc_may_alias", wrapper_rel_564_subset_aliases_alloc_may_alias, false, false);
addRelation("allocation_by_instr", wrapper_rel_567_allocation_by_instr, false, false);
addRelation("subset_lift.allocation_by_instr_ctx", wrapper_rel_568_subset_lift_allocation_by_instr_ctx, false, true);
addRelation("context_to_string", wrapper_rel_569_context_to_string, false, true);
addRelation("subset_lift._allocation_with_context", wrapper_rel_572_subset_lift_allocation_with_context, false, false);
addRelation("subset_lift.alloc_may_alias_ctx", wrapper_rel_573_subset_lift_alloc_may_alias_ctx, false, true);
addRelation("subset_lift.alloc_must_alias_ctx", wrapper_rel_574_subset_lift_alloc_must_alias_ctx, false, true);
addRelation("subset_lift.alloc_subregion_ctx", wrapper_rel_575_subset_lift_alloc_subregion_ctx, false, true);
addRelation("subset_lift.allocation_size_ctx", wrapper_rel_576_subset_lift_allocation_size_ctx, false, true);
addRelation("empty_path", wrapper_rel_577_empty_path, false, false);
addRelation("subset_subobjects.alloc_subregion_at_path", wrapper_rel_578_subset_subobjects_alloc_subregion_at_path, false, false);
addRelation("subset_lift.alloc_contains_ctx", wrapper_rel_579_subset_lift_alloc_contains_ctx, false, true);
}
~Sf_subset() {
}

private:
std::string             inputDirectory;
std::string             outputDirectory;
SignalHandler*          signalHandler {SignalHandler::instance()};
std::atomic<RamDomain>  ctr {};
std::atomic<std::size_t>     iter {};

void runFunction(std::string  inputDirectoryArg,
                 std::string  outputDirectoryArg,
                 bool         performIOArg,
                 bool         pruneImdtRelsArg) {
    this->inputDirectory  = std::move(inputDirectoryArg);
    this->outputDirectory = std::move(outputDirectoryArg);
    this->performIO       = performIOArg;
    this->pruneImdtRels   = pruneImdtRelsArg; 

    // set default threads (in embedded mode)
    // if this is not set, and omp is used, the default omp setting of number of cores is used.
#if defined(_OPENMP)
    if (0 < getNumThreads()) { omp_set_num_threads(static_cast<int>(getNumThreads())); }
#endif

    signalHandler->set();
// -- query evaluation --
{
 std::vector<RamDomain> args, ret;
subroutine_0(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_1(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_112(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_184(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_195(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_206(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_217(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_228(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_239(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_250(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_2(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_13(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_24(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_35(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_46(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_57(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_68(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_79(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_90(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_101(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_113(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_124(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_135(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_146(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_157(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_168(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_179(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_181(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_182(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_183(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_185(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_186(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_187(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_188(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_189(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_190(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_191(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_192(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_193(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_194(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_196(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_197(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_198(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_199(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_200(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_201(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_202(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_203(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_204(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_205(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_207(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_208(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_209(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_210(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_211(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_212(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_213(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_214(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_215(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_216(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_218(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_219(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_220(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_221(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_222(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_223(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_224(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_225(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_226(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_227(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_229(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_230(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_231(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_232(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_233(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_234(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_235(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_236(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_237(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_238(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_240(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_241(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_242(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_243(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_244(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_245(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_246(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_247(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_248(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_249(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_251(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_252(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_253(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_254(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_255(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_256(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_257(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_258(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_259(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_260(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_3(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_4(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_5(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_6(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_7(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_8(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_9(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_10(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_11(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_12(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_14(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_15(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_16(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_17(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_18(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_19(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_20(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_21(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_22(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_23(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_25(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_26(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_27(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_28(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_29(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_30(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_31(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_32(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_33(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_34(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_36(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_37(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_38(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_39(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_40(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_41(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_42(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_43(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_44(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_45(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_47(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_48(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_49(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_50(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_51(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_52(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_53(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_54(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_55(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_56(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_58(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_59(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_60(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_61(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_62(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_63(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_64(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_65(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_66(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_67(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_69(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_70(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_71(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_72(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_73(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_74(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_75(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_76(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_77(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_78(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_80(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_81(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_82(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_83(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_84(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_85(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_86(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_87(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_88(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_89(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_91(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_92(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_93(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_94(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_95(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_96(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_97(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_98(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_99(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_100(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_102(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_103(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_104(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_105(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_106(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_107(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_108(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_109(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_110(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_111(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_114(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_115(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_116(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_117(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_118(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_119(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_120(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_121(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_122(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_123(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_125(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_126(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_127(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_128(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_129(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_130(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_131(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_132(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_133(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_134(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_136(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_137(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_138(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_139(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_140(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_141(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_142(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_143(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_144(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_145(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_147(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_148(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_149(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_150(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_151(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_152(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_153(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_154(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_155(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_156(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_158(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_159(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_160(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_161(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_162(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_163(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_164(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_165(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_166(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_167(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_169(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_170(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_171(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_172(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_173(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_174(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_175(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_176(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_177(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_178(args, ret);
}
{
 std::vector<RamDomain> args, ret;
subroutine_180(args, ret);
}

// -- relation hint statistics --
signalHandler->reset();
}
public:
void run() override { runFunction("", "", false, false); }
public:
void runAll(std::string inputDirectoryArg = "", std::string outputDirectoryArg = "", bool performIOArg=true, bool pruneImdtRelsArg=true) override { runFunction(inputDirectoryArg, outputDirectoryArg, performIOArg, pruneImdtRelsArg);
}
public:
void printAll(std::string outputDirectoryArg = "") override {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?var\t?globalAlloc"},{"auxArity","0"},{"compress","true"},{"name","global_allocation_by_variable"},{"operation","output"},{"output-dir","."},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"?var\", \"?globalAlloc\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:GlobalVariable\", \"s:GlobalAllocation\"]}}"}});
if (!outputDirectoryArg.empty()) {directiveMap["output-dir"] = outputDirectoryArg;}
IOSystem::getInstance().getWriter(directiveMap, symTable, recordTable)->writeAll(*rel_166_global_allocation_by_variable);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?calleeCtx\t?callee\t?callerCtx\t?callerInstr"},{"auxArity","0"},{"compress","true"},{"name","subset.callgraph.callgraph_edge"},{"operation","output"},{"output-dir","."},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 4, \"params\": [\"?calleeCtx\", \"?callee\", \"?callerCtx\", \"?callerInstr\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 4, \"types\": [\"r:Context\", \"s:FunctionDecl\", \"r:Context\", \"s:CallBase\"]}}"}});
if (!outputDirectoryArg.empty()) {directiveMap["output-dir"] = outputDirectoryArg;}
IOSystem::getInstance().getWriter(directiveMap, symTable, recordTable)->writeAll(*rel_423_subset_callgraph_callgraph_edge);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?aCtx\t?alloc\t?ctx\t?var"},{"auxArity","0"},{"compress","true"},{"name","subset.var_points_to"},{"operation","output"},{"output-dir","."},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 4, \"params\": [\"?aCtx\", \"?alloc\", \"?ctx\", \"?var\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 4, \"types\": [\"r:Context\", \"s:Allocation\", \"r:Context\", \"s:Variable\"]}}"}});
if (!outputDirectoryArg.empty()) {directiveMap["output-dir"] = outputDirectoryArg;}
IOSystem::getInstance().getWriter(directiveMap, symTable, recordTable)->writeAll(*rel_438_subset_var_points_to);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?aCtx\t?alloc\t?ptrACtx\t?ptrAlloc"},{"auxArity","0"},{"compress","true"},{"name","subset.ptr_points_to"},{"operation","output"},{"output-dir","."},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 4, \"params\": [\"?aCtx\", \"?alloc\", \"?ptrACtx\", \"?ptrAlloc\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 4, \"types\": [\"r:Context\", \"s:Allocation\", \"r:Context\", \"s:Allocation\"]}}"}});
if (!outputDirectoryArg.empty()) {directiveMap["output-dir"] = outputDirectoryArg;}
IOSystem::getInstance().getWriter(directiveMap, symTable, recordTable)->writeAll(*rel_441_subset_ptr_points_to);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?aCtx\t?alloc\t?ctx\t?operand"},{"auxArity","0"},{"compress","true"},{"name","subset.operand_points_to"},{"operation","output"},{"output-dir","."},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 4, \"params\": [\"?aCtx\", \"?alloc\", \"?ctx\", \"?operand\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 4, \"types\": [\"r:Context\", \"s:Allocation\", \"r:Context\", \"s:Operand\"]}}"}});
if (!outputDirectoryArg.empty()) {directiveMap["output-dir"] = outputDirectoryArg;}
IOSystem::getInstance().getWriter(directiveMap, symTable, recordTable)->writeAll(*rel_444_subset_operand_points_to);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?ctx\t?insn\t?aCtx\t?alloc"},{"auxArity","0"},{"compress","true"},{"name","subset_lift.allocation_by_instr_ctx"},{"operation","output"},{"output-dir","."},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 4, \"params\": [\"?ctx\", \"?insn\", \"?aCtx\", \"?alloc\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 4, \"types\": [\"r:Context\", \"s:Instruction\", \"r:Context\", \"s:Allocation\"]}}"}});
if (!outputDirectoryArg.empty()) {directiveMap["output-dir"] = outputDirectoryArg;}
IOSystem::getInstance().getWriter(directiveMap, symTable, recordTable)->writeAll(*rel_568_subset_lift_allocation_by_instr_ctx);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","ctx\tstr"},{"auxArity","0"},{"compress","true"},{"name","context_to_string"},{"operation","output"},{"output-dir","."},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"ctx\", \"str\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"r:Context\", \"s:symbol\"]}}"}});
if (!outputDirectoryArg.empty()) {directiveMap["output-dir"] = outputDirectoryArg;}
IOSystem::getInstance().getWriter(directiveMap, symTable, recordTable)->writeAll(*rel_569_context_to_string);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?aCtx\t?alloc1\t?alloc2"},{"auxArity","0"},{"compress","true"},{"name","subset_lift.alloc_may_alias_ctx"},{"operation","output"},{"output-dir","."},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"?aCtx\", \"?alloc1\", \"?alloc2\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"r:Context\", \"s:Allocation\", \"s:Allocation\"]}}"}});
if (!outputDirectoryArg.empty()) {directiveMap["output-dir"] = outputDirectoryArg;}
IOSystem::getInstance().getWriter(directiveMap, symTable, recordTable)->writeAll(*rel_573_subset_lift_alloc_may_alias_ctx);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?aCtx\t?alloc1\t?alloc2"},{"auxArity","0"},{"compress","true"},{"name","subset_lift.alloc_must_alias_ctx"},{"operation","output"},{"output-dir","."},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"?aCtx\", \"?alloc1\", \"?alloc2\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"r:Context\", \"s:Allocation\", \"s:Allocation\"]}}"}});
if (!outputDirectoryArg.empty()) {directiveMap["output-dir"] = outputDirectoryArg;}
IOSystem::getInstance().getWriter(directiveMap, symTable, recordTable)->writeAll(*rel_574_subset_lift_alloc_must_alias_ctx);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?aCtx\t?alloc1\t?alloc2"},{"auxArity","0"},{"compress","true"},{"name","subset_lift.alloc_subregion_ctx"},{"operation","output"},{"output-dir","."},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"?aCtx\", \"?alloc1\", \"?alloc2\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"r:Context\", \"s:Allocation\", \"s:Allocation\"]}}"}});
if (!outputDirectoryArg.empty()) {directiveMap["output-dir"] = outputDirectoryArg;}
IOSystem::getInstance().getWriter(directiveMap, symTable, recordTable)->writeAll(*rel_575_subset_lift_alloc_subregion_ctx);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?actx\t?alloc\t?size"},{"auxArity","0"},{"compress","true"},{"name","subset_lift.allocation_size_ctx"},{"operation","output"},{"output-dir","."},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"?actx\", \"?alloc\", \"?size\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"r:Context\", \"s:Allocation\", \"i:number\"]}}"}});
if (!outputDirectoryArg.empty()) {directiveMap["output-dir"] = outputDirectoryArg;}
IOSystem::getInstance().getWriter(directiveMap, symTable, recordTable)->writeAll(*rel_576_subset_lift_allocation_size_ctx);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?aCtx\t?alloc1\t?alloc2"},{"auxArity","0"},{"compress","true"},{"name","subset_lift.alloc_contains_ctx"},{"operation","output"},{"output-dir","."},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"?aCtx\", \"?alloc1\", \"?alloc2\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"r:Context\", \"s:Allocation\", \"s:Allocation\"]}}"}});
if (!outputDirectoryArg.empty()) {directiveMap["output-dir"] = outputDirectoryArg;}
IOSystem::getInstance().getWriter(directiveMap, symTable, recordTable)->writeAll(*rel_579_subset_lift_alloc_contains_ctx);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
}
public:
void loadAll(std::string inputDirectoryArg = "") override {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type\tindex\toffset"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","struct_type_field_offset.csv.gz"},{"name","struct_type_field_offset"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"type\", \"index\", \"offset\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:StructType\", \"i:FieldIndex\", \"i:SubregionOffset\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_263_struct_type_field_offset);
} catch (std::exception& e) {std::cerr << "Error loading struct_type_field_offset data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?index\t?global"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_arg_points_to_global.csv.gz"},{"name","signature_arg_points_to_global"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"?func\", \"?index\", \"?global\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\", \"s:GlobalVarName\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_264_signature_arg_points_to_global);
} catch (std::exception& e) {std::cerr << "Error loading signature_arg_points_to_global data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\ttotal"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","getelementptr_instr_nindices.csv.gz"},{"name","getelementptr_instr_nindices"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"total\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:GetElementPtrInstruction\", \"i:number\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_266_getelementptr_instr_nindices);
} catch (std::exception& e) {std::cerr << "Error loading getelementptr_instr_nindices data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_return_alloc.csv.gz"},{"name","signature_return_alloc"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"?func\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:FunctionName\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_269_signature_return_alloc);
} catch (std::exception& e) {std::cerr << "Error loading signature_return_alloc data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_return_alloc_once.csv.gz"},{"name","signature_return_alloc_once"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"?func\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:FunctionName\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_270_signature_return_alloc_once);
} catch (std::exception& e) {std::cerr << "Error loading signature_return_alloc_once data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","v"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","variable.csv.gz"},{"name","variable"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"v\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:Variable\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_36_variable);
} catch (std::exception& e) {std::cerr << "Error loading variable data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type\tindex\tfield"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","struct_type_field.csv.gz"},{"name","struct_type_field"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"type\", \"index\", \"field\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:StructType\", \"i:FieldIndex\", \"s:Type\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_40_struct_type_field);
} catch (std::exception& e) {std::cerr << "Error loading struct_type_field data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\ti\targ"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","call_instr_arg.csv.gz"},{"name","call_instr_arg"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"instr\", \"i\", \"arg\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:CallInstruction\", \"i:ArgumentIndex\", \"s:Operand\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_143_call_instr_arg);
} catch (std::exception& e) {std::cerr << "Error loading call_instr_arg data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\ti\targ"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","invoke_instr_arg.csv.gz"},{"name","invoke_instr_arg"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"instr\", \"i\", \"arg\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:InvokeInstruction\", \"i:ArgumentIndex\", \"s:Operand\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_144_invoke_instr_arg);
} catch (std::exception& e) {std::cerr << "Error loading invoke_instr_arg data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","alloca_instr.csv.gz"},{"name","alloca_instr"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"instr\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:AllocaInstruction\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_147_alloca_instr);
} catch (std::exception& e) {std::cerr << "Error loading alloca_instr data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\ttype"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","alloca_instr_type.csv.gz"},{"name","alloca_instr_type"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:AllocaInstruction\", \"s:Type\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_148_alloca_instr_type);
} catch (std::exception& e) {std::cerr << "Error loading alloca_instr_type data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","cexpr\tval"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","bitcast_constant_expression_from.csv.gz"},{"name","bitcast_constant_expression_from"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"cexpr\", \"val\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:BitcastConstantExpression\", \"s:Constant\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_136_bitcast_constant_expression_from);
} catch (std::exception& e) {std::cerr << "Error loading bitcast_constant_expression_from data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","fc\tname"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func_constant_fn_name.csv.gz"},{"name","func_constant_fn_name"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"fc\", \"name\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionConstant\", \"s:symbol\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_137_func_constant_fn_name);
} catch (std::exception& e) {std::cerr << "Error loading func_constant_fn_name data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","func\tname"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func_name.csv.gz"},{"name","func_name"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"func\", \"name\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionDecl\", \"s:FunctionName\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_138_func_name);
} catch (std::exception& e) {std::cerr << "Error loading func_name data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","func"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func_decl.csv.gz"},{"name","func_decl"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"func\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:FunctionDecl\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_153_func_decl);
} catch (std::exception& e) {std::cerr << "Error loading func_decl data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","gv"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","global_var.csv.gz"},{"name","global_var"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"gv\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:GlobalVariable\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_164_global_var);
} catch (std::exception& e) {std::cerr << "Error loading global_var data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","gv\tname"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","global_var_name.csv.gz"},{"name","global_var_name"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"gv\", \"name\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:GlobalVariable\", \"s:GlobalVarName\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_165_global_var_name);
} catch (std::exception& e) {std::cerr << "Error loading global_var_name data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","call_instr.csv.gz"},{"name","call_instr"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"instr\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:CallInstruction\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_149_call_instr);
} catch (std::exception& e) {std::cerr << "Error loading call_instr data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","func"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func.csv.gz"},{"name","func"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"func\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:Function\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_150_func);
} catch (std::exception& e) {std::cerr << "Error loading func data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","func\ttype"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func_ty.csv.gz"},{"name","func_ty"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"func\", \"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionDecl\", \"s:FunctionType\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_158_func_ty);
} catch (std::exception& e) {std::cerr << "Error loading func_ty data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","v0\tv1"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","variable_in_func_name.csv.gz"},{"name","variable_in_func_name"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"v0\", \"v1\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:Variable\", \"s:FunctionName\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_230_variable_in_func_name);
} catch (std::exception& e) {std::cerr << "Error loading variable_in_func_name data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?index"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_arg_alloc.csv.gz"},{"name","signature_arg_alloc"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"?func\", \"?index\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_232_signature_arg_alloc);
} catch (std::exception& e) {std::cerr << "Error loading signature_arg_alloc data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?index"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_arg_alloc_once.csv.gz"},{"name","signature_arg_alloc_once"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"?func\", \"?index\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_233_signature_arg_alloc_once);
} catch (std::exception& e) {std::cerr << "Error loading signature_arg_alloc_once data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","func\tindex\tparam"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func_param.csv.gz"},{"name","func_param"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"func\", \"index\", \"param\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:Function\", \"i:ArgumentIndex\", \"s:Variable\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_234_func_param);
} catch (std::exception& e) {std::cerr << "Error loading func_param data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","constant_expression.csv.gz"},{"name","constant_expression"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:ConstantExpression\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_122_constant_expression);
} catch (std::exception& e) {std::cerr << "Error loading constant_expression data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","constant_expression.csv.gz"},{"name","constant_expression"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:ConstantExpression\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_122_constant_expression);
} catch (std::exception& e) {std::cerr << "Error loading constant_expression data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","constant_struct.csv.gz"},{"name","constant_struct"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:ConstantStruct\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_123_constant_struct);
} catch (std::exception& e) {std::cerr << "Error loading constant_struct data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","cexpr\tval"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","ptrtoint_constant_expression_from.csv.gz"},{"name","ptrtoint_constant_expression_from"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"cexpr\", \"val\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:IntToPtrConstantExpression\", \"s:Constant\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_275_ptrtoint_constant_expression_from);
} catch (std::exception& e) {std::cerr << "Error loading ptrtoint_constant_expression_from data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","inttoptr_instr.csv.gz"},{"name","inttoptr_instr"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"instr\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:IntToPtrInstruction\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_244_inttoptr_instr);
} catch (std::exception& e) {std::cerr << "Error loading inttoptr_instr data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\tpointer"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","load_instr_address.csv.gz"},{"name","load_instr_address"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"pointer\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:LoadInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_245_load_instr_address);
} catch (std::exception& e) {std::cerr << "Error loading load_instr_address data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\tval"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","ret_instr_operand.csv.gz"},{"name","ret_instr_operand"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"val\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:RetInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_246_ret_instr_operand);
} catch (std::exception& e) {std::cerr << "Error loading ret_instr_operand data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","va_arg_instr.csv.gz"},{"name","va_arg_instr"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"instr\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:VaArgInstruction\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_248_va_arg_instr);
} catch (std::exception& e) {std::cerr << "Error loading va_arg_instr data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\top"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","invoke_instr_func_operand.csv.gz"},{"name","invoke_instr_func_operand"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"op\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:InvokeInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_33_invoke_instr_func_operand);
} catch (std::exception& e) {std::cerr << "Error loading invoke_instr_func_operand data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","array_type.csv.gz"},{"name","array_type"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:ArrayType\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_50_array_type);
} catch (std::exception& e) {std::cerr << "Error loading array_type data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","integer_type.csv.gz"},{"name","integer_type"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:IntegerType\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_64_integer_type);
} catch (std::exception& e) {std::cerr << "Error loading integer_type data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","fp_constant.csv.gz"},{"name","fp_constant"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:FPConstant\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_124_fp_constant);
} catch (std::exception& e) {std::cerr << "Error loading fp_constant data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func_constant.csv.gz"},{"name","func_constant"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:FunctionConstant\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_125_func_constant);
} catch (std::exception& e) {std::cerr << "Error loading func_constant data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","global_var_constant.csv.gz"},{"name","global_var_constant"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:GlobalVariableConstant\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_126_global_var_constant);
} catch (std::exception& e) {std::cerr << "Error loading global_var_constant data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func_type.csv.gz"},{"name","func_type"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:FunctionType\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_28_func_type);
} catch (std::exception& e) {std::cerr << "Error loading func_type data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c\ttype"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","constant_has_type.csv.gz"},{"name","constant_has_type"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"c\", \"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:Constant\", \"s:Type\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_29_constant_has_type);
} catch (std::exception& e) {std::cerr << "Error loading constant_has_type data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","v\ttype"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","variable_has_type.csv.gz"},{"name","variable_has_type"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"v\", \"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:Variable\", \"s:Type\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_30_variable_has_type);
} catch (std::exception& e) {std::cerr << "Error loading variable_has_type data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","func\tsignature"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func_signature.csv.gz"},{"name","func_signature"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"func\", \"signature\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionDecl\", \"s:symbol\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_170_func_signature);
} catch (std::exception& e) {std::cerr << "Error loading func_signature data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","gv\ttype"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","global_var_type.csv.gz"},{"name","global_var_type"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"gv\", \"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:GlobalVariable\", \"s:Type\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_169_global_var_type);
} catch (std::exception& e) {std::cerr << "Error loading global_var_type data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","undef_constant.csv.gz"},{"name","undef_constant"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:Constant\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_131_undef_constant);
} catch (std::exception& e) {std::cerr << "Error loading undef_constant data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","constant.csv.gz"},{"name","constant"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:Constant\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_132_constant);
} catch (std::exception& e) {std::cerr << "Error loading constant data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type\tindex\tparam"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func_type_param.csv.gz"},{"name","func_type_param"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"type\", \"index\", \"param\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:FunctionType\", \"i:ArgumentIndex\", \"s:Type\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_72_func_type_param);
} catch (std::exception& e) {std::cerr << "Error loading func_type_param data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type\tret"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func_type_return.csv.gz"},{"name","func_type_return"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"type\", \"ret\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionType\", \"s:Type\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_73_func_type_return);
} catch (std::exception& e) {std::cerr << "Error loading func_type_return data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\tvar"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","instr_assigns_to.csv.gz"},{"name","instr_assigns_to"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"var\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:Instruction\", \"s:Variable\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_173_instr_assigns_to);
} catch (std::exception& e) {std::cerr << "Error loading instr_assigns_to data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\tfunc"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","instr_func.csv.gz"},{"name","instr_func"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"func\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:Instruction\", \"s:Function\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_175_instr_func);
} catch (std::exception& e) {std::cerr << "Error loading instr_func data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","invoke_instr.csv.gz"},{"name","invoke_instr"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"instr\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:InvokeInstruction\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_176_invoke_instr);
} catch (std::exception& e) {std::cerr << "Error loading invoke_instr data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","fp_type.csv.gz"},{"name","fp_type"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:FPType\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_60_fp_type);
} catch (std::exception& e) {std::cerr << "Error loading fp_type data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\ttype"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","va_arg_instr_type.csv.gz"},{"name","va_arg_instr_type"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:VaArgInstruction\", \"s:Type\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_249_va_arg_instr_type);
} catch (std::exception& e) {std::cerr << "Error loading va_arg_instr_type data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c\ti\tic"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","constant_struct_index.csv.gz"},{"name","constant_struct_index"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"c\", \"i\", \"ic\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:ConstantStruct\", \"i:number\", \"s:Constant\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_251_constant_struct_index);
} catch (std::exception& e) {std::cerr << "Error loading constant_struct_index data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","gv\tinit"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","global_var_initializer.csv.gz"},{"name","global_var_initializer"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"gv\", \"init\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:GlobalVariable\", \"s:Constant\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_252_global_var_initializer);
} catch (std::exception& e) {std::cerr << "Error loading global_var_initializer data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","v0\tv1"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","constant_in_func_name.csv.gz"},{"name","constant_in_func_name"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"v0\", \"v1\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:Constant\", \"s:FunctionName\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_195_constant_in_func_name);
} catch (std::exception& e) {std::cerr << "Error loading constant_in_func_name data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","asm"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","inline_asm.csv.gz"},{"name","inline_asm"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"asm\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:InlineASM\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_127_inline_asm);
} catch (std::exception& e) {std::cerr << "Error loading inline_asm data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","integer_constant.csv.gz"},{"name","integer_constant"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:IntegerConstant\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_128_integer_constant);
} catch (std::exception& e) {std::cerr << "Error loading integer_constant data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","nullptr_constant.csv.gz"},{"name","nullptr_constant"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:NullPtrConstant\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_129_nullptr_constant);
} catch (std::exception& e) {std::cerr << "Error loading nullptr_constant data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","poison_constant.csv.gz"},{"name","poison_constant"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:Constant\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_130_poison_constant);
} catch (std::exception& e) {std::cerr << "Error loading poison_constant data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\top"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","call_instr_func_operand.csv.gz"},{"name","call_instr_func_operand"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"op\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:CallInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_27_call_instr_func_operand);
} catch (std::exception& e) {std::cerr << "Error loading call_instr_func_operand data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c\tname"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","global_var_constant_name.csv.gz"},{"name","global_var_constant_name"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"c\", \"name\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:GlobalVariableConstant\", \"s:symbol\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_197_global_var_constant_name);
} catch (std::exception& e) {std::cerr << "Error loading global_var_constant_name data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\tpointer"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","store_instr_address.csv.gz"},{"name","store_instr_address"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"pointer\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:StoreInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_253_store_instr_address);
} catch (std::exception& e) {std::cerr << "Error loading store_instr_address data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\tvalue"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","store_instr_value.csv.gz"},{"name","store_instr_value"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"value\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:StoreInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_254_store_instr_value);
} catch (std::exception& e) {std::cerr << "Error loading store_instr_value data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?index1\t?index2"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_arg_memcpy_arg.csv.gz"},{"name","signature_arg_memcpy_arg"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"?func\", \"?index1\", \"?index2\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\", \"i:ArgumentIndex\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_255_signature_arg_memcpy_arg);
} catch (std::exception& e) {std::cerr << "Error loading signature_arg_memcpy_arg data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?index1\t?index2"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_arg_memcpy_arg_reachable.csv.gz"},{"name","signature_arg_memcpy_arg_reachable"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"?func\", \"?index1\", \"?index2\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\", \"i:ArgumentIndex\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_256_signature_arg_memcpy_arg_reachable);
} catch (std::exception& e) {std::cerr << "Error loading signature_arg_memcpy_arg_reachable data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?index\t?global"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_arg_memcpy_global.csv.gz"},{"name","signature_arg_memcpy_global"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"?func\", \"?index\", \"?global\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\", \"s:GlobalVarName\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_257_signature_arg_memcpy_global);
} catch (std::exception& e) {std::cerr << "Error loading signature_arg_memcpy_global data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?index\t?global"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_arg_memcpy_global_reachable.csv.gz"},{"name","signature_arg_memcpy_global_reachable"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"?func\", \"?index\", \"?global\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\", \"s:GlobalVarName\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_258_signature_arg_memcpy_global_reachable);
} catch (std::exception& e) {std::cerr << "Error loading signature_arg_memcpy_global_reachable data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\tsize"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","alloca_instr_size.csv.gz"},{"name","alloca_instr_size"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"size\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:AllocaInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_223_alloca_instr_size);
} catch (std::exception& e) {std::cerr << "Error loading alloca_instr_size data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","phi_instr.csv.gz"},{"name","phi_instr"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"instr\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:PhiInstruction\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_236_phi_instr);
} catch (std::exception& e) {std::cerr << "Error loading phi_instr data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","v0\tv1\tv2"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","phi_instr_pair_label.csv.gz"},{"name","phi_instr_pair_label"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"v0\", \"v1\", \"v2\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:symbol\", \"i:number\", \"s:symbol\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_237_phi_instr_pair_label);
} catch (std::exception& e) {std::cerr << "Error loading phi_instr_pair_label data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","v0\tv1\tv2"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","phi_instr_pair_value.csv.gz"},{"name","phi_instr_pair_value"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"v0\", \"v1\", \"v2\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:symbol\", \"i:number\", \"s:symbol\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_238_phi_instr_pair_value);
} catch (std::exception& e) {std::cerr << "Error loading phi_instr_pair_value data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type\tcomp"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","array_type_has_component.csv.gz"},{"name","array_type_has_component"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"type\", \"comp\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:ArrayType\", \"s:Type\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_42_array_type_has_component);
} catch (std::exception& e) {std::cerr << "Error loading array_type_has_component data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type\tsize"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","array_type_has_size.csv.gz"},{"name","array_type_has_size"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"type\", \"size\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:ArrayType\", \"i:number\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_43_array_type_has_size);
} catch (std::exception& e) {std::cerr << "Error loading array_type_has_size data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func_type_has_varargs.csv.gz"},{"name","func_type_has_varargs"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:FunctionType\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_44_func_type_has_varargs);
} catch (std::exception& e) {std::cerr << "Error loading func_type_has_varargs data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c\ti\tic"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","constant_array_index.csv.gz"},{"name","constant_array_index"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"c\", \"i\", \"ic\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:ConstantArray\", \"i:number\", \"s:Constant\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_201_constant_array_index);
} catch (std::exception& e) {std::cerr << "Error loading constant_array_index data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?global\t?index"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_global_memcpy_arg.csv.gz"},{"name","signature_global_memcpy_arg"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"?func\", \"?global\", \"?index\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:FunctionName\", \"s:GlobalVarName\", \"i:ArgumentIndex\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_259_signature_global_memcpy_arg);
} catch (std::exception& e) {std::cerr << "Error loading signature_global_memcpy_arg data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?global\t?index"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_global_memcpy_arg_reachable.csv.gz"},{"name","signature_global_memcpy_arg_reachable"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"?func\", \"?global\", \"?index\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:FunctionName\", \"s:GlobalVarName\", \"i:ArgumentIndex\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_260_signature_global_memcpy_arg_reachable);
} catch (std::exception& e) {std::cerr << "Error loading signature_global_memcpy_arg_reachable data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?index"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_return_aliases_arg_reachable.csv.gz"},{"name","signature_return_aliases_arg_reachable"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"?func\", \"?index\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_261_signature_return_aliases_arg_reachable);
} catch (std::exception& e) {std::cerr << "Error loading signature_return_aliases_arg_reachable data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?global"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_return_aliases_global_reachable.csv.gz"},{"name","signature_return_aliases_global_reachable"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"?func\", \"?global\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionName\", \"s:GlobalVarName\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_262_signature_return_aliases_global_reachable);
} catch (std::exception& e) {std::cerr << "Error loading signature_return_aliases_global_reachable data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","cexpr\ti\tc"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","getelementptr_constant_expression_index.csv.gz"},{"name","getelementptr_constant_expression_index"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"cexpr\", \"i\", \"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:GetElementPtrConstantExpression\", \"i:GepIndex\", \"s:Constant\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_100_getelementptr_constant_expression_index);
} catch (std::exception& e) {std::cerr << "Error loading getelementptr_constant_expression_index data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","cexpr\tbase"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","getelementptr_constant_expression_base.csv.gz"},{"name","getelementptr_constant_expression_base"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"cexpr\", \"base\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:GetElementPtrConstantExpression\", \"s:Constant\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_102_getelementptr_constant_expression_base);
} catch (std::exception& e) {std::cerr << "Error loading getelementptr_constant_expression_base data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","opaque_struct_type.csv.gz"},{"name","opaque_struct_type"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:OpaqueStructType\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_51_opaque_struct_type);
} catch (std::exception& e) {std::cerr << "Error loading opaque_struct_type data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","struct_type.csv.gz"},{"name","struct_type"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:StructType\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_52_struct_type);
} catch (std::exception& e) {std::cerr << "Error loading struct_type data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","func\tsection"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func_section.csv.gz"},{"name","func_section"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"func\", \"section\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:Function\", \"s:symbol\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_180_func_section);
} catch (std::exception& e) {std::cerr << "Error loading func_section data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","constant_array.csv.gz"},{"name","constant_array"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:ConstantArray\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_117_constant_array);
} catch (std::exception& e) {std::cerr << "Error loading constant_array data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","bitcast_constant_expression.csv.gz"},{"name","bitcast_constant_expression"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:BitcastConstantExpression\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_118_bitcast_constant_expression);
} catch (std::exception& e) {std::cerr << "Error loading bitcast_constant_expression data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c\tval"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","constant_has_value.csv.gz"},{"name","constant_has_value"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"c\", \"val\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:Constant\", \"s:symbol\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_91_constant_has_value);
} catch (std::exception& e) {std::cerr << "Error loading constant_has_value data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","x\ty"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","alias_aliasee.csv.gz"},{"name","alias_aliasee"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"x\", \"y\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:Alias\", \"s:Constant\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_93_alias_aliasee);
} catch (std::exception& e) {std::cerr << "Error loading alias_aliasee data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\ti\tidx"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","getelementptr_instr_index.csv.gz"},{"name","getelementptr_instr_index"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"instr\", \"i\", \"idx\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:GetElementPtrInstruction\", \"i:GepIndex\", \"s:Operand\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_202_getelementptr_instr_index);
} catch (std::exception& e) {std::cerr << "Error loading getelementptr_instr_index data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\tptr"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","getelementptr_instr_base.csv.gz"},{"name","getelementptr_instr_base"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"ptr\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:GetElementPtrInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_203_getelementptr_instr_base);
} catch (std::exception& e) {std::cerr << "Error loading getelementptr_instr_base data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\ti\tidx"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","extractvalue_instr_index.csv.gz"},{"name","extractvalue_instr_index"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"instr\", \"i\", \"idx\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:ExtractValueInstruction\", \"i:number\", \"i:number\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_206_extractvalue_instr_index);
} catch (std::exception& e) {std::cerr << "Error loading extractvalue_instr_index data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\ti\tidx"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","insertvalue_instr_index.csv.gz"},{"name","insertvalue_instr_index"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"instr\", \"i\", \"idx\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:InsertValueInstruction\", \"i:number\", \"i:number\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_207_insertvalue_instr_index);
} catch (std::exception& e) {std::cerr << "Error loading insertvalue_instr_index data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type\ttotal"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func_type_nparams.csv.gz"},{"name","func_type_nparams"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"type\", \"total\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionType\", \"i:number\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_45_func_type_nparams);
} catch (std::exception& e) {std::cerr << "Error loading func_type_nparams data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","pointer_type.csv.gz"},{"name","pointer_type"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:PointerType\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_46_pointer_type);
} catch (std::exception& e) {std::cerr << "Error loading pointer_type data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","gv\tlink"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","global_var_linkage.csv.gz"},{"name","global_var_linkage"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"gv\", \"link\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:GlobalVariable\", \"s:LinkageType\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_225_global_var_linkage);
} catch (std::exception& e) {std::cerr << "Error loading global_var_linkage data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","v\tname"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","variable_has_name.csv.gz"},{"name","variable_has_name"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"v\", \"name\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:Variable\", \"s:symbol\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_227_variable_has_name);
} catch (std::exception& e) {std::cerr << "Error loading variable_has_name data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\tval"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","bitcast_instr_from_operand.csv.gz"},{"name","bitcast_instr_from_operand"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"val\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:BitcastInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_228_bitcast_instr_from_operand);
} catch (std::exception& e) {std::cerr << "Error loading bitcast_instr_from_operand data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\ttype"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","bitcast_instr_to_type.csv.gz"},{"name","bitcast_instr_to_type"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:BitcastInstruction\", \"s:Type\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_229_bitcast_instr_to_type);
} catch (std::exception& e) {std::cerr << "Error loading bitcast_instr_to_type data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","vector_type.csv.gz"},{"name","vector_type"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:VectorType\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_54_vector_type);
} catch (std::exception& e) {std::cerr << "Error loading vector_type data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","x\tname"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","alias_name.csv.gz"},{"name","alias_name"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"x\", \"name\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:Alias\", \"s:symbol\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_90_alias_name);
} catch (std::exception& e) {std::cerr << "Error loading alias_name data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","t\tsize"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","type_has_size.csv.gz"},{"name","type_has_size"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"t\", \"size\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:Type\", \"i:Bytes\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_216_type_has_size);
} catch (std::exception& e) {std::cerr << "Error loading type_has_size data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c\tval"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","constant_to_int.csv.gz"},{"name","constant_to_int"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"c\", \"val\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:Constant\", \"i:number\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_104_constant_to_int);
} catch (std::exception& e) {std::cerr << "Error loading constant_to_int data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type\tcomp"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","vector_type_has_component.csv.gz"},{"name","vector_type_has_component"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"type\", \"comp\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:VectorType\", \"s:Type\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_105_vector_type_has_component);
} catch (std::exception& e) {std::cerr << "Error loading vector_type_has_component data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type\tcomp"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","pointer_type_has_component.csv.gz"},{"name","pointer_type_has_component"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"type\", \"comp\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:PointerType\", \"s:Type\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_2_pointer_type_has_component);
} catch (std::exception& e) {std::cerr << "Error loading pointer_type_has_component data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?index"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_return_aliases_arg.csv.gz"},{"name","signature_return_aliases_arg"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"?func\", \"?index\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_271_signature_return_aliases_arg);
} catch (std::exception& e) {std::cerr << "Error loading signature_return_aliases_arg data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?global"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_return_aliases_global.csv.gz"},{"name","signature_return_aliases_global"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"?func\", \"?global\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionName\", \"s:GlobalVarName\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_272_signature_return_aliases_global);
} catch (std::exception& e) {std::cerr << "Error loading signature_return_aliases_global data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?global"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_return_points_to_global.csv.gz"},{"name","signature_return_points_to_global"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"?func\", \"?global\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionName\", \"s:GlobalVarName\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_273_signature_return_points_to_global);
} catch (std::exception& e) {std::cerr << "Error loading signature_return_points_to_global data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","cexpr\tsize"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","getelementptr_constant_expression_nindices.csv.gz"},{"name","getelementptr_constant_expression_nindices"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"cexpr\", \"size\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:GetElementPtrConstantExpression\", \"i:number\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_274_getelementptr_constant_expression_nindices);
} catch (std::exception& e) {std::cerr << "Error loading getelementptr_constant_expression_nindices data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","primitive_type.csv.gz"},{"name","primitive_type"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:PrimitiveType\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_70_primitive_type);
} catch (std::exception& e) {std::cerr << "Error loading primitive_type data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","getelementptr_constant_expression.csv.gz"},{"name","getelementptr_constant_expression"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:GetElementPtrConstantExpression\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_119_getelementptr_constant_expression);
} catch (std::exception& e) {std::cerr << "Error loading getelementptr_constant_expression data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","inttoptr_constant_expression.csv.gz"},{"name","inttoptr_constant_expression"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:IntToPtrConstantExpression\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_120_inttoptr_constant_expression);
} catch (std::exception& e) {std::cerr << "Error loading inttoptr_constant_expression data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","ptrtoint_constant_expression.csv.gz"},{"name","ptrtoint_constant_expression"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:PtrToIntConstantExpression\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_121_ptrtoint_constant_expression);
} catch (std::exception& e) {std::cerr << "Error loading ptrtoint_constant_expression data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?key\t?value"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","user_options.csv.gz"},{"name","user_options"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"?key\", \"?value\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:symbol\", \"s:symbol\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_4_user_options);
} catch (std::exception& e) {std::cerr << "Error loading user_options data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\tval"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","ptrtoint_instr_from_operand.csv.gz"},{"name","ptrtoint_instr_from_operand"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"val\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:PtrToIntInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_240_ptrtoint_instr_from_operand);
} catch (std::exception& e) {std::cerr << "Error loading ptrtoint_instr_from_operand data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","select_instr.csv.gz"},{"name","select_instr"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"instr\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:SelectInstruction\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_241_select_instr);
} catch (std::exception& e) {std::cerr << "Error loading select_instr data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\top"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","select_instr_first_operand.csv.gz"},{"name","select_instr_first_operand"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"op\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:SelectInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_242_select_instr_first_operand);
} catch (std::exception& e) {std::cerr << "Error loading select_instr_first_operand data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\top"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","select_instr_second_operand.csv.gz"},{"name","select_instr_second_operand"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"op\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:SelectInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_243_select_instr_second_operand);
} catch (std::exception& e) {std::cerr << "Error loading select_instr_second_operand data: " << e.what() << '\n';}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type\ttotal"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","struct_type_nfields.csv.gz"},{"name","struct_type_nfields"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"type\", \"total\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:StructType\", \"i:number\"]}}"}});
if (!inputDirectoryArg.empty()) {directiveMap["fact-dir"] = inputDirectoryArg;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_41_struct_type_nfields);
} catch (std::exception& e) {std::cerr << "Error loading struct_type_nfields data: " << e.what() << '\n';}
}
public:
void dumpInputs() override {
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "struct_type_field_offset";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"s:StructType\", \"i:FieldIndex\", \"i:SubregionOffset\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_263_struct_type_field_offset);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "signature_arg_points_to_global";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\", \"s:GlobalVarName\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_264_signature_arg_points_to_global);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "getelementptr_instr_nindices";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:GetElementPtrInstruction\", \"i:number\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_266_getelementptr_instr_nindices);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "signature_return_alloc";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:FunctionName\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_269_signature_return_alloc);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "signature_return_alloc_once";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:FunctionName\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_270_signature_return_alloc_once);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "variable";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:Variable\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_36_variable);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "struct_type_field";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"s:StructType\", \"i:FieldIndex\", \"s:Type\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_40_struct_type_field);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "call_instr_arg";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"s:CallInstruction\", \"i:ArgumentIndex\", \"s:Operand\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_143_call_instr_arg);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "invoke_instr_arg";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"s:InvokeInstruction\", \"i:ArgumentIndex\", \"s:Operand\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_144_invoke_instr_arg);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "alloca_instr";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:AllocaInstruction\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_147_alloca_instr);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "alloca_instr_type";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:AllocaInstruction\", \"s:Type\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_148_alloca_instr_type);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "bitcast_constant_expression_from";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:BitcastConstantExpression\", \"s:Constant\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_136_bitcast_constant_expression_from);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "func_constant_fn_name";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:FunctionConstant\", \"s:symbol\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_137_func_constant_fn_name);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "func_name";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:FunctionDecl\", \"s:FunctionName\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_138_func_name);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "func_decl";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:FunctionDecl\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_153_func_decl);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "global_var";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:GlobalVariable\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_164_global_var);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "global_var_name";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:GlobalVariable\", \"s:GlobalVarName\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_165_global_var_name);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "call_instr";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:CallInstruction\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_149_call_instr);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "func";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:Function\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_150_func);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "func_ty";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:FunctionDecl\", \"s:FunctionType\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_158_func_ty);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "variable_in_func_name";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:Variable\", \"s:FunctionName\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_230_variable_in_func_name);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "signature_arg_alloc";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_232_signature_arg_alloc);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "signature_arg_alloc_once";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_233_signature_arg_alloc_once);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "func_param";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"s:Function\", \"i:ArgumentIndex\", \"s:Variable\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_234_func_param);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "constant_expression";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:ConstantExpression\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_122_constant_expression);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "constant_expression";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:ConstantExpression\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_122_constant_expression);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "constant_struct";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:ConstantStruct\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_123_constant_struct);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "ptrtoint_constant_expression_from";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:IntToPtrConstantExpression\", \"s:Constant\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_275_ptrtoint_constant_expression_from);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "inttoptr_instr";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:IntToPtrInstruction\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_244_inttoptr_instr);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "load_instr_address";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:LoadInstruction\", \"s:Operand\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_245_load_instr_address);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "ret_instr_operand";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:RetInstruction\", \"s:Operand\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_246_ret_instr_operand);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "va_arg_instr";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:VaArgInstruction\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_248_va_arg_instr);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "invoke_instr_func_operand";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:InvokeInstruction\", \"s:Operand\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_33_invoke_instr_func_operand);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "array_type";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:ArrayType\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_50_array_type);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "integer_type";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:IntegerType\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_64_integer_type);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "fp_constant";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:FPConstant\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_124_fp_constant);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "func_constant";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:FunctionConstant\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_125_func_constant);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "global_var_constant";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:GlobalVariableConstant\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_126_global_var_constant);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "func_type";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:FunctionType\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_28_func_type);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "constant_has_type";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:Constant\", \"s:Type\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_29_constant_has_type);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "variable_has_type";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:Variable\", \"s:Type\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_30_variable_has_type);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "func_signature";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:FunctionDecl\", \"s:symbol\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_170_func_signature);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "global_var_type";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:GlobalVariable\", \"s:Type\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_169_global_var_type);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "undef_constant";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:Constant\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_131_undef_constant);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "constant";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:Constant\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_132_constant);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "func_type_param";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"s:FunctionType\", \"i:ArgumentIndex\", \"s:Type\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_72_func_type_param);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "func_type_return";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:FunctionType\", \"s:Type\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_73_func_type_return);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "instr_assigns_to";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:Instruction\", \"s:Variable\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_173_instr_assigns_to);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "instr_func";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:Instruction\", \"s:Function\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_175_instr_func);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "invoke_instr";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:InvokeInstruction\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_176_invoke_instr);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "fp_type";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:FPType\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_60_fp_type);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "va_arg_instr_type";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:VaArgInstruction\", \"s:Type\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_249_va_arg_instr_type);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "constant_struct_index";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"s:ConstantStruct\", \"i:number\", \"s:Constant\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_251_constant_struct_index);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "global_var_initializer";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:GlobalVariable\", \"s:Constant\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_252_global_var_initializer);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "constant_in_func_name";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:Constant\", \"s:FunctionName\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_195_constant_in_func_name);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "inline_asm";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:InlineASM\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_127_inline_asm);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "integer_constant";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:IntegerConstant\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_128_integer_constant);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "nullptr_constant";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:NullPtrConstant\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_129_nullptr_constant);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "poison_constant";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:Constant\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_130_poison_constant);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "call_instr_func_operand";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:CallInstruction\", \"s:Operand\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_27_call_instr_func_operand);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "global_var_constant_name";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:GlobalVariableConstant\", \"s:symbol\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_197_global_var_constant_name);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "store_instr_address";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:StoreInstruction\", \"s:Operand\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_253_store_instr_address);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "store_instr_value";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:StoreInstruction\", \"s:Operand\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_254_store_instr_value);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "signature_arg_memcpy_arg";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\", \"i:ArgumentIndex\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_255_signature_arg_memcpy_arg);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "signature_arg_memcpy_arg_reachable";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\", \"i:ArgumentIndex\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_256_signature_arg_memcpy_arg_reachable);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "signature_arg_memcpy_global";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\", \"s:GlobalVarName\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_257_signature_arg_memcpy_global);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "signature_arg_memcpy_global_reachable";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\", \"s:GlobalVarName\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_258_signature_arg_memcpy_global_reachable);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "alloca_instr_size";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:AllocaInstruction\", \"s:Operand\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_223_alloca_instr_size);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "phi_instr";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:PhiInstruction\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_236_phi_instr);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "phi_instr_pair_label";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"s:symbol\", \"i:number\", \"s:symbol\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_237_phi_instr_pair_label);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "phi_instr_pair_value";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"s:symbol\", \"i:number\", \"s:symbol\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_238_phi_instr_pair_value);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "array_type_has_component";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:ArrayType\", \"s:Type\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_42_array_type_has_component);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "array_type_has_size";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:ArrayType\", \"i:number\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_43_array_type_has_size);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "func_type_has_varargs";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:FunctionType\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_44_func_type_has_varargs);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "constant_array_index";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"s:ConstantArray\", \"i:number\", \"s:Constant\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_201_constant_array_index);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "signature_global_memcpy_arg";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"s:FunctionName\", \"s:GlobalVarName\", \"i:ArgumentIndex\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_259_signature_global_memcpy_arg);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "signature_global_memcpy_arg_reachable";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"s:FunctionName\", \"s:GlobalVarName\", \"i:ArgumentIndex\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_260_signature_global_memcpy_arg_reachable);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "signature_return_aliases_arg_reachable";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_261_signature_return_aliases_arg_reachable);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "signature_return_aliases_global_reachable";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:FunctionName\", \"s:GlobalVarName\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_262_signature_return_aliases_global_reachable);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "getelementptr_constant_expression_index";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"s:GetElementPtrConstantExpression\", \"i:GepIndex\", \"s:Constant\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_100_getelementptr_constant_expression_index);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "getelementptr_constant_expression_base";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:GetElementPtrConstantExpression\", \"s:Constant\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_102_getelementptr_constant_expression_base);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "opaque_struct_type";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:OpaqueStructType\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_51_opaque_struct_type);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "struct_type";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:StructType\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_52_struct_type);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "func_section";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:Function\", \"s:symbol\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_180_func_section);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "constant_array";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:ConstantArray\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_117_constant_array);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "bitcast_constant_expression";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:BitcastConstantExpression\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_118_bitcast_constant_expression);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "constant_has_value";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:Constant\", \"s:symbol\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_91_constant_has_value);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "alias_aliasee";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:Alias\", \"s:Constant\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_93_alias_aliasee);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "getelementptr_instr_index";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"s:GetElementPtrInstruction\", \"i:GepIndex\", \"s:Operand\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_202_getelementptr_instr_index);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "getelementptr_instr_base";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:GetElementPtrInstruction\", \"s:Operand\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_203_getelementptr_instr_base);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "extractvalue_instr_index";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"s:ExtractValueInstruction\", \"i:number\", \"i:number\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_206_extractvalue_instr_index);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "insertvalue_instr_index";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"s:InsertValueInstruction\", \"i:number\", \"i:number\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_207_insertvalue_instr_index);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "func_type_nparams";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:FunctionType\", \"i:number\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_45_func_type_nparams);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "pointer_type";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:PointerType\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_46_pointer_type);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "global_var_linkage";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:GlobalVariable\", \"s:LinkageType\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_225_global_var_linkage);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "variable_has_name";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:Variable\", \"s:symbol\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_227_variable_has_name);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "bitcast_instr_from_operand";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:BitcastInstruction\", \"s:Operand\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_228_bitcast_instr_from_operand);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "bitcast_instr_to_type";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:BitcastInstruction\", \"s:Type\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_229_bitcast_instr_to_type);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "vector_type";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:VectorType\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_54_vector_type);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "alias_name";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:Alias\", \"s:symbol\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_90_alias_name);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "type_has_size";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:Type\", \"i:Bytes\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_216_type_has_size);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "constant_to_int";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:Constant\", \"i:number\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_104_constant_to_int);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "vector_type_has_component";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:VectorType\", \"s:Type\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_105_vector_type_has_component);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "pointer_type_has_component";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:PointerType\", \"s:Type\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_2_pointer_type_has_component);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "signature_return_aliases_arg";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_271_signature_return_aliases_arg);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "signature_return_aliases_global";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:FunctionName\", \"s:GlobalVarName\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_272_signature_return_aliases_global);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "signature_return_points_to_global";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:FunctionName\", \"s:GlobalVarName\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_273_signature_return_points_to_global);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "getelementptr_constant_expression_nindices";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:GetElementPtrConstantExpression\", \"i:number\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_274_getelementptr_constant_expression_nindices);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "primitive_type";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:PrimitiveType\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_70_primitive_type);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "getelementptr_constant_expression";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:GetElementPtrConstantExpression\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_119_getelementptr_constant_expression);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "inttoptr_constant_expression";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:IntToPtrConstantExpression\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_120_inttoptr_constant_expression);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "ptrtoint_constant_expression";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:PtrToIntConstantExpression\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_121_ptrtoint_constant_expression);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "user_options";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:symbol\", \"s:symbol\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_4_user_options);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "ptrtoint_instr_from_operand";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:PtrToIntInstruction\", \"s:Operand\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_240_ptrtoint_instr_from_operand);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "select_instr";
rwOperation["types"] = "{\"relation\": {\"arity\": 1, \"auxArity\": 0, \"types\": [\"s:SelectInstruction\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_241_select_instr);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "select_instr_first_operand";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:SelectInstruction\", \"s:Operand\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_242_select_instr_first_operand);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "select_instr_second_operand";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:SelectInstruction\", \"s:Operand\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_243_select_instr_second_operand);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "struct_type_nfields";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:StructType\", \"i:number\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_41_struct_type_nfields);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
}
public:
void dumpOutputs() override {
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "global_allocation_by_variable";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"s:GlobalVariable\", \"s:GlobalAllocation\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_166_global_allocation_by_variable);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "subset.callgraph.callgraph_edge";
rwOperation["types"] = "{\"relation\": {\"arity\": 4, \"auxArity\": 0, \"types\": [\"r:Context\", \"s:FunctionDecl\", \"r:Context\", \"s:CallBase\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_423_subset_callgraph_callgraph_edge);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "subset.var_points_to";
rwOperation["types"] = "{\"relation\": {\"arity\": 4, \"auxArity\": 0, \"types\": [\"r:Context\", \"s:Allocation\", \"r:Context\", \"s:Variable\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_438_subset_var_points_to);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "subset.ptr_points_to";
rwOperation["types"] = "{\"relation\": {\"arity\": 4, \"auxArity\": 0, \"types\": [\"r:Context\", \"s:Allocation\", \"r:Context\", \"s:Allocation\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_441_subset_ptr_points_to);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "subset.operand_points_to";
rwOperation["types"] = "{\"relation\": {\"arity\": 4, \"auxArity\": 0, \"types\": [\"r:Context\", \"s:Allocation\", \"r:Context\", \"s:Operand\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_444_subset_operand_points_to);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "subset_lift.allocation_by_instr_ctx";
rwOperation["types"] = "{\"relation\": {\"arity\": 4, \"auxArity\": 0, \"types\": [\"r:Context\", \"s:Instruction\", \"r:Context\", \"s:Allocation\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_568_subset_lift_allocation_by_instr_ctx);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "context_to_string";
rwOperation["types"] = "{\"relation\": {\"arity\": 2, \"auxArity\": 0, \"types\": [\"r:Context\", \"s:symbol\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_569_context_to_string);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "subset_lift.alloc_may_alias_ctx";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"r:Context\", \"s:Allocation\", \"s:Allocation\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_573_subset_lift_alloc_may_alias_ctx);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "subset_lift.alloc_must_alias_ctx";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"r:Context\", \"s:Allocation\", \"s:Allocation\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_574_subset_lift_alloc_must_alias_ctx);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "subset_lift.alloc_subregion_ctx";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"r:Context\", \"s:Allocation\", \"s:Allocation\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_575_subset_lift_alloc_subregion_ctx);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "subset_lift.allocation_size_ctx";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"r:Context\", \"s:Allocation\", \"i:number\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_576_subset_lift_allocation_size_ctx);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> rwOperation;
rwOperation["IO"] = "stdout";
rwOperation["name"] = "subset_lift.alloc_contains_ctx";
rwOperation["types"] = "{\"relation\": {\"arity\": 3, \"auxArity\": 0, \"types\": [\"r:Context\", \"s:Allocation\", \"s:Allocation\"]}}";
IOSystem::getInstance().getWriter(rwOperation, symTable, recordTable)->writeAll(*rel_579_subset_lift_alloc_contains_ctx);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
}
public:
SymbolTable& getSymbolTable() override {
return symTable;
}
RecordTable& getRecordTable() override {
return recordTable;
}
void setNumThreads(std::size_t numThreadsValue) override {
SouffleProgram::setNumThreads(numThreadsValue);
symTable.setNumLanes(getNumThreads());
recordTable.setNumLanes(getNumThreads());
}
void executeSubroutine(std::string name, const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) override {
if (name == "stratum_0") {
subroutine_0(args, ret);
return;}
if (name == "stratum_1") {
subroutine_1(args, ret);
return;}
if (name == "stratum_10") {
subroutine_2(args, ret);
return;}
if (name == "stratum_100") {
subroutine_3(args, ret);
return;}
if (name == "stratum_101") {
subroutine_4(args, ret);
return;}
if (name == "stratum_102") {
subroutine_5(args, ret);
return;}
if (name == "stratum_103") {
subroutine_6(args, ret);
return;}
if (name == "stratum_104") {
subroutine_7(args, ret);
return;}
if (name == "stratum_105") {
subroutine_8(args, ret);
return;}
if (name == "stratum_106") {
subroutine_9(args, ret);
return;}
if (name == "stratum_107") {
subroutine_10(args, ret);
return;}
if (name == "stratum_108") {
subroutine_11(args, ret);
return;}
if (name == "stratum_109") {
subroutine_12(args, ret);
return;}
if (name == "stratum_11") {
subroutine_13(args, ret);
return;}
if (name == "stratum_110") {
subroutine_14(args, ret);
return;}
if (name == "stratum_111") {
subroutine_15(args, ret);
return;}
if (name == "stratum_112") {
subroutine_16(args, ret);
return;}
if (name == "stratum_113") {
subroutine_17(args, ret);
return;}
if (name == "stratum_114") {
subroutine_18(args, ret);
return;}
if (name == "stratum_115") {
subroutine_19(args, ret);
return;}
if (name == "stratum_116") {
subroutine_20(args, ret);
return;}
if (name == "stratum_117") {
subroutine_21(args, ret);
return;}
if (name == "stratum_118") {
subroutine_22(args, ret);
return;}
if (name == "stratum_119") {
subroutine_23(args, ret);
return;}
if (name == "stratum_12") {
subroutine_24(args, ret);
return;}
if (name == "stratum_120") {
subroutine_25(args, ret);
return;}
if (name == "stratum_121") {
subroutine_26(args, ret);
return;}
if (name == "stratum_122") {
subroutine_27(args, ret);
return;}
if (name == "stratum_123") {
subroutine_28(args, ret);
return;}
if (name == "stratum_124") {
subroutine_29(args, ret);
return;}
if (name == "stratum_125") {
subroutine_30(args, ret);
return;}
if (name == "stratum_126") {
subroutine_31(args, ret);
return;}
if (name == "stratum_127") {
subroutine_32(args, ret);
return;}
if (name == "stratum_128") {
subroutine_33(args, ret);
return;}
if (name == "stratum_129") {
subroutine_34(args, ret);
return;}
if (name == "stratum_13") {
subroutine_35(args, ret);
return;}
if (name == "stratum_130") {
subroutine_36(args, ret);
return;}
if (name == "stratum_131") {
subroutine_37(args, ret);
return;}
if (name == "stratum_132") {
subroutine_38(args, ret);
return;}
if (name == "stratum_133") {
subroutine_39(args, ret);
return;}
if (name == "stratum_134") {
subroutine_40(args, ret);
return;}
if (name == "stratum_135") {
subroutine_41(args, ret);
return;}
if (name == "stratum_136") {
subroutine_42(args, ret);
return;}
if (name == "stratum_137") {
subroutine_43(args, ret);
return;}
if (name == "stratum_138") {
subroutine_44(args, ret);
return;}
if (name == "stratum_139") {
subroutine_45(args, ret);
return;}
if (name == "stratum_14") {
subroutine_46(args, ret);
return;}
if (name == "stratum_140") {
subroutine_47(args, ret);
return;}
if (name == "stratum_141") {
subroutine_48(args, ret);
return;}
if (name == "stratum_142") {
subroutine_49(args, ret);
return;}
if (name == "stratum_143") {
subroutine_50(args, ret);
return;}
if (name == "stratum_144") {
subroutine_51(args, ret);
return;}
if (name == "stratum_145") {
subroutine_52(args, ret);
return;}
if (name == "stratum_146") {
subroutine_53(args, ret);
return;}
if (name == "stratum_147") {
subroutine_54(args, ret);
return;}
if (name == "stratum_148") {
subroutine_55(args, ret);
return;}
if (name == "stratum_149") {
subroutine_56(args, ret);
return;}
if (name == "stratum_15") {
subroutine_57(args, ret);
return;}
if (name == "stratum_150") {
subroutine_58(args, ret);
return;}
if (name == "stratum_151") {
subroutine_59(args, ret);
return;}
if (name == "stratum_152") {
subroutine_60(args, ret);
return;}
if (name == "stratum_153") {
subroutine_61(args, ret);
return;}
if (name == "stratum_154") {
subroutine_62(args, ret);
return;}
if (name == "stratum_155") {
subroutine_63(args, ret);
return;}
if (name == "stratum_156") {
subroutine_64(args, ret);
return;}
if (name == "stratum_157") {
subroutine_65(args, ret);
return;}
if (name == "stratum_158") {
subroutine_66(args, ret);
return;}
if (name == "stratum_159") {
subroutine_67(args, ret);
return;}
if (name == "stratum_16") {
subroutine_68(args, ret);
return;}
if (name == "stratum_160") {
subroutine_69(args, ret);
return;}
if (name == "stratum_161") {
subroutine_70(args, ret);
return;}
if (name == "stratum_162") {
subroutine_71(args, ret);
return;}
if (name == "stratum_163") {
subroutine_72(args, ret);
return;}
if (name == "stratum_164") {
subroutine_73(args, ret);
return;}
if (name == "stratum_165") {
subroutine_74(args, ret);
return;}
if (name == "stratum_166") {
subroutine_75(args, ret);
return;}
if (name == "stratum_167") {
subroutine_76(args, ret);
return;}
if (name == "stratum_168") {
subroutine_77(args, ret);
return;}
if (name == "stratum_169") {
subroutine_78(args, ret);
return;}
if (name == "stratum_17") {
subroutine_79(args, ret);
return;}
if (name == "stratum_170") {
subroutine_80(args, ret);
return;}
if (name == "stratum_171") {
subroutine_81(args, ret);
return;}
if (name == "stratum_172") {
subroutine_82(args, ret);
return;}
if (name == "stratum_173") {
subroutine_83(args, ret);
return;}
if (name == "stratum_174") {
subroutine_84(args, ret);
return;}
if (name == "stratum_175") {
subroutine_85(args, ret);
return;}
if (name == "stratum_176") {
subroutine_86(args, ret);
return;}
if (name == "stratum_177") {
subroutine_87(args, ret);
return;}
if (name == "stratum_178") {
subroutine_88(args, ret);
return;}
if (name == "stratum_179") {
subroutine_89(args, ret);
return;}
if (name == "stratum_18") {
subroutine_90(args, ret);
return;}
if (name == "stratum_180") {
subroutine_91(args, ret);
return;}
if (name == "stratum_181") {
subroutine_92(args, ret);
return;}
if (name == "stratum_182") {
subroutine_93(args, ret);
return;}
if (name == "stratum_183") {
subroutine_94(args, ret);
return;}
if (name == "stratum_184") {
subroutine_95(args, ret);
return;}
if (name == "stratum_185") {
subroutine_96(args, ret);
return;}
if (name == "stratum_186") {
subroutine_97(args, ret);
return;}
if (name == "stratum_187") {
subroutine_98(args, ret);
return;}
if (name == "stratum_188") {
subroutine_99(args, ret);
return;}
if (name == "stratum_189") {
subroutine_100(args, ret);
return;}
if (name == "stratum_19") {
subroutine_101(args, ret);
return;}
if (name == "stratum_190") {
subroutine_102(args, ret);
return;}
if (name == "stratum_191") {
subroutine_103(args, ret);
return;}
if (name == "stratum_192") {
subroutine_104(args, ret);
return;}
if (name == "stratum_193") {
subroutine_105(args, ret);
return;}
if (name == "stratum_194") {
subroutine_106(args, ret);
return;}
if (name == "stratum_195") {
subroutine_107(args, ret);
return;}
if (name == "stratum_196") {
subroutine_108(args, ret);
return;}
if (name == "stratum_197") {
subroutine_109(args, ret);
return;}
if (name == "stratum_198") {
subroutine_110(args, ret);
return;}
if (name == "stratum_199") {
subroutine_111(args, ret);
return;}
if (name == "stratum_2") {
subroutine_112(args, ret);
return;}
if (name == "stratum_20") {
subroutine_113(args, ret);
return;}
if (name == "stratum_200") {
subroutine_114(args, ret);
return;}
if (name == "stratum_201") {
subroutine_115(args, ret);
return;}
if (name == "stratum_202") {
subroutine_116(args, ret);
return;}
if (name == "stratum_203") {
subroutine_117(args, ret);
return;}
if (name == "stratum_204") {
subroutine_118(args, ret);
return;}
if (name == "stratum_205") {
subroutine_119(args, ret);
return;}
if (name == "stratum_206") {
subroutine_120(args, ret);
return;}
if (name == "stratum_207") {
subroutine_121(args, ret);
return;}
if (name == "stratum_208") {
subroutine_122(args, ret);
return;}
if (name == "stratum_209") {
subroutine_123(args, ret);
return;}
if (name == "stratum_21") {
subroutine_124(args, ret);
return;}
if (name == "stratum_210") {
subroutine_125(args, ret);
return;}
if (name == "stratum_211") {
subroutine_126(args, ret);
return;}
if (name == "stratum_212") {
subroutine_127(args, ret);
return;}
if (name == "stratum_213") {
subroutine_128(args, ret);
return;}
if (name == "stratum_214") {
subroutine_129(args, ret);
return;}
if (name == "stratum_215") {
subroutine_130(args, ret);
return;}
if (name == "stratum_216") {
subroutine_131(args, ret);
return;}
if (name == "stratum_217") {
subroutine_132(args, ret);
return;}
if (name == "stratum_218") {
subroutine_133(args, ret);
return;}
if (name == "stratum_219") {
subroutine_134(args, ret);
return;}
if (name == "stratum_22") {
subroutine_135(args, ret);
return;}
if (name == "stratum_220") {
subroutine_136(args, ret);
return;}
if (name == "stratum_221") {
subroutine_137(args, ret);
return;}
if (name == "stratum_222") {
subroutine_138(args, ret);
return;}
if (name == "stratum_223") {
subroutine_139(args, ret);
return;}
if (name == "stratum_224") {
subroutine_140(args, ret);
return;}
if (name == "stratum_225") {
subroutine_141(args, ret);
return;}
if (name == "stratum_226") {
subroutine_142(args, ret);
return;}
if (name == "stratum_227") {
subroutine_143(args, ret);
return;}
if (name == "stratum_228") {
subroutine_144(args, ret);
return;}
if (name == "stratum_229") {
subroutine_145(args, ret);
return;}
if (name == "stratum_23") {
subroutine_146(args, ret);
return;}
if (name == "stratum_230") {
subroutine_147(args, ret);
return;}
if (name == "stratum_231") {
subroutine_148(args, ret);
return;}
if (name == "stratum_232") {
subroutine_149(args, ret);
return;}
if (name == "stratum_233") {
subroutine_150(args, ret);
return;}
if (name == "stratum_234") {
subroutine_151(args, ret);
return;}
if (name == "stratum_235") {
subroutine_152(args, ret);
return;}
if (name == "stratum_236") {
subroutine_153(args, ret);
return;}
if (name == "stratum_237") {
subroutine_154(args, ret);
return;}
if (name == "stratum_238") {
subroutine_155(args, ret);
return;}
if (name == "stratum_239") {
subroutine_156(args, ret);
return;}
if (name == "stratum_24") {
subroutine_157(args, ret);
return;}
if (name == "stratum_240") {
subroutine_158(args, ret);
return;}
if (name == "stratum_241") {
subroutine_159(args, ret);
return;}
if (name == "stratum_242") {
subroutine_160(args, ret);
return;}
if (name == "stratum_243") {
subroutine_161(args, ret);
return;}
if (name == "stratum_244") {
subroutine_162(args, ret);
return;}
if (name == "stratum_245") {
subroutine_163(args, ret);
return;}
if (name == "stratum_246") {
subroutine_164(args, ret);
return;}
if (name == "stratum_247") {
subroutine_165(args, ret);
return;}
if (name == "stratum_248") {
subroutine_166(args, ret);
return;}
if (name == "stratum_249") {
subroutine_167(args, ret);
return;}
if (name == "stratum_25") {
subroutine_168(args, ret);
return;}
if (name == "stratum_250") {
subroutine_169(args, ret);
return;}
if (name == "stratum_251") {
subroutine_170(args, ret);
return;}
if (name == "stratum_252") {
subroutine_171(args, ret);
return;}
if (name == "stratum_253") {
subroutine_172(args, ret);
return;}
if (name == "stratum_254") {
subroutine_173(args, ret);
return;}
if (name == "stratum_255") {
subroutine_174(args, ret);
return;}
if (name == "stratum_256") {
subroutine_175(args, ret);
return;}
if (name == "stratum_257") {
subroutine_176(args, ret);
return;}
if (name == "stratum_258") {
subroutine_177(args, ret);
return;}
if (name == "stratum_259") {
subroutine_178(args, ret);
return;}
if (name == "stratum_26") {
subroutine_179(args, ret);
return;}
if (name == "stratum_260") {
subroutine_180(args, ret);
return;}
if (name == "stratum_27") {
subroutine_181(args, ret);
return;}
if (name == "stratum_28") {
subroutine_182(args, ret);
return;}
if (name == "stratum_29") {
subroutine_183(args, ret);
return;}
if (name == "stratum_3") {
subroutine_184(args, ret);
return;}
if (name == "stratum_30") {
subroutine_185(args, ret);
return;}
if (name == "stratum_31") {
subroutine_186(args, ret);
return;}
if (name == "stratum_32") {
subroutine_187(args, ret);
return;}
if (name == "stratum_33") {
subroutine_188(args, ret);
return;}
if (name == "stratum_34") {
subroutine_189(args, ret);
return;}
if (name == "stratum_35") {
subroutine_190(args, ret);
return;}
if (name == "stratum_36") {
subroutine_191(args, ret);
return;}
if (name == "stratum_37") {
subroutine_192(args, ret);
return;}
if (name == "stratum_38") {
subroutine_193(args, ret);
return;}
if (name == "stratum_39") {
subroutine_194(args, ret);
return;}
if (name == "stratum_4") {
subroutine_195(args, ret);
return;}
if (name == "stratum_40") {
subroutine_196(args, ret);
return;}
if (name == "stratum_41") {
subroutine_197(args, ret);
return;}
if (name == "stratum_42") {
subroutine_198(args, ret);
return;}
if (name == "stratum_43") {
subroutine_199(args, ret);
return;}
if (name == "stratum_44") {
subroutine_200(args, ret);
return;}
if (name == "stratum_45") {
subroutine_201(args, ret);
return;}
if (name == "stratum_46") {
subroutine_202(args, ret);
return;}
if (name == "stratum_47") {
subroutine_203(args, ret);
return;}
if (name == "stratum_48") {
subroutine_204(args, ret);
return;}
if (name == "stratum_49") {
subroutine_205(args, ret);
return;}
if (name == "stratum_5") {
subroutine_206(args, ret);
return;}
if (name == "stratum_50") {
subroutine_207(args, ret);
return;}
if (name == "stratum_51") {
subroutine_208(args, ret);
return;}
if (name == "stratum_52") {
subroutine_209(args, ret);
return;}
if (name == "stratum_53") {
subroutine_210(args, ret);
return;}
if (name == "stratum_54") {
subroutine_211(args, ret);
return;}
if (name == "stratum_55") {
subroutine_212(args, ret);
return;}
if (name == "stratum_56") {
subroutine_213(args, ret);
return;}
if (name == "stratum_57") {
subroutine_214(args, ret);
return;}
if (name == "stratum_58") {
subroutine_215(args, ret);
return;}
if (name == "stratum_59") {
subroutine_216(args, ret);
return;}
if (name == "stratum_6") {
subroutine_217(args, ret);
return;}
if (name == "stratum_60") {
subroutine_218(args, ret);
return;}
if (name == "stratum_61") {
subroutine_219(args, ret);
return;}
if (name == "stratum_62") {
subroutine_220(args, ret);
return;}
if (name == "stratum_63") {
subroutine_221(args, ret);
return;}
if (name == "stratum_64") {
subroutine_222(args, ret);
return;}
if (name == "stratum_65") {
subroutine_223(args, ret);
return;}
if (name == "stratum_66") {
subroutine_224(args, ret);
return;}
if (name == "stratum_67") {
subroutine_225(args, ret);
return;}
if (name == "stratum_68") {
subroutine_226(args, ret);
return;}
if (name == "stratum_69") {
subroutine_227(args, ret);
return;}
if (name == "stratum_7") {
subroutine_228(args, ret);
return;}
if (name == "stratum_70") {
subroutine_229(args, ret);
return;}
if (name == "stratum_71") {
subroutine_230(args, ret);
return;}
if (name == "stratum_72") {
subroutine_231(args, ret);
return;}
if (name == "stratum_73") {
subroutine_232(args, ret);
return;}
if (name == "stratum_74") {
subroutine_233(args, ret);
return;}
if (name == "stratum_75") {
subroutine_234(args, ret);
return;}
if (name == "stratum_76") {
subroutine_235(args, ret);
return;}
if (name == "stratum_77") {
subroutine_236(args, ret);
return;}
if (name == "stratum_78") {
subroutine_237(args, ret);
return;}
if (name == "stratum_79") {
subroutine_238(args, ret);
return;}
if (name == "stratum_8") {
subroutine_239(args, ret);
return;}
if (name == "stratum_80") {
subroutine_240(args, ret);
return;}
if (name == "stratum_81") {
subroutine_241(args, ret);
return;}
if (name == "stratum_82") {
subroutine_242(args, ret);
return;}
if (name == "stratum_83") {
subroutine_243(args, ret);
return;}
if (name == "stratum_84") {
subroutine_244(args, ret);
return;}
if (name == "stratum_85") {
subroutine_245(args, ret);
return;}
if (name == "stratum_86") {
subroutine_246(args, ret);
return;}
if (name == "stratum_87") {
subroutine_247(args, ret);
return;}
if (name == "stratum_88") {
subroutine_248(args, ret);
return;}
if (name == "stratum_89") {
subroutine_249(args, ret);
return;}
if (name == "stratum_9") {
subroutine_250(args, ret);
return;}
if (name == "stratum_90") {
subroutine_251(args, ret);
return;}
if (name == "stratum_91") {
subroutine_252(args, ret);
return;}
if (name == "stratum_92") {
subroutine_253(args, ret);
return;}
if (name == "stratum_93") {
subroutine_254(args, ret);
return;}
if (name == "stratum_94") {
subroutine_255(args, ret);
return;}
if (name == "stratum_95") {
subroutine_256(args, ret);
return;}
if (name == "stratum_96") {
subroutine_257(args, ret);
return;}
if (name == "stratum_97") {
subroutine_258(args, ret);
return;}
if (name == "stratum_98") {
subroutine_259(args, ret);
return;}
if (name == "stratum_99") {
subroutine_260(args, ret);
return;}
fatal("unknown subroutine");
}
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_0(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(int8_type("i8").
in file type.dl [82:1-82:17])_");
[&](){
CREATE_OP_CONTEXT(rel_1_int8_type_op_ctxt,rel_1_int8_type->createContext());
Tuple<RamDomain,1> tuple{{ramBitCast(RamSigned(0))}};
rel_1_int8_type->insert(tuple,READ_OP_CONTEXT(rel_1_int8_type_op_ctxt));
}
();}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_1(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type\tcomp"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","pointer_type_has_component.csv.gz"},{"name","pointer_type_has_component"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"type\", \"comp\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:PointerType\", \"s:Type\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_2_pointer_type_has_component);
} catch (std::exception& e) {std::cerr << "Error loading pointer_type_has_component data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_2(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(+disconnected20() :- 
   user_options("context_sensitivity",Config),
   Config = "9-callsite".
in file interface.dl [243:1-258:21])_");
if(rel_11_disconnected20->empty() && !(rel_4_user_options->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_4_user_options_op_ctxt,rel_4_user_options->createContext());
CREATE_OP_CONTEXT(rel_11_disconnected20_op_ctxt,rel_11_disconnected20->createContext());
if(rel_4_user_options->contains(Tuple<RamDomain,2>{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(2))}},READ_OP_CONTEXT(rel_4_user_options_op_ctxt))) {
Tuple<RamDomain,0> tuple{{}};
rel_11_disconnected20->insert(tuple,READ_OP_CONTEXT(rel_11_disconnected20_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_3(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","ptrtoint_constant_expression.csv.gz"},{"name","ptrtoint_constant_expression"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:PtrToIntConstantExpression\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_121_ptrtoint_constant_expression);
} catch (std::exception& e) {std::cerr << "Error loading ptrtoint_constant_expression data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_4(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","constant_expression.csv.gz"},{"name","constant_expression"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:ConstantExpression\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_122_constant_expression);
} catch (std::exception& e) {std::cerr << "Error loading constant_expression data: " << e.what() << '\n';}
}
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","constant_expression.csv.gz"},{"name","constant_expression"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:ConstantExpression\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_122_constant_expression);
} catch (std::exception& e) {std::cerr << "Error loading constant_expression data: " << e.what() << '\n';}
}
signalHandler->setMsg(R"_(constant_expression(c) :- 
   bitcast_constant_expression(c).
in file constants.dl [63:1-67:41])_");
if(!(rel_118_bitcast_constant_expression->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_118_bitcast_constant_expression_op_ctxt,rel_118_bitcast_constant_expression->createContext());
CREATE_OP_CONTEXT(rel_122_constant_expression_op_ctxt,rel_122_constant_expression->createContext());
for(const auto& env0 : *rel_118_bitcast_constant_expression) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_122_constant_expression->insert(tuple,READ_OP_CONTEXT(rel_122_constant_expression_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(constant_expression(c) :- 
   inttoptr_constant_expression(c).
in file constants.dl [63:1-67:41])_");
if(!(rel_120_inttoptr_constant_expression->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_120_inttoptr_constant_expression_op_ctxt,rel_120_inttoptr_constant_expression->createContext());
CREATE_OP_CONTEXT(rel_122_constant_expression_op_ctxt,rel_122_constant_expression->createContext());
for(const auto& env0 : *rel_120_inttoptr_constant_expression) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_122_constant_expression->insert(tuple,READ_OP_CONTEXT(rel_122_constant_expression_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(constant_expression(c) :- 
   ptrtoint_constant_expression(c).
in file constants.dl [63:1-67:41])_");
if(!(rel_121_ptrtoint_constant_expression->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_121_ptrtoint_constant_expression_op_ctxt,rel_121_ptrtoint_constant_expression->createContext());
CREATE_OP_CONTEXT(rel_122_constant_expression_op_ctxt,rel_122_constant_expression->createContext());
for(const auto& env0 : *rel_121_ptrtoint_constant_expression) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_122_constant_expression->insert(tuple,READ_OP_CONTEXT(rel_122_constant_expression_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(constant_expression(c) :- 
   getelementptr_constant_expression(c).
in file constants.dl [63:1-67:41])_");
if(!(rel_119_getelementptr_constant_expression->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_119_getelementptr_constant_expression_op_ctxt,rel_119_getelementptr_constant_expression->createContext());
CREATE_OP_CONTEXT(rel_122_constant_expression_op_ctxt,rel_122_constant_expression->createContext());
for(const auto& env0 : *rel_119_getelementptr_constant_expression) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_122_constant_expression->insert(tuple,READ_OP_CONTEXT(rel_122_constant_expression_op_ctxt));
}
}
();}
if (pruneImdtRels) rel_118_bitcast_constant_expression->purge();
if (pruneImdtRels) rel_121_ptrtoint_constant_expression->purge();
if (pruneImdtRels) rel_119_getelementptr_constant_expression->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_5(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","constant_struct.csv.gz"},{"name","constant_struct"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:ConstantStruct\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_123_constant_struct);
} catch (std::exception& e) {std::cerr << "Error loading constant_struct data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_6(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","fp_constant.csv.gz"},{"name","fp_constant"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:FPConstant\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_124_fp_constant);
} catch (std::exception& e) {std::cerr << "Error loading fp_constant data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_7(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func_constant.csv.gz"},{"name","func_constant"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:FunctionConstant\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_125_func_constant);
} catch (std::exception& e) {std::cerr << "Error loading func_constant data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_8(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","global_var_constant.csv.gz"},{"name","global_var_constant"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:GlobalVariableConstant\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_126_global_var_constant);
} catch (std::exception& e) {std::cerr << "Error loading global_var_constant data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_9(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","asm"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","inline_asm.csv.gz"},{"name","inline_asm"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"asm\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:InlineASM\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_127_inline_asm);
} catch (std::exception& e) {std::cerr << "Error loading inline_asm data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_10(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","integer_constant.csv.gz"},{"name","integer_constant"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:IntegerConstant\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_128_integer_constant);
} catch (std::exception& e) {std::cerr << "Error loading integer_constant data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_11(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","nullptr_constant.csv.gz"},{"name","nullptr_constant"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:NullPtrConstant\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_129_nullptr_constant);
} catch (std::exception& e) {std::cerr << "Error loading nullptr_constant data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_12(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","poison_constant.csv.gz"},{"name","poison_constant"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:Constant\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_130_poison_constant);
} catch (std::exception& e) {std::cerr << "Error loading poison_constant data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_13(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(+disconnected22() :- 
   user_options("context_sensitivity",Config),
   Config = "1-caller".
in file interface.dl [260:1-275:20])_");
if(rel_12_disconnected22->empty() && !(rel_4_user_options->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_4_user_options_op_ctxt,rel_4_user_options->createContext());
CREATE_OP_CONTEXT(rel_12_disconnected22_op_ctxt,rel_12_disconnected22->createContext());
if(rel_4_user_options->contains(Tuple<RamDomain,2>{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(3))}},READ_OP_CONTEXT(rel_4_user_options_op_ctxt))) {
Tuple<RamDomain,0> tuple{{}};
rel_12_disconnected22->insert(tuple,READ_OP_CONTEXT(rel_12_disconnected22_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_14(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","undef_constant.csv.gz"},{"name","undef_constant"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:Constant\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_131_undef_constant);
} catch (std::exception& e) {std::cerr << "Error loading undef_constant data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_15(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","constant.csv.gz"},{"name","constant"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"c\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:Constant\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_132_constant);
} catch (std::exception& e) {std::cerr << "Error loading constant data: " << e.what() << '\n';}
}
signalHandler->setMsg(R"_(constant(asm) :- 
   inline_asm(asm).
in file asm.dl [12:1-12:34])_");
if(!(rel_127_inline_asm->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_132_constant_op_ctxt,rel_132_constant->createContext());
CREATE_OP_CONTEXT(rel_127_inline_asm_op_ctxt,rel_127_inline_asm->createContext());
for(const auto& env0 : *rel_127_inline_asm) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_132_constant->insert(tuple,READ_OP_CONTEXT(rel_132_constant_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(constant(c) :- 
   constant_expression(c).
in file constants.dl [51:1-61:23])_");
if(!(rel_122_constant_expression->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_132_constant_op_ctxt,rel_132_constant->createContext());
CREATE_OP_CONTEXT(rel_122_constant_expression_op_ctxt,rel_122_constant_expression->createContext());
for(const auto& env0 : *rel_122_constant_expression) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_132_constant->insert(tuple,READ_OP_CONTEXT(rel_132_constant_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(constant(c) :- 
   constant_array(c).
in file constants.dl [51:1-61:23])_");
if(!(rel_117_constant_array->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_132_constant_op_ctxt,rel_132_constant->createContext());
CREATE_OP_CONTEXT(rel_117_constant_array_op_ctxt,rel_117_constant_array->createContext());
for(const auto& env0 : *rel_117_constant_array) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_132_constant->insert(tuple,READ_OP_CONTEXT(rel_132_constant_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(constant(c) :- 
   constant_struct(c).
in file constants.dl [51:1-61:23])_");
if(!(rel_123_constant_struct->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_132_constant_op_ctxt,rel_132_constant->createContext());
CREATE_OP_CONTEXT(rel_123_constant_struct_op_ctxt,rel_123_constant_struct->createContext());
for(const auto& env0 : *rel_123_constant_struct) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_132_constant->insert(tuple,READ_OP_CONTEXT(rel_132_constant_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(constant(c) :- 
   global_var_constant(c).
in file constants.dl [51:1-61:23])_");
if(!(rel_126_global_var_constant->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_132_constant_op_ctxt,rel_132_constant->createContext());
CREATE_OP_CONTEXT(rel_126_global_var_constant_op_ctxt,rel_126_global_var_constant->createContext());
for(const auto& env0 : *rel_126_global_var_constant) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_132_constant->insert(tuple,READ_OP_CONTEXT(rel_132_constant_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(constant(c) :- 
   integer_constant(c).
in file constants.dl [51:1-61:23])_");
if(!(rel_128_integer_constant->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_132_constant_op_ctxt,rel_132_constant->createContext());
CREATE_OP_CONTEXT(rel_128_integer_constant_op_ctxt,rel_128_integer_constant->createContext());
for(const auto& env0 : *rel_128_integer_constant) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_132_constant->insert(tuple,READ_OP_CONTEXT(rel_132_constant_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(constant(c) :- 
   fp_constant(c).
in file constants.dl [51:1-61:23])_");
if(!(rel_124_fp_constant->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_132_constant_op_ctxt,rel_132_constant->createContext());
CREATE_OP_CONTEXT(rel_124_fp_constant_op_ctxt,rel_124_fp_constant->createContext());
for(const auto& env0 : *rel_124_fp_constant) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_132_constant->insert(tuple,READ_OP_CONTEXT(rel_132_constant_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(constant(c) :- 
   nullptr_constant(c).
in file constants.dl [51:1-61:23])_");
if(!(rel_129_nullptr_constant->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_132_constant_op_ctxt,rel_132_constant->createContext());
CREATE_OP_CONTEXT(rel_129_nullptr_constant_op_ctxt,rel_129_nullptr_constant->createContext());
for(const auto& env0 : *rel_129_nullptr_constant) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_132_constant->insert(tuple,READ_OP_CONTEXT(rel_132_constant_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(constant(c) :- 
   func_constant(c).
in file constants.dl [51:1-61:23])_");
if(!(rel_125_func_constant->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_132_constant_op_ctxt,rel_132_constant->createContext());
CREATE_OP_CONTEXT(rel_125_func_constant_op_ctxt,rel_125_func_constant->createContext());
for(const auto& env0 : *rel_125_func_constant) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_132_constant->insert(tuple,READ_OP_CONTEXT(rel_132_constant_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(constant(c) :- 
   undef_constant(c).
in file constants.dl [51:1-61:23])_");
if(!(rel_131_undef_constant->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_132_constant_op_ctxt,rel_132_constant->createContext());
CREATE_OP_CONTEXT(rel_131_undef_constant_op_ctxt,rel_131_undef_constant->createContext());
for(const auto& env0 : *rel_131_undef_constant) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_132_constant->insert(tuple,READ_OP_CONTEXT(rel_132_constant_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(constant(c) :- 
   poison_constant(c).
in file constants.dl [51:1-61:23])_");
if(!(rel_130_poison_constant->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_132_constant_op_ctxt,rel_132_constant->createContext());
CREATE_OP_CONTEXT(rel_130_poison_constant_op_ctxt,rel_130_poison_constant->createContext());
for(const auto& env0 : *rel_130_poison_constant) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_132_constant->insert(tuple,READ_OP_CONTEXT(rel_132_constant_op_ctxt));
}
}
();}
if (pruneImdtRels) rel_128_integer_constant->purge();
if (pruneImdtRels) rel_124_fp_constant->purge();
if (pruneImdtRels) rel_122_constant_expression->purge();
if (pruneImdtRels) rel_131_undef_constant->purge();
if (pruneImdtRels) rel_130_poison_constant->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_16(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(direct_call_instr(Instr) :- 
   call_instr_func_operand(Instr,Constant),
   constant(Constant),
   !inline_asm(Constant).
in file call-instr.dl [38:1-40:46])_");
if(!(rel_27_call_instr_func_operand->empty()) && !(rel_132_constant->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_27_call_instr_func_operand_op_ctxt,rel_27_call_instr_func_operand->createContext());
CREATE_OP_CONTEXT(rel_132_constant_op_ctxt,rel_132_constant->createContext());
CREATE_OP_CONTEXT(rel_133_direct_call_instr_op_ctxt,rel_133_direct_call_instr->createContext());
CREATE_OP_CONTEXT(rel_127_inline_asm_op_ctxt,rel_127_inline_asm->createContext());
for(const auto& env0 : *rel_27_call_instr_func_operand) {
if( rel_132_constant->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_132_constant_op_ctxt)) && !(rel_127_inline_asm->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_127_inline_asm_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_133_direct_call_instr->insert(tuple,READ_OP_CONTEXT(rel_133_direct_call_instr_op_ctxt));
}
}
}
();}
if (pruneImdtRels) rel_127_inline_asm->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_17(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(direct_invoke_instr(Instr) :- 
   invoke_instr_func_operand(Instr,Constant),
   constant(Constant).
in file invoke-instr.dl [34:1-36:23])_");
if(!(rel_33_invoke_instr_func_operand->empty()) && !(rel_132_constant->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_33_invoke_instr_func_operand_op_ctxt,rel_33_invoke_instr_func_operand->createContext());
CREATE_OP_CONTEXT(rel_132_constant_op_ctxt,rel_132_constant->createContext());
CREATE_OP_CONTEXT(rel_134_direct_invoke_instr_op_ctxt,rel_134_direct_invoke_instr->createContext());
for(const auto& env0 : *rel_33_invoke_instr_func_operand) {
if( rel_132_constant->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_132_constant_op_ctxt))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_134_direct_invoke_instr->insert(tuple,READ_OP_CONTEXT(rel_134_direct_invoke_instr_op_ctxt));
}
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_18(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(operand(c) :- 
   constant(c).
in file operand.dl [100:1-100:27])_");
if(!(rel_132_constant->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_132_constant_op_ctxt,rel_132_constant->createContext());
CREATE_OP_CONTEXT(rel_135_operand_op_ctxt,rel_135_operand->createContext());
for(const auto& env0 : *rel_132_constant) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_135_operand->insert(tuple,READ_OP_CONTEXT(rel_135_operand_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(operand(v) :- 
   variable(v).
in file operand.dl [101:1-101:27])_");
if(!(rel_36_variable->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_36_variable_op_ctxt,rel_36_variable->createContext());
CREATE_OP_CONTEXT(rel_135_operand_op_ctxt,rel_135_operand->createContext());
for(const auto& env0 : *rel_36_variable) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_135_operand->insert(tuple,READ_OP_CONTEXT(rel_135_operand_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_19(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","cexpr\tval"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","bitcast_constant_expression_from.csv.gz"},{"name","bitcast_constant_expression_from"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"cexpr\", \"val\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:BitcastConstantExpression\", \"s:Constant\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_136_bitcast_constant_expression_from);
} catch (std::exception& e) {std::cerr << "Error loading bitcast_constant_expression_from data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_20(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","fc\tname"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func_constant_fn_name.csv.gz"},{"name","func_constant_fn_name"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"fc\", \"name\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionConstant\", \"s:symbol\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_137_func_constant_fn_name);
} catch (std::exception& e) {std::cerr << "Error loading func_constant_fn_name data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_21(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","func\tname"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func_name.csv.gz"},{"name","func_name"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"func\", \"name\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionDecl\", \"s:FunctionName\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_138_func_name);
} catch (std::exception& e) {std::cerr << "Error loading func_name data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_22(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(constant_references_func(FC,Func) :- 
   func_constant(FC),
   func_constant_fn_name(FC,FuncName),
   func_name(Func,FuncName).
in file resolve-func-calls.dl [30:1-33:29])_");
if(!(rel_137_func_constant_fn_name->empty()) && !(rel_138_func_name->empty()) && !(rel_125_func_constant->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_137_func_constant_fn_name_op_ctxt,rel_137_func_constant_fn_name->createContext());
CREATE_OP_CONTEXT(rel_125_func_constant_op_ctxt,rel_125_func_constant->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_139_constant_references_func_op_ctxt,rel_139_constant_references_func->createContext());
for(const auto& env0 : *rel_125_func_constant) {
auto range = rel_137_func_constant_fn_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_137_func_constant_fn_name_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env1[1])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[0])}};
rel_139_constant_references_func->insert(tuple,READ_OP_CONTEXT(rel_139_constant_references_func_op_ctxt));
}
}
}
}
();}
[&](){
CREATE_OP_CONTEXT(rel_139_constant_references_func_op_ctxt,rel_139_constant_references_func->createContext());
CREATE_OP_CONTEXT(rel_140_delta_constant_references_func_op_ctxt,rel_140_delta_constant_references_func->createContext());
for(const auto& env0 : *rel_139_constant_references_func) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_140_delta_constant_references_func->insert(tuple,READ_OP_CONTEXT(rel_140_delta_constant_references_func_op_ctxt));
}
}
();iter = 0;
for(;;) {
signalHandler->setMsg(R"_(constant_references_func(Outer,Func) :- 
   bitcast_constant_expression_from(Outer,Inner),
   constant_references_func(Inner,Func).
in file resolve-func-calls.dl [44:1-46:42])_");
if(!(rel_136_bitcast_constant_expression_from->empty()) && !(rel_140_delta_constant_references_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_136_bitcast_constant_expression_from_op_ctxt,rel_136_bitcast_constant_expression_from->createContext());
CREATE_OP_CONTEXT(rel_139_constant_references_func_op_ctxt,rel_139_constant_references_func->createContext());
CREATE_OP_CONTEXT(rel_140_delta_constant_references_func_op_ctxt,rel_140_delta_constant_references_func->createContext());
CREATE_OP_CONTEXT(rel_141_new_constant_references_func_op_ctxt,rel_141_new_constant_references_func->createContext());
for(const auto& env0 : *rel_136_bitcast_constant_expression_from) {
auto range = rel_140_delta_constant_references_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_140_delta_constant_references_func_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_139_constant_references_func->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_139_constant_references_func_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[1])}};
rel_141_new_constant_references_func->insert(tuple,READ_OP_CONTEXT(rel_141_new_constant_references_func_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(constant_references_func(OtherConstant,Func) :- 
   aliased_constants(OtherConstant,Constant),
   constant_references_func(Constant,Func).
in file resolve-func-calls.dl [78:1-80:45])_");
if(!(rel_95_aliased_constants->empty()) && !(rel_140_delta_constant_references_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_95_aliased_constants_op_ctxt,rel_95_aliased_constants->createContext());
CREATE_OP_CONTEXT(rel_139_constant_references_func_op_ctxt,rel_139_constant_references_func->createContext());
CREATE_OP_CONTEXT(rel_140_delta_constant_references_func_op_ctxt,rel_140_delta_constant_references_func->createContext());
CREATE_OP_CONTEXT(rel_141_new_constant_references_func_op_ctxt,rel_141_new_constant_references_func->createContext());
for(const auto& env0 : *rel_95_aliased_constants) {
auto range = rel_140_delta_constant_references_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_140_delta_constant_references_func_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_139_constant_references_func->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_139_constant_references_func_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[1])}};
rel_141_new_constant_references_func->insert(tuple,READ_OP_CONTEXT(rel_141_new_constant_references_func_op_ctxt));
}
}
}
}
();}
if(rel_141_new_constant_references_func->empty()) break;
[&](){
CREATE_OP_CONTEXT(rel_139_constant_references_func_op_ctxt,rel_139_constant_references_func->createContext());
CREATE_OP_CONTEXT(rel_141_new_constant_references_func_op_ctxt,rel_141_new_constant_references_func->createContext());
for(const auto& env0 : *rel_141_new_constant_references_func) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_139_constant_references_func->insert(tuple,READ_OP_CONTEXT(rel_139_constant_references_func_op_ctxt));
}
}
();std::swap(rel_140_delta_constant_references_func, rel_141_new_constant_references_func);
rel_141_new_constant_references_func->purge();
iter++;
}
iter = 0;
rel_140_delta_constant_references_func->purge();
rel_141_new_constant_references_func->purge();
if (pruneImdtRels) rel_125_func_constant->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_23(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(_instr_calls_func(Instr,Func) :- 
   direct_call_instr(Instr),
   call_instr_func_operand(Instr,FunctionConstant),
   constant(FunctionConstant),
   constant_references_func(FunctionConstant,Func).
in file resolve-func-calls.dl [93:1-97:53])_");
if(!(rel_27_call_instr_func_operand->empty()) && !(rel_132_constant->empty()) && !(rel_133_direct_call_instr->empty()) && !(rel_139_constant_references_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_27_call_instr_func_operand_op_ctxt,rel_27_call_instr_func_operand->createContext());
CREATE_OP_CONTEXT(rel_132_constant_op_ctxt,rel_132_constant->createContext());
CREATE_OP_CONTEXT(rel_133_direct_call_instr_op_ctxt,rel_133_direct_call_instr->createContext());
CREATE_OP_CONTEXT(rel_139_constant_references_func_op_ctxt,rel_139_constant_references_func->createContext());
CREATE_OP_CONTEXT(rel_142_instr_calls_func_op_ctxt,rel_142_instr_calls_func->createContext());
for(const auto& env0 : *rel_133_direct_call_instr) {
auto range = rel_27_call_instr_func_operand->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_27_call_instr_func_operand_op_ctxt));
for(const auto& env1 : range) {
if( rel_132_constant->contains(Tuple<RamDomain,1>{{ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_132_constant_op_ctxt))) {
auto range = rel_139_constant_references_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_139_constant_references_func_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_142_instr_calls_func->insert(tuple,READ_OP_CONTEXT(rel_142_instr_calls_func_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(_instr_calls_func(Instr,Func) :- 
   direct_invoke_instr(Instr),
   invoke_instr_func_operand(Instr,FunctionConstant),
   constant(FunctionConstant),
   constant_references_func(FunctionConstant,Func).
in file resolve-func-calls.dl [99:1-103:53])_");
if(!(rel_33_invoke_instr_func_operand->empty()) && !(rel_132_constant->empty()) && !(rel_134_direct_invoke_instr->empty()) && !(rel_139_constant_references_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_33_invoke_instr_func_operand_op_ctxt,rel_33_invoke_instr_func_operand->createContext());
CREATE_OP_CONTEXT(rel_132_constant_op_ctxt,rel_132_constant->createContext());
CREATE_OP_CONTEXT(rel_134_direct_invoke_instr_op_ctxt,rel_134_direct_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_139_constant_references_func_op_ctxt,rel_139_constant_references_func->createContext());
CREATE_OP_CONTEXT(rel_142_instr_calls_func_op_ctxt,rel_142_instr_calls_func->createContext());
for(const auto& env0 : *rel_134_direct_invoke_instr) {
auto range = rel_33_invoke_instr_func_operand->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_33_invoke_instr_func_operand_op_ctxt));
for(const auto& env1 : range) {
if( rel_132_constant->contains(Tuple<RamDomain,1>{{ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_132_constant_op_ctxt))) {
auto range = rel_139_constant_references_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_139_constant_references_func_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_142_instr_calls_func->insert(tuple,READ_OP_CONTEXT(rel_142_instr_calls_func_op_ctxt));
}
}
}
}
}
();}
if (pruneImdtRels) rel_132_constant->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_24(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(+disconnected24() :- 
   user_options("context_sensitivity",Config),
   Config = "2-caller".
in file interface.dl [260:1-275:20])_");
if(rel_13_disconnected24->empty() && !(rel_4_user_options->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_4_user_options_op_ctxt,rel_4_user_options->createContext());
CREATE_OP_CONTEXT(rel_13_disconnected24_op_ctxt,rel_13_disconnected24->createContext());
if(rel_4_user_options->contains(Tuple<RamDomain,2>{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(4))}},READ_OP_CONTEXT(rel_4_user_options_op_ctxt))) {
Tuple<RamDomain,0> tuple{{}};
rel_13_disconnected24->insert(tuple,READ_OP_CONTEXT(rel_13_disconnected24_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_25(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\ti\targ"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","call_instr_arg.csv.gz"},{"name","call_instr_arg"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"instr\", \"i\", \"arg\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:CallInstruction\", \"i:ArgumentIndex\", \"s:Operand\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_143_call_instr_arg);
} catch (std::exception& e) {std::cerr << "Error loading call_instr_arg data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_26(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\ti\targ"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","invoke_instr_arg.csv.gz"},{"name","invoke_instr_arg"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"instr\", \"i\", \"arg\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:InvokeInstruction\", \"i:ArgumentIndex\", \"s:Operand\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_144_invoke_instr_arg);
} catch (std::exception& e) {std::cerr << "Error loading invoke_instr_arg data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_27(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(actual_arg(?invokeInstr,?index,?argument) :- 
   invoke_instr_arg(?invokeInstr,?index,?argument).
in file interprocedural.dl [169:1-170:53])_");
if(!(rel_144_invoke_instr_arg->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_144_invoke_instr_arg_op_ctxt,rel_144_invoke_instr_arg->createContext());
CREATE_OP_CONTEXT(rel_145_actual_arg_op_ctxt,rel_145_actual_arg->createContext());
for(const auto& env0 : *rel_144_invoke_instr_arg) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_145_actual_arg->insert(tuple,READ_OP_CONTEXT(rel_145_actual_arg_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(actual_arg(?callInstr,?index,?argument) :- 
   call_instr_arg(?callInstr,?index,?argument).
in file interprocedural.dl [172:1-173:49])_");
if(!(rel_143_call_instr_arg->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_143_call_instr_arg_op_ctxt,rel_143_call_instr_arg->createContext());
CREATE_OP_CONTEXT(rel_145_actual_arg_op_ctxt,rel_145_actual_arg->createContext());
for(const auto& env0 : *rel_143_call_instr_arg) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_145_actual_arg->insert(tuple,READ_OP_CONTEXT(rel_145_actual_arg_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_28(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(argv_alloc("*argv-alloc").
in file entry-points.dl [23:1-23:27])_");
[&](){
CREATE_OP_CONTEXT(rel_146_argv_alloc_op_ctxt,rel_146_argv_alloc->createContext());
Tuple<RamDomain,1> tuple{{ramBitCast(RamSigned(5))}};
rel_146_argv_alloc->insert(tuple,READ_OP_CONTEXT(rel_146_argv_alloc_op_ctxt));
}
();}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_29(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","alloca_instr.csv.gz"},{"name","alloca_instr"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"instr\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:AllocaInstruction\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_147_alloca_instr);
} catch (std::exception& e) {std::cerr << "Error loading alloca_instr data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_30(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\ttype"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","alloca_instr_type.csv.gz"},{"name","alloca_instr_type"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:AllocaInstruction\", \"s:Type\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_148_alloca_instr_type);
} catch (std::exception& e) {std::cerr << "Error loading alloca_instr_type data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_31(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","call_instr.csv.gz"},{"name","call_instr"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"instr\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:CallInstruction\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_149_call_instr);
} catch (std::exception& e) {std::cerr << "Error loading call_instr data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_32(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","func"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func.csv.gz"},{"name","func"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"func\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:Function\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_150_func);
} catch (std::exception& e) {std::cerr << "Error loading func data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_33(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(func_decl_to_defn(Func,Func) :- 
   func(Func).
in file resolve-func-calls.dl [131:1-132:15])_");
if(!(rel_150_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_150_func_op_ctxt,rel_150_func->createContext());
CREATE_OP_CONTEXT(rel_151_func_decl_to_defn_op_ctxt,rel_151_func_decl_to_defn->createContext());
for(const auto& env0 : *rel_150_func) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[0])}};
rel_151_func_decl_to_defn->insert(tuple,READ_OP_CONTEXT(rel_151_func_decl_to_defn_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_34(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(call_instr_fn_target(Instr,Func) :- 
   call_instr(Instr),
   _instr_calls_func(Instr,SomeFunc),
   func_decl_to_defn(SomeFunc,Func).
in file resolve-func-calls.dl [137:1-140:38])_");
if(!(rel_142_instr_calls_func->empty()) && !(rel_151_func_decl_to_defn->empty()) && !(rel_149_call_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_142_instr_calls_func_op_ctxt,rel_142_instr_calls_func->createContext());
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_151_func_decl_to_defn_op_ctxt,rel_151_func_decl_to_defn->createContext());
CREATE_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt,rel_152_call_instr_fn_target->createContext());
for(const auto& env0 : *rel_149_call_instr) {
auto range = rel_142_instr_calls_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_142_instr_calls_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_151_func_decl_to_defn->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_151_func_decl_to_defn_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_152_call_instr_fn_target->insert(tuple,READ_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(call_instr_fn_target(Instr,SomeFunc) :- 
   call_instr(Instr),
   _instr_calls_func(Instr,SomeFunc),
   !func_decl_to_defn(SomeFunc,_).
in file resolve-func-calls.dl [142:1-145:36])_");
if(!(rel_149_call_instr->empty()) && !(rel_142_instr_calls_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_142_instr_calls_func_op_ctxt,rel_142_instr_calls_func->createContext());
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_151_func_decl_to_defn_op_ctxt,rel_151_func_decl_to_defn->createContext());
CREATE_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt,rel_152_call_instr_fn_target->createContext());
for(const auto& env0 : *rel_149_call_instr) {
auto range = rel_142_instr_calls_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_142_instr_calls_func_op_ctxt));
for(const auto& env1 : range) {
if( !(!rel_151_func_decl_to_defn->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_151_func_decl_to_defn_op_ctxt)).empty())) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[1])}};
rel_152_call_instr_fn_target->insert(tuple,READ_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt));
}
}
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_35(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(+disconnected26() :- 
   user_options("context_sensitivity",Config),
   Config = "3-caller".
in file interface.dl [260:1-275:20])_");
if(rel_14_disconnected26->empty() && !(rel_4_user_options->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_4_user_options_op_ctxt,rel_4_user_options->createContext());
CREATE_OP_CONTEXT(rel_14_disconnected26_op_ctxt,rel_14_disconnected26->createContext());
if(rel_4_user_options->contains(Tuple<RamDomain,2>{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(6))}},READ_OP_CONTEXT(rel_4_user_options_op_ctxt))) {
Tuple<RamDomain,0> tuple{{}};
rel_14_disconnected26->insert(tuple,READ_OP_CONTEXT(rel_14_disconnected26_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_36(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","func"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func_decl.csv.gz"},{"name","func_decl"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"func\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:FunctionDecl\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_153_func_decl);
} catch (std::exception& e) {std::cerr << "Error loading func_decl data: " << e.what() << '\n';}
}
signalHandler->setMsg(R"_(func_decl(Func) :- 
   func(Func).
in file func.dl [13:1-13:31])_");
if(!(rel_150_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_150_func_op_ctxt,rel_150_func->createContext());
CREATE_OP_CONTEXT(rel_153_func_decl_op_ctxt,rel_153_func_decl->createContext());
for(const auto& env0 : *rel_150_func) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_153_func_decl->insert(tuple,READ_OP_CONTEXT(rel_153_func_decl_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_37(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(global_allocation_by_func(?func,cat("*global_alloc",?name)) :- 
   func(?func),
   func_name(?func,?name).
in file allocations-globals.dl [17:1-25:40])_");
if(!(rel_150_func->empty()) && !(rel_138_func_name->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_150_func_op_ctxt,rel_150_func->createContext());
CREATE_OP_CONTEXT(rel_154_global_allocation_by_func_op_ctxt,rel_154_global_allocation_by_func->createContext());
for(const auto& env0 : *rel_150_func) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(7)) + symTable.decode(env1[1])))}};
rel_154_global_allocation_by_func->insert(tuple,READ_OP_CONTEXT(rel_154_global_allocation_by_func_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(global_allocation_by_func(?func,cat("*global_alloc",?name)) :- 
   func_decl(?func),
   !func_decl_to_defn(?func,_),
   func_name(?func,?name).
in file allocations-globals.dl [17:1-25:40])_");
if(!(rel_153_func_decl->empty()) && !(rel_138_func_name->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_151_func_decl_to_defn_op_ctxt,rel_151_func_decl_to_defn->createContext());
CREATE_OP_CONTEXT(rel_153_func_decl_op_ctxt,rel_153_func_decl->createContext());
CREATE_OP_CONTEXT(rel_154_global_allocation_by_func_op_ctxt,rel_154_global_allocation_by_func->createContext());
for(const auto& env0 : *rel_153_func_decl) {
if( !(!rel_151_func_decl_to_defn->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_151_func_decl_to_defn_op_ctxt)).empty())) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(7)) + symTable.decode(env1[1])))}};
rel_154_global_allocation_by_func->insert(tuple,READ_OP_CONTEXT(rel_154_global_allocation_by_func_op_ctxt));
}
}
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_38(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(func_by_location(?alloc,?callee) :- 
   global_allocation_by_func(?callee,?alloc).
in file interprocedural.dl [6:1-7:46])_");
if(!(rel_154_global_allocation_by_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_154_global_allocation_by_func_op_ctxt,rel_154_global_allocation_by_func->createContext());
CREATE_OP_CONTEXT(rel_155_func_by_location_op_ctxt,rel_155_func_by_location->createContext());
for(const auto& env0 : *rel_154_global_allocation_by_func) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[1]),ramBitCast(env0[0])}};
rel_155_func_by_location->insert(tuple,READ_OP_CONTEXT(rel_155_func_by_location_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_39(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(num_direct_calls_to_func(@generator_0,?func) :- 
   func_decl(?func),
   @generator_0 = count : { _instr_calls_func(+underscore_88,?func) }.
in file drop.dl [27:1-29:44])_");
if(!(rel_153_func_decl->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_142_instr_calls_func_op_ctxt,rel_142_instr_calls_func->createContext());
CREATE_OP_CONTEXT(rel_153_func_decl_op_ctxt,rel_153_func_decl->createContext());
CREATE_OP_CONTEXT(rel_156_num_direct_calls_to_func_op_ctxt,rel_156_num_direct_calls_to_func->createContext());
for(const auto& env0 : *rel_153_func_decl) {
Tuple<RamDomain,1> env1;
bool shouldRunNested = false;
shouldRunNested = true;
RamSigned res0 = 0;
auto range = rel_142_instr_calls_func->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_142_instr_calls_func_op_ctxt));
for(const auto& env1 : range) {
if( true) {
shouldRunNested = true;
++res0
;}
}
env1[0] = ramBitCast(res0);
if (shouldRunNested) {
if( (ramBitCast<RamDomain>(env1[0]) == ramBitCast<RamDomain>(env1[0]))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(env0[0])}};
rel_156_num_direct_calls_to_func->insert(tuple,READ_OP_CONTEXT(rel_156_num_direct_calls_to_func_op_ctxt));
}
}
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_40(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(main_func(MainFn) :- 
   func_name(MainFn,"@main"),
   func(MainFn).
in file entry-points.dl [17:1-19:17])_");
if(!(rel_138_func_name->empty()) && !(rel_150_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_150_func_op_ctxt,rel_150_func->createContext());
CREATE_OP_CONTEXT(rel_157_main_func_op_ctxt,rel_157_main_func->createContext());
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(8))}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(8))}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env0 : range) {
if( rel_150_func->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_150_func_op_ctxt))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_157_main_func->insert(tuple,READ_OP_CONTEXT(rel_157_main_func_op_ctxt));
}
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_41(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","func\ttype"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func_ty.csv.gz"},{"name","func_ty"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"func\", \"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionDecl\", \"s:FunctionType\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_158_func_ty);
} catch (std::exception& e) {std::cerr << "Error loading func_ty data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_42(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(num_indirect_calls_to_compatible_func(@generator_0,?func) :- 
   func_ty(?func,?targetType),
   @generator_0 = count : { __agg_subclause(+underscore_89,+underscore_90,?targetType) }.
in file drop.dl [43:1-49:5])_");
if(!(rel_158_func_ty->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_89_agg_subclause_op_ctxt,rel_89_agg_subclause->createContext());
CREATE_OP_CONTEXT(rel_158_func_ty_op_ctxt,rel_158_func_ty->createContext());
CREATE_OP_CONTEXT(rel_159_num_indirect_calls_to_compatible_func_op_ctxt,rel_159_num_indirect_calls_to_compatible_func->createContext());
for(const auto& env0 : *rel_158_func_ty) {
Tuple<RamDomain,1> env1;
bool shouldRunNested = false;
shouldRunNested = true;
RamSigned res0 = 0;
auto range = rel_89_agg_subclause->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[1])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_89_agg_subclause_op_ctxt));
for(const auto& env1 : range) {
if( true) {
shouldRunNested = true;
++res0
;}
}
env1[0] = ramBitCast(res0);
if (shouldRunNested) {
if( (ramBitCast<RamDomain>(env1[0]) == ramBitCast<RamDomain>(env1[0]))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(env0[0])}};
rel_159_num_indirect_calls_to_compatible_func->insert(tuple,READ_OP_CONTEXT(rel_159_num_indirect_calls_to_compatible_func_op_ctxt));
}
}
}
}
();}
if (pruneImdtRels) rel_89_agg_subclause->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_43(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(max_num_callsites(?func,(?n1+?n2)) :- 
   num_direct_calls_to_func(?n1,?func),
   num_indirect_calls_to_compatible_func(?n2,?func).
in file drop.dl [52:1-54:53])_");
if(!(rel_156_num_direct_calls_to_func->empty()) && !(rel_159_num_indirect_calls_to_compatible_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_156_num_direct_calls_to_func_op_ctxt,rel_156_num_direct_calls_to_func->createContext());
CREATE_OP_CONTEXT(rel_159_num_indirect_calls_to_compatible_func_op_ctxt,rel_159_num_indirect_calls_to_compatible_func->createContext());
CREATE_OP_CONTEXT(rel_160_max_num_callsites_op_ctxt,rel_160_max_num_callsites->createContext());
for(const auto& env0 : *rel_156_num_direct_calls_to_func) {
auto range = rel_159_num_indirect_calls_to_compatible_func->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[1])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_159_num_indirect_calls_to_compatible_func_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[1]),ramBitCast((ramBitCast<RamSigned>(env0[0]) + ramBitCast<RamSigned>(env1[0])))}};
rel_160_max_num_callsites->insert(tuple,READ_OP_CONTEXT(rel_160_max_num_callsites_op_ctxt));
}
}
}
();}
if (pruneImdtRels) rel_156_num_direct_calls_to_func->purge();
if (pruneImdtRels) rel_159_num_indirect_calls_to_compatible_func->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_44(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(cxx_alloc_exception(?func) :- 
   func_name(?func,"@__cxa_allocate_exception"),
   func_ty(?func,?fType),
   func_type_param(?fType,0,?type),
   integer_type(?type),
   func_type_nparams(?fType,1).
in file cplusplus-exceptions.dl [24:1-31:33])_");
if(!(rel_158_func_ty->empty()) && !(rel_72_func_type_param->empty()) && !(rel_45_func_type_nparams->empty()) && !(rel_64_integer_type->empty()) && !(rel_138_func_name->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_45_func_type_nparams_op_ctxt,rel_45_func_type_nparams->createContext());
CREATE_OP_CONTEXT(rel_64_integer_type_op_ctxt,rel_64_integer_type->createContext());
CREATE_OP_CONTEXT(rel_72_func_type_param_op_ctxt,rel_72_func_type_param->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_158_func_ty_op_ctxt,rel_158_func_ty->createContext());
CREATE_OP_CONTEXT(rel_161_cxx_alloc_exception_op_ctxt,rel_161_cxx_alloc_exception->createContext());
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(9))}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(9))}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env0 : range) {
auto range = rel_158_func_ty->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_158_func_ty_op_ctxt));
for(const auto& env1 : range) {
if( rel_45_func_type_nparams->contains(Tuple<RamDomain,2>{{ramBitCast(env1[1]),ramBitCast(RamSigned(1))}},READ_OP_CONTEXT(rel_45_func_type_nparams_op_ctxt))) {
auto range = rel_72_func_type_param->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_72_func_type_param_op_ctxt));
for(const auto& env2 : range) {
if( rel_64_integer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_64_integer_type_op_ctxt))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_161_cxx_alloc_exception->insert(tuple,READ_OP_CONTEXT(rel_161_cxx_alloc_exception_op_ctxt));
break;
}
}
}
}
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_45(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(cxx_atexit_func(?func) :- 
   func_name(?func,"@__cxa_atexit"),
   func_ty(?func,?fType),
   func_type_param(?fType,0,?type1),
   func_type_param(?fType,1,?type2),
   func_type_param(?fType,2,?type3),
   pointer_type_has_component(?type1,?compType1),
   func_type(?compType1),
   integer_pointer_type(?type2),
   integer_pointer_type(?type3),
   func_type_nparams(?fType,3).
in file at-exit.dl [20:1-30:33])_");
if(!(rel_2_pointer_type_has_component->empty()) && !(rel_138_func_name->empty()) && !(rel_65_integer_pointer_type->empty()) && !(rel_45_func_type_nparams->empty()) && !(rel_72_func_type_param->empty()) && !(rel_158_func_ty->empty()) && !(rel_28_func_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_28_func_type_op_ctxt,rel_28_func_type->createContext());
CREATE_OP_CONTEXT(rel_45_func_type_nparams_op_ctxt,rel_45_func_type_nparams->createContext());
CREATE_OP_CONTEXT(rel_65_integer_pointer_type_op_ctxt,rel_65_integer_pointer_type->createContext());
CREATE_OP_CONTEXT(rel_72_func_type_param_op_ctxt,rel_72_func_type_param->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_158_func_ty_op_ctxt,rel_158_func_ty->createContext());
CREATE_OP_CONTEXT(rel_162_cxx_atexit_func_op_ctxt,rel_162_cxx_atexit_func->createContext());
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(10))}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(10))}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env0 : range) {
auto range = rel_158_func_ty->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_158_func_ty_op_ctxt));
for(const auto& env1 : range) {
if( rel_45_func_type_nparams->contains(Tuple<RamDomain,2>{{ramBitCast(env1[1]),ramBitCast(RamSigned(3))}},READ_OP_CONTEXT(rel_45_func_type_nparams_op_ctxt))) {
auto range = rel_72_func_type_param->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_72_func_type_param_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_72_func_type_param->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(RamSigned(1)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(RamSigned(1)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_72_func_type_param_op_ctxt));
for(const auto& env3 : range) {
if( rel_65_integer_pointer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env3[2])}},READ_OP_CONTEXT(rel_65_integer_pointer_type_op_ctxt))) {
auto range = rel_72_func_type_param->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(RamSigned(2)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(RamSigned(2)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_72_func_type_param_op_ctxt));
for(const auto& env4 : range) {
if( rel_65_integer_pointer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env4[2])}},READ_OP_CONTEXT(rel_65_integer_pointer_type_op_ctxt))) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env5 : range) {
if( rel_28_func_type->contains(Tuple<RamDomain,1>{{ramBitCast(env5[1])}},READ_OP_CONTEXT(rel_28_func_type_op_ctxt))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_162_cxx_atexit_func->insert(tuple,READ_OP_CONTEXT(rel_162_cxx_atexit_func_op_ctxt));
break;
}
}
break;
}
}
break;
}
}
}
}
}
}
}
();}
if (pruneImdtRels) rel_28_func_type->purge();
if (pruneImdtRels) rel_65_integer_pointer_type->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_46(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(+disconnected28() :- 
   user_options("context_sensitivity",Config),
   Config = "4-caller".
in file interface.dl [260:1-275:20])_");
if(rel_15_disconnected28->empty() && !(rel_4_user_options->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_4_user_options_op_ctxt,rel_4_user_options->createContext());
CREATE_OP_CONTEXT(rel_15_disconnected28_op_ctxt,rel_15_disconnected28->createContext());
if(rel_4_user_options->contains(Tuple<RamDomain,2>{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(11))}},READ_OP_CONTEXT(rel_4_user_options_op_ctxt))) {
Tuple<RamDomain,0> tuple{{}};
rel_15_disconnected28->insert(tuple,READ_OP_CONTEXT(rel_15_disconnected28_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_47(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(class_type_constructor(?ctor,?type) :- 
   struct_type(?type),
   func_name(?ctor,?funcName),
   func_ty(?ctor,?fType),
   func_type_param(?fType,0,?ptrType),
   pointer_type_has_component(?ptrType,?type),
   contains("C1", ?funcName).
in file class-type.dl [249:1-258:6])_");
if(!(rel_138_func_name->empty()) && !(rel_72_func_type_param->empty()) && !(rel_158_func_ty->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_52_struct_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_52_struct_type_op_ctxt,rel_52_struct_type->createContext());
CREATE_OP_CONTEXT(rel_72_func_type_param_op_ctxt,rel_72_func_type_param->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_158_func_ty_op_ctxt,rel_158_func_ty->createContext());
CREATE_OP_CONTEXT(rel_163_class_type_constructor_op_ctxt,rel_163_class_type_constructor->createContext());
for(const auto& env0 : *rel_52_struct_type) {
for(const auto& env1 : *rel_138_func_name) {
if( (symTable.decode(env1[1]).find(symTable.decode(RamSigned(12))) != std::string::npos)) {
auto range = rel_158_func_ty->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_158_func_ty_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_72_func_type_param->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env2[1]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env2[1]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_72_func_type_param_op_ctxt));
for(const auto& env3 : range) {
if( rel_2_pointer_type_has_component->contains(Tuple<RamDomain,2>{{ramBitCast(env3[2]),ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(env0[0])}};
rel_163_class_type_constructor->insert(tuple,READ_OP_CONTEXT(rel_163_class_type_constructor_op_ctxt));
break;
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(class_type_constructor(?ctor,?type) :- 
   struct_type(?type),
   func_name(?ctor,?funcName),
   func_ty(?ctor,?fType),
   func_type_param(?fType,0,?ptrType),
   pointer_type_has_component(?ptrType,?type),
   contains("C2", ?funcName).
in file class-type.dl [249:1-258:6])_");
if(!(rel_138_func_name->empty()) && !(rel_72_func_type_param->empty()) && !(rel_158_func_ty->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_52_struct_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_52_struct_type_op_ctxt,rel_52_struct_type->createContext());
CREATE_OP_CONTEXT(rel_72_func_type_param_op_ctxt,rel_72_func_type_param->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_158_func_ty_op_ctxt,rel_158_func_ty->createContext());
CREATE_OP_CONTEXT(rel_163_class_type_constructor_op_ctxt,rel_163_class_type_constructor->createContext());
for(const auto& env0 : *rel_52_struct_type) {
for(const auto& env1 : *rel_138_func_name) {
if( (symTable.decode(env1[1]).find(symTable.decode(RamSigned(13))) != std::string::npos)) {
auto range = rel_158_func_ty->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_158_func_ty_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_72_func_type_param->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env2[1]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env2[1]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_72_func_type_param_op_ctxt));
for(const auto& env3 : range) {
if( rel_2_pointer_type_has_component->contains(Tuple<RamDomain,2>{{ramBitCast(env3[2]),ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(env0[0])}};
rel_163_class_type_constructor->insert(tuple,READ_OP_CONTEXT(rel_163_class_type_constructor_op_ctxt));
break;
}
}
}
}
}
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_48(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","gv"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","global_var.csv.gz"},{"name","global_var"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"gv\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:GlobalVariable\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_164_global_var);
} catch (std::exception& e) {std::cerr << "Error loading global_var data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_49(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","gv\tname"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","global_var_name.csv.gz"},{"name","global_var_name"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"gv\", \"name\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:GlobalVariable\", \"s:GlobalVarName\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_165_global_var_name);
} catch (std::exception& e) {std::cerr << "Error loading global_var_name data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_50(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(global_allocation_by_variable(?gVar,cat("*global_alloc",?name)) :- 
   global_var(?gVar),
   global_var_name(?gVar,?name).
in file allocations-globals.dl [9:1-14:40])_");
if(!(rel_164_global_var->empty()) && !(rel_165_global_var_name->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_164_global_var_op_ctxt,rel_164_global_var->createContext());
CREATE_OP_CONTEXT(rel_165_global_var_name_op_ctxt,rel_165_global_var_name->createContext());
CREATE_OP_CONTEXT(rel_166_global_allocation_by_variable_op_ctxt,rel_166_global_allocation_by_variable->createContext());
for(const auto& env0 : *rel_164_global_var) {
auto range = rel_165_global_var_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_165_global_var_name_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(7)) + symTable.decode(env1[1])))}};
rel_166_global_allocation_by_variable->insert(tuple,READ_OP_CONTEXT(rel_166_global_allocation_by_variable_op_ctxt));
}
}
}
();}
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?var\t?globalAlloc"},{"auxArity","0"},{"compress","true"},{"name","global_allocation_by_variable"},{"operation","output"},{"output-dir","."},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"?var\", \"?globalAlloc\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:GlobalVariable\", \"s:GlobalAllocation\"]}}"}});
if (!outputDirectory.empty()) {directiveMap["output-dir"] = outputDirectory;}
IOSystem::getInstance().getWriter(directiveMap, symTable, recordTable)->writeAll(*rel_166_global_allocation_by_variable);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_51(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(global_allocation_by_name(?globalName,?alloc) :- 
   global_var_name(?global,?globalName),
   global_allocation_by_variable(?global,?alloc).
in file allocations-globals.dl [27:1-29:51])_");
if(!(rel_165_global_var_name->empty()) && !(rel_166_global_allocation_by_variable->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_165_global_var_name_op_ctxt,rel_165_global_var_name->createContext());
CREATE_OP_CONTEXT(rel_166_global_allocation_by_variable_op_ctxt,rel_166_global_allocation_by_variable->createContext());
CREATE_OP_CONTEXT(rel_167_global_allocation_by_name_op_ctxt,rel_167_global_allocation_by_name->createContext());
for(const auto& env0 : *rel_165_global_var_name) {
auto range = rel_166_global_allocation_by_variable->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_166_global_allocation_by_variable_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[1]),ramBitCast(env1[1])}};
rel_167_global_allocation_by_name->insert(tuple,READ_OP_CONTEXT(rel_167_global_allocation_by_name_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(global_allocation_by_name(?globalName,?alloc) :- 
   func_name(?global,?globalName),
   global_allocation_by_func(?global,?alloc).
in file allocations-globals.dl [31:1-33:47])_");
if(!(rel_138_func_name->empty()) && !(rel_154_global_allocation_by_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_154_global_allocation_by_func_op_ctxt,rel_154_global_allocation_by_func->createContext());
CREATE_OP_CONTEXT(rel_167_global_allocation_by_name_op_ctxt,rel_167_global_allocation_by_name->createContext());
for(const auto& env0 : *rel_138_func_name) {
auto range = rel_154_global_allocation_by_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_154_global_allocation_by_func_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[1]),ramBitCast(env1[1])}};
rel_167_global_allocation_by_name->insert(tuple,READ_OP_CONTEXT(rel_167_global_allocation_by_name_op_ctxt));
}
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_52(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(global_allocation(cat("*global_alloc",?name)) :- 
   global_var(?gVar),
   global_var_name(?gVar,?name).
in file allocations-globals.dl [9:1-14:40])_");
if(!(rel_164_global_var->empty()) && !(rel_165_global_var_name->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_164_global_var_op_ctxt,rel_164_global_var->createContext());
CREATE_OP_CONTEXT(rel_165_global_var_name_op_ctxt,rel_165_global_var_name->createContext());
CREATE_OP_CONTEXT(rel_168_global_allocation_op_ctxt,rel_168_global_allocation->createContext());
for(const auto& env0 : *rel_164_global_var) {
auto range = rel_165_global_var_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_165_global_var_name_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,1> tuple{{ramBitCast(symTable.encode(symTable.decode(RamSigned(7)) + symTable.decode(env1[1])))}};
rel_168_global_allocation->insert(tuple,READ_OP_CONTEXT(rel_168_global_allocation_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(global_allocation(cat("*global_alloc",?name)) :- 
   func(?func),
   func_name(?func,?name).
in file allocations-globals.dl [17:1-25:40])_");
if(!(rel_150_func->empty()) && !(rel_138_func_name->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_150_func_op_ctxt,rel_150_func->createContext());
CREATE_OP_CONTEXT(rel_168_global_allocation_op_ctxt,rel_168_global_allocation->createContext());
for(const auto& env0 : *rel_150_func) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,1> tuple{{ramBitCast(symTable.encode(symTable.decode(RamSigned(7)) + symTable.decode(env1[1])))}};
rel_168_global_allocation->insert(tuple,READ_OP_CONTEXT(rel_168_global_allocation_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(global_allocation(cat("*global_alloc",?name)) :- 
   func_decl(?func),
   !func_decl_to_defn(?func,_),
   func_name(?func,?name).
in file allocations-globals.dl [17:1-25:40])_");
if(!(rel_153_func_decl->empty()) && !(rel_138_func_name->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_151_func_decl_to_defn_op_ctxt,rel_151_func_decl_to_defn->createContext());
CREATE_OP_CONTEXT(rel_153_func_decl_op_ctxt,rel_153_func_decl->createContext());
CREATE_OP_CONTEXT(rel_168_global_allocation_op_ctxt,rel_168_global_allocation->createContext());
for(const auto& env0 : *rel_153_func_decl) {
if( !(!rel_151_func_decl_to_defn->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_151_func_decl_to_defn_op_ctxt)).empty())) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,1> tuple{{ramBitCast(symTable.encode(symTable.decode(RamSigned(7)) + symTable.decode(env1[1])))}};
rel_168_global_allocation->insert(tuple,READ_OP_CONTEXT(rel_168_global_allocation_op_ctxt));
}
}
}
}
();}
if (pruneImdtRels) rel_164_global_var->purge();
if (pruneImdtRels) rel_153_func_decl->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_53(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","gv\ttype"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","global_var_type.csv.gz"},{"name","global_var_type"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"gv\", \"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:GlobalVariable\", \"s:Type\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_169_global_var_type);
} catch (std::exception& e) {std::cerr << "Error loading global_var_type data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_54(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","func\tsignature"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func_signature.csv.gz"},{"name","func_signature"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"func\", \"signature\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionDecl\", \"s:symbol\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_170_func_signature);
} catch (std::exception& e) {std::cerr << "Error loading func_signature data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_55(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(heap_alloc_func(?func) :- 
   func_name(?func,"@malloc").
in file allocations-decl.dl [45:1-49:30])_");
if(!(rel_138_func_name->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_171_heap_alloc_func_op_ctxt,rel_171_heap_alloc_func->createContext());
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(14))}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(14))}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env0 : range) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_171_heap_alloc_func->insert(tuple,READ_OP_CONTEXT(rel_171_heap_alloc_func_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(heap_alloc_func(?func) :- 
   func_name(?func,"@calloc").
in file allocations-decl.dl [45:1-49:30])_");
if(!(rel_138_func_name->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_171_heap_alloc_func_op_ctxt,rel_171_heap_alloc_func->createContext());
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(15))}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(15))}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env0 : range) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_171_heap_alloc_func->insert(tuple,READ_OP_CONTEXT(rel_171_heap_alloc_func_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(heap_alloc_func(?func) :- 
   func_name(?func,"@realloc").
in file allocations-decl.dl [45:1-49:30])_");
if(!(rel_138_func_name->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_171_heap_alloc_func_op_ctxt,rel_171_heap_alloc_func->createContext());
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(16))}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(16))}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env0 : range) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_171_heap_alloc_func->insert(tuple,READ_OP_CONTEXT(rel_171_heap_alloc_func_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(heap_alloc_func(?func) :- 
   func_name(?func,"@mmap").
in file allocations-decl.dl [45:1-49:30])_");
if(!(rel_138_func_name->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_171_heap_alloc_func_op_ctxt,rel_171_heap_alloc_func->createContext());
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(17))}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(17))}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env0 : range) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_171_heap_alloc_func->insert(tuple,READ_OP_CONTEXT(rel_171_heap_alloc_func_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(heap_alloc_func(?func) :- 
   func_signature(?func,?signature),
   func_ty(?func,?fType),
   contains("operator new", ?signature),
   func_type_param(?fType,0,?type),
   integer_type(?type),
   func_type_nparams(?fType,1),
   !func_decl_to_defn(?func,_).
in file cplusplus.dl [10:1-19:33])_");
if(!(rel_158_func_ty->empty()) && !(rel_72_func_type_param->empty()) && !(rel_45_func_type_nparams->empty()) && !(rel_64_integer_type->empty()) && !(rel_170_func_signature->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_45_func_type_nparams_op_ctxt,rel_45_func_type_nparams->createContext());
CREATE_OP_CONTEXT(rel_64_integer_type_op_ctxt,rel_64_integer_type->createContext());
CREATE_OP_CONTEXT(rel_72_func_type_param_op_ctxt,rel_72_func_type_param->createContext());
CREATE_OP_CONTEXT(rel_151_func_decl_to_defn_op_ctxt,rel_151_func_decl_to_defn->createContext());
CREATE_OP_CONTEXT(rel_158_func_ty_op_ctxt,rel_158_func_ty->createContext());
CREATE_OP_CONTEXT(rel_170_func_signature_op_ctxt,rel_170_func_signature->createContext());
CREATE_OP_CONTEXT(rel_171_heap_alloc_func_op_ctxt,rel_171_heap_alloc_func->createContext());
for(const auto& env0 : *rel_170_func_signature) {
if( (symTable.decode(env0[1]).find(symTable.decode(RamSigned(18))) != std::string::npos) && !(!rel_151_func_decl_to_defn->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_151_func_decl_to_defn_op_ctxt)).empty())) {
auto range = rel_158_func_ty->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_158_func_ty_op_ctxt));
for(const auto& env1 : range) {
if( rel_45_func_type_nparams->contains(Tuple<RamDomain,2>{{ramBitCast(env1[1]),ramBitCast(RamSigned(1))}},READ_OP_CONTEXT(rel_45_func_type_nparams_op_ctxt))) {
auto range = rel_72_func_type_param->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_72_func_type_param_op_ctxt));
for(const auto& env2 : range) {
if( rel_64_integer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_64_integer_type_op_ctxt))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_171_heap_alloc_func->insert(tuple,READ_OP_CONTEXT(rel_171_heap_alloc_func_op_ctxt));
break;
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(heap_alloc_func(?func) :- 
   func_name(?func,"@__cxa_allocate_exception"),
   func_ty(?func,?fType),
   func_type_param(?fType,0,?type),
   integer_type(?type),
   func_type_nparams(?fType,1).
in file cplusplus-exceptions.dl [24:1-31:33])_");
if(!(rel_158_func_ty->empty()) && !(rel_72_func_type_param->empty()) && !(rel_45_func_type_nparams->empty()) && !(rel_64_integer_type->empty()) && !(rel_138_func_name->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_45_func_type_nparams_op_ctxt,rel_45_func_type_nparams->createContext());
CREATE_OP_CONTEXT(rel_64_integer_type_op_ctxt,rel_64_integer_type->createContext());
CREATE_OP_CONTEXT(rel_72_func_type_param_op_ctxt,rel_72_func_type_param->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_158_func_ty_op_ctxt,rel_158_func_ty->createContext());
CREATE_OP_CONTEXT(rel_171_heap_alloc_func_op_ctxt,rel_171_heap_alloc_func->createContext());
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(9))}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(9))}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env0 : range) {
auto range = rel_158_func_ty->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_158_func_ty_op_ctxt));
for(const auto& env1 : range) {
if( rel_45_func_type_nparams->contains(Tuple<RamDomain,2>{{ramBitCast(env1[1]),ramBitCast(RamSigned(1))}},READ_OP_CONTEXT(rel_45_func_type_nparams_op_ctxt))) {
auto range = rel_72_func_type_param->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_72_func_type_param_op_ctxt));
for(const auto& env2 : range) {
if( rel_64_integer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_64_integer_type_op_ctxt))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_171_heap_alloc_func->insert(tuple,READ_OP_CONTEXT(rel_171_heap_alloc_func_op_ctxt));
break;
}
}
}
}
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_56(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(cxx_new_func(?func) :- 
   func_signature(?func,?signature),
   func_ty(?func,?fType),
   contains("operator new", ?signature),
   func_type_param(?fType,0,?type),
   integer_type(?type),
   func_type_nparams(?fType,1),
   !func_decl_to_defn(?func,_).
in file cplusplus.dl [10:1-19:33])_");
if(!(rel_158_func_ty->empty()) && !(rel_72_func_type_param->empty()) && !(rel_45_func_type_nparams->empty()) && !(rel_64_integer_type->empty()) && !(rel_170_func_signature->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_45_func_type_nparams_op_ctxt,rel_45_func_type_nparams->createContext());
CREATE_OP_CONTEXT(rel_64_integer_type_op_ctxt,rel_64_integer_type->createContext());
CREATE_OP_CONTEXT(rel_72_func_type_param_op_ctxt,rel_72_func_type_param->createContext());
CREATE_OP_CONTEXT(rel_151_func_decl_to_defn_op_ctxt,rel_151_func_decl_to_defn->createContext());
CREATE_OP_CONTEXT(rel_158_func_ty_op_ctxt,rel_158_func_ty->createContext());
CREATE_OP_CONTEXT(rel_170_func_signature_op_ctxt,rel_170_func_signature->createContext());
CREATE_OP_CONTEXT(rel_172_cxx_new_func_op_ctxt,rel_172_cxx_new_func->createContext());
for(const auto& env0 : *rel_170_func_signature) {
if( (symTable.decode(env0[1]).find(symTable.decode(RamSigned(18))) != std::string::npos) && !(!rel_151_func_decl_to_defn->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_151_func_decl_to_defn_op_ctxt)).empty())) {
auto range = rel_158_func_ty->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_158_func_ty_op_ctxt));
for(const auto& env1 : range) {
if( rel_45_func_type_nparams->contains(Tuple<RamDomain,2>{{ramBitCast(env1[1]),ramBitCast(RamSigned(1))}},READ_OP_CONTEXT(rel_45_func_type_nparams_op_ctxt))) {
auto range = rel_72_func_type_param->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_72_func_type_param_op_ctxt));
for(const auto& env2 : range) {
if( rel_64_integer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_64_integer_type_op_ctxt))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_172_cxx_new_func->insert(tuple,READ_OP_CONTEXT(rel_172_cxx_new_func_op_ctxt));
break;
}
}
}
}
}
}
}
();}
if (pruneImdtRels) rel_170_func_signature->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_57(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(+disconnected30() :- 
   user_options("context_sensitivity",Config),
   Config = "5-caller".
in file interface.dl [260:1-275:20])_");
if(rel_16_disconnected30->empty() && !(rel_4_user_options->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_4_user_options_op_ctxt,rel_4_user_options->createContext());
CREATE_OP_CONTEXT(rel_16_disconnected30_op_ctxt,rel_16_disconnected30->createContext());
if(rel_4_user_options->contains(Tuple<RamDomain,2>{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(19))}},READ_OP_CONTEXT(rel_4_user_options_op_ctxt))) {
Tuple<RamDomain,0> tuple{{}};
rel_16_disconnected30->insert(tuple,READ_OP_CONTEXT(rel_16_disconnected30_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_58(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\tvar"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","instr_assigns_to.csv.gz"},{"name","instr_assigns_to"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"var\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:Instruction\", \"s:Variable\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_173_instr_assigns_to);
} catch (std::exception& e) {std::cerr << "Error loading instr_assigns_to data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_59(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(instr_returns_type(Instr,Type) :- 
   instr_assigns_to(Instr,Var),
   variable_has_type(Var,Type).
in file instr.dl [82:1-84:33])_");
if(!(rel_173_instr_assigns_to->empty()) && !(rel_30_variable_has_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_30_variable_has_type_op_ctxt,rel_30_variable_has_type->createContext());
CREATE_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt,rel_173_instr_assigns_to->createContext());
CREATE_OP_CONTEXT(rel_174_instr_returns_type_op_ctxt,rel_174_instr_returns_type->createContext());
for(const auto& env0 : *rel_173_instr_assigns_to) {
auto range = rel_30_variable_has_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_30_variable_has_type_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[1])}};
rel_174_instr_returns_type->insert(tuple,READ_OP_CONTEXT(rel_174_instr_returns_type_op_ctxt));
}
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_60(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\tfunc"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","instr_func.csv.gz"},{"name","instr_func"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"func\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:Instruction\", \"s:Function\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_175_instr_func);
} catch (std::exception& e) {std::cerr << "Error loading instr_func data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_61(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","invoke_instr.csv.gz"},{"name","invoke_instr"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"instr\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:InvokeInstruction\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_176_invoke_instr);
} catch (std::exception& e) {std::cerr << "Error loading invoke_instr data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_62(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(invoke_instr_fn_target(Instr,Func) :- 
   invoke_instr(Instr),
   _instr_calls_func(Instr,SomeFunc),
   func_decl_to_defn(SomeFunc,Func).
in file resolve-func-calls.dl [147:1-150:38])_");
if(!(rel_142_instr_calls_func->empty()) && !(rel_151_func_decl_to_defn->empty()) && !(rel_176_invoke_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_142_instr_calls_func_op_ctxt,rel_142_instr_calls_func->createContext());
CREATE_OP_CONTEXT(rel_151_func_decl_to_defn_op_ctxt,rel_151_func_decl_to_defn->createContext());
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt,rel_177_invoke_instr_fn_target->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
auto range = rel_142_instr_calls_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_142_instr_calls_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_151_func_decl_to_defn->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_151_func_decl_to_defn_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_177_invoke_instr_fn_target->insert(tuple,READ_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(invoke_instr_fn_target(Instr,SomeFunc) :- 
   invoke_instr(Instr),
   _instr_calls_func(Instr,SomeFunc),
   !func_decl_to_defn(SomeFunc,_).
in file resolve-func-calls.dl [152:1-155:36])_");
if(!(rel_176_invoke_instr->empty()) && !(rel_142_instr_calls_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_142_instr_calls_func_op_ctxt,rel_142_instr_calls_func->createContext());
CREATE_OP_CONTEXT(rel_151_func_decl_to_defn_op_ctxt,rel_151_func_decl_to_defn->createContext());
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt,rel_177_invoke_instr_fn_target->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
auto range = rel_142_instr_calls_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_142_instr_calls_func_op_ctxt));
for(const auto& env1 : range) {
if( !(!rel_151_func_decl_to_defn->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_151_func_decl_to_defn_op_ctxt)).empty())) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[1])}};
rel_177_invoke_instr_fn_target->insert(tuple,READ_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt));
}
}
}
}
();}
if (pruneImdtRels) rel_151_func_decl_to_defn->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_63(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(sized_alloc_instr(?insn,as(?size, Bytes)) :- 
   func_name(?func,"@malloc"),
   call_instr_fn_target(?insn,?func),
   call_instr_arg(?insn,0,?operand),
   constant_to_int(?operand,?size).
in file allocations-sizes.dl [87:1-91:37])_");
if(!(rel_152_call_instr_fn_target->empty()) && !(rel_143_call_instr_arg->empty()) && !(rel_138_func_name->empty()) && !(rel_104_constant_to_int->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_143_call_instr_arg_op_ctxt,rel_143_call_instr_arg->createContext());
CREATE_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt,rel_152_call_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt,rel_178_sized_alloc_instr->createContext());
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(14))}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(14))}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env0 : range) {
auto range = rel_152_call_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_143_call_instr_arg->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_143_call_instr_arg_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(env3[1])}};
rel_178_sized_alloc_instr->insert(tuple,READ_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(sized_alloc_instr(?insn,as(?size, Bytes)) :- 
   func_name(?func,"@malloc"),
   invoke_instr_fn_target(?insn,?func),
   invoke_instr_arg(?insn,0,?operand),
   constant_to_int(?operand,?size).
in file allocations-sizes.dl [93:1-97:37])_");
if(!(rel_177_invoke_instr_fn_target->empty()) && !(rel_144_invoke_instr_arg->empty()) && !(rel_138_func_name->empty()) && !(rel_104_constant_to_int->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_144_invoke_instr_arg_op_ctxt,rel_144_invoke_instr_arg->createContext());
CREATE_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt,rel_177_invoke_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt,rel_178_sized_alloc_instr->createContext());
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(14))}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(14))}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env0 : range) {
auto range = rel_177_invoke_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_144_invoke_instr_arg->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_144_invoke_instr_arg_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(env3[1])}};
rel_178_sized_alloc_instr->insert(tuple,READ_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(sized_alloc_instr(?insn,as(?size, Bytes)) :- 
   func_name(?func,"@realloc"),
   invoke_instr_fn_target(?insn,?func),
   invoke_instr_arg(?insn,1,?operand),
   constant_to_int(?operand,?size).
in file allocations-sizes.dl [99:1-103:37])_");
if(!(rel_177_invoke_instr_fn_target->empty()) && !(rel_144_invoke_instr_arg->empty()) && !(rel_138_func_name->empty()) && !(rel_104_constant_to_int->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_144_invoke_instr_arg_op_ctxt,rel_144_invoke_instr_arg->createContext());
CREATE_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt,rel_177_invoke_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt,rel_178_sized_alloc_instr->createContext());
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(16))}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(16))}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env0 : range) {
auto range = rel_177_invoke_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_144_invoke_instr_arg->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(1)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(1)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_144_invoke_instr_arg_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(env3[1])}};
rel_178_sized_alloc_instr->insert(tuple,READ_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(sized_alloc_instr(?insn,as(?size, Bytes)) :- 
   func_name(?func,"@realloc"),
   call_instr_fn_target(?insn,?func),
   call_instr_arg(?insn,1,?operand),
   constant_to_int(?operand,?size).
in file allocations-sizes.dl [105:1-109:37])_");
if(!(rel_152_call_instr_fn_target->empty()) && !(rel_143_call_instr_arg->empty()) && !(rel_138_func_name->empty()) && !(rel_104_constant_to_int->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_143_call_instr_arg_op_ctxt,rel_143_call_instr_arg->createContext());
CREATE_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt,rel_152_call_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt,rel_178_sized_alloc_instr->createContext());
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(16))}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(16))}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env0 : range) {
auto range = rel_152_call_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_143_call_instr_arg->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(1)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(1)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_143_call_instr_arg_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(env3[1])}};
rel_178_sized_alloc_instr->insert(tuple,READ_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(sized_alloc_instr(?insn,as(?size, Bytes)) :- 
   cxx_new_func(?func),
   call_instr_fn_target(?insn,?func),
   call_instr_arg(?insn,0,?operand),
   constant_to_int(?operand,?size).
in file cplusplus.dl [32:1-36:37])_");
if(!(rel_152_call_instr_fn_target->empty()) && !(rel_143_call_instr_arg->empty()) && !(rel_172_cxx_new_func->empty()) && !(rel_104_constant_to_int->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_143_call_instr_arg_op_ctxt,rel_143_call_instr_arg->createContext());
CREATE_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt,rel_152_call_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_172_cxx_new_func_op_ctxt,rel_172_cxx_new_func->createContext());
CREATE_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt,rel_178_sized_alloc_instr->createContext());
for(const auto& env0 : *rel_172_cxx_new_func) {
auto range = rel_152_call_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_143_call_instr_arg->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_143_call_instr_arg_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(env3[1])}};
rel_178_sized_alloc_instr->insert(tuple,READ_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(sized_alloc_instr(?insn,as(?size, Bytes)) :- 
   cxx_new_func(?func),
   invoke_instr_fn_target(?insn,?func),
   invoke_instr_arg(?insn,0,?operand),
   constant_to_int(?operand,?size).
in file cplusplus.dl [38:1-42:37])_");
if(!(rel_177_invoke_instr_fn_target->empty()) && !(rel_144_invoke_instr_arg->empty()) && !(rel_172_cxx_new_func->empty()) && !(rel_104_constant_to_int->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_144_invoke_instr_arg_op_ctxt,rel_144_invoke_instr_arg->createContext());
CREATE_OP_CONTEXT(rel_172_cxx_new_func_op_ctxt,rel_172_cxx_new_func->createContext());
CREATE_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt,rel_177_invoke_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt,rel_178_sized_alloc_instr->createContext());
for(const auto& env0 : *rel_172_cxx_new_func) {
auto range = rel_177_invoke_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_144_invoke_instr_arg->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_144_invoke_instr_arg_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(env3[1])}};
rel_178_sized_alloc_instr->insert(tuple,READ_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(sized_alloc_instr(?insn,as(?size, Bytes)) :- 
   cxx_alloc_exception(?func),
   call_instr_fn_target(?insn,?func),
   call_instr_arg(?insn,0,?sizeOp),
   constant_to_int(?sizeOp,?size).
in file cplusplus-exceptions.dl [36:1-40:35])_");
if(!(rel_152_call_instr_fn_target->empty()) && !(rel_143_call_instr_arg->empty()) && !(rel_161_cxx_alloc_exception->empty()) && !(rel_104_constant_to_int->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_143_call_instr_arg_op_ctxt,rel_143_call_instr_arg->createContext());
CREATE_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt,rel_152_call_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_161_cxx_alloc_exception_op_ctxt,rel_161_cxx_alloc_exception->createContext());
CREATE_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt,rel_178_sized_alloc_instr->createContext());
for(const auto& env0 : *rel_161_cxx_alloc_exception) {
auto range = rel_152_call_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_143_call_instr_arg->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_143_call_instr_arg_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(env3[1])}};
rel_178_sized_alloc_instr->insert(tuple,READ_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(sized_alloc_instr(?insn,as(?size, Bytes)) :- 
   cxx_alloc_exception(?func),
   invoke_instr_fn_target(?insn,?func),
   invoke_instr_arg(?insn,0,?sizeOp),
   constant_to_int(?sizeOp,?size).
in file cplusplus-exceptions.dl [42:1-46:35])_");
if(!(rel_177_invoke_instr_fn_target->empty()) && !(rel_144_invoke_instr_arg->empty()) && !(rel_161_cxx_alloc_exception->empty()) && !(rel_104_constant_to_int->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_144_invoke_instr_arg_op_ctxt,rel_144_invoke_instr_arg->createContext());
CREATE_OP_CONTEXT(rel_161_cxx_alloc_exception_op_ctxt,rel_161_cxx_alloc_exception->createContext());
CREATE_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt,rel_177_invoke_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt,rel_178_sized_alloc_instr->createContext());
for(const auto& env0 : *rel_161_cxx_alloc_exception) {
auto range = rel_177_invoke_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_144_invoke_instr_arg->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_144_invoke_instr_arg_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(env3[1])}};
rel_178_sized_alloc_instr->insert(tuple,READ_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(sized_alloc_instr(?insn,as((size*nmemb), Bytes)) :- 
   func_name(?func,"@calloc"),
   invoke_instr_fn_target(?insn,?func),
   invoke_instr_arg(?insn,0,?nmembOp),
   invoke_instr_arg(?insn,1,?sizeOp),
   constant_to_int(?nmembOp,nmemb),
   constant_to_int(?sizeOp,size).
in file allocations-sizes.dl [111:1-118:21])_");
if(!(rel_144_invoke_instr_arg->empty()) && !(rel_138_func_name->empty()) && !(rel_104_constant_to_int->empty()) && !(rel_177_invoke_instr_fn_target->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_144_invoke_instr_arg_op_ctxt,rel_144_invoke_instr_arg->createContext());
CREATE_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt,rel_177_invoke_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt,rel_178_sized_alloc_instr->createContext());
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(15))}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(15))}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env0 : range) {
auto range = rel_177_invoke_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_144_invoke_instr_arg->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_144_invoke_instr_arg_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_144_invoke_instr_arg->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(1)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(1)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_144_invoke_instr_arg_op_ctxt));
for(const auto& env3 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env4 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env3[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env3[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env5 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast((ramBitCast<RamSigned>(env5[1]) * ramBitCast<RamSigned>(env4[1])))}};
rel_178_sized_alloc_instr->insert(tuple,READ_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt));
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(sized_alloc_instr(?insn,as((size*nmemb), Bytes)) :- 
   func_name(?func,"@calloc"),
   call_instr_fn_target(?insn,?func),
   call_instr_arg(?insn,0,?nmembOp),
   call_instr_arg(?insn,1,?sizeOp),
   constant_to_int(?nmembOp,nmemb),
   constant_to_int(?sizeOp,size).
in file allocations-sizes.dl [120:1-127:21])_");
if(!(rel_143_call_instr_arg->empty()) && !(rel_138_func_name->empty()) && !(rel_104_constant_to_int->empty()) && !(rel_152_call_instr_fn_target->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_143_call_instr_arg_op_ctxt,rel_143_call_instr_arg->createContext());
CREATE_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt,rel_152_call_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt,rel_178_sized_alloc_instr->createContext());
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(15))}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(15))}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env0 : range) {
auto range = rel_152_call_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_143_call_instr_arg->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_143_call_instr_arg_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_143_call_instr_arg->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(1)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast(RamSigned(1)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_143_call_instr_arg_op_ctxt));
for(const auto& env3 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env4 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env3[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env3[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env5 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast((ramBitCast<RamSigned>(env5[1]) * ramBitCast<RamSigned>(env4[1])))}};
rel_178_sized_alloc_instr->insert(tuple,READ_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt));
}
}
}
}
}
}
}
();}
if (pruneImdtRels) rel_144_invoke_instr_arg->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_64(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?invoc) :- 
   +disconnected2(),
   call_instr(?invoc).
in file interface.dl [243:1-258:21])_");
if(!(rel_10_disconnected2->empty()) && !(rel_149_call_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_149_call_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[0])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?invoc) :- 
   +disconnected2(),
   invoke_instr(?invoc).
in file interface.dl [243:1-258:21])_");
if(!(rel_10_disconnected2->empty()) && !(rel_176_invoke_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[0])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?invoc) :- 
   +disconnected4(),
   call_instr(?invoc).
in file interface.dl [243:1-258:21])_");
if(!(rel_21_disconnected4->empty()) && !(rel_149_call_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_149_call_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[0])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?invoc) :- 
   +disconnected4(),
   invoke_instr(?invoc).
in file interface.dl [243:1-258:21])_");
if(!(rel_21_disconnected4->empty()) && !(rel_176_invoke_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[0])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?invoc) :- 
   +disconnected6(),
   call_instr(?invoc).
in file interface.dl [243:1-258:21])_");
if(!(rel_23_disconnected6->empty()) && !(rel_149_call_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_149_call_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[0])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?invoc) :- 
   +disconnected6(),
   invoke_instr(?invoc).
in file interface.dl [243:1-258:21])_");
if(!(rel_23_disconnected6->empty()) && !(rel_176_invoke_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[0])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?invoc) :- 
   +disconnected8(),
   call_instr(?invoc).
in file interface.dl [243:1-258:21])_");
if(!(rel_24_disconnected8->empty()) && !(rel_149_call_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_149_call_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[0])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?invoc) :- 
   +disconnected8(),
   invoke_instr(?invoc).
in file interface.dl [243:1-258:21])_");
if(!(rel_24_disconnected8->empty()) && !(rel_176_invoke_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[0])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?invoc) :- 
   +disconnected10(),
   call_instr(?invoc).
in file interface.dl [243:1-258:21])_");
if(!(rel_5_disconnected10->empty()) && !(rel_149_call_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_149_call_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[0])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?invoc) :- 
   +disconnected10(),
   invoke_instr(?invoc).
in file interface.dl [243:1-258:21])_");
if(!(rel_5_disconnected10->empty()) && !(rel_176_invoke_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[0])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?invoc) :- 
   +disconnected12(),
   call_instr(?invoc).
in file interface.dl [243:1-258:21])_");
if(!(rel_6_disconnected12->empty()) && !(rel_149_call_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_149_call_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[0])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?invoc) :- 
   +disconnected12(),
   invoke_instr(?invoc).
in file interface.dl [243:1-258:21])_");
if(!(rel_6_disconnected12->empty()) && !(rel_176_invoke_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[0])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?invoc) :- 
   +disconnected14(),
   call_instr(?invoc).
in file interface.dl [243:1-258:21])_");
if(!(rel_7_disconnected14->empty()) && !(rel_149_call_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_149_call_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[0])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?invoc) :- 
   +disconnected14(),
   invoke_instr(?invoc).
in file interface.dl [243:1-258:21])_");
if(!(rel_7_disconnected14->empty()) && !(rel_176_invoke_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[0])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?invoc) :- 
   +disconnected16(),
   call_instr(?invoc).
in file interface.dl [243:1-258:21])_");
if(!(rel_8_disconnected16->empty()) && !(rel_149_call_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_149_call_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[0])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?invoc) :- 
   +disconnected16(),
   invoke_instr(?invoc).
in file interface.dl [243:1-258:21])_");
if(!(rel_8_disconnected16->empty()) && !(rel_176_invoke_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[0])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?invoc) :- 
   +disconnected18(),
   call_instr(?invoc).
in file interface.dl [243:1-258:21])_");
if(!(rel_9_disconnected18->empty()) && !(rel_149_call_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_149_call_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[0])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?invoc) :- 
   +disconnected18(),
   invoke_instr(?invoc).
in file interface.dl [243:1-258:21])_");
if(!(rel_9_disconnected18->empty()) && !(rel_176_invoke_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[0])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?invoc) :- 
   +disconnected20(),
   call_instr(?invoc).
in file interface.dl [243:1-258:21])_");
if(!(rel_11_disconnected20->empty()) && !(rel_149_call_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_149_call_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[0])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?invoc) :- 
   +disconnected20(),
   invoke_instr(?invoc).
in file interface.dl [243:1-258:21])_");
if(!(rel_11_disconnected20->empty()) && !(rel_176_invoke_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[0])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?name) :- 
   +disconnected22(),
   call_instr(?invoc),
   instr_func(?invoc,?func),
   func_name(?func,?name).
in file interface.dl [260:1-275:20])_");
if(!(rel_149_call_instr->empty()) && !(rel_138_func_name->empty()) && !(rel_12_disconnected22->empty()) && !(rel_175_instr_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_149_call_instr) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?name) :- 
   +disconnected22(),
   invoke_instr(?invoc),
   instr_func(?invoc,?func),
   func_name(?func,?name).
in file interface.dl [260:1-275:20])_");
if(!(rel_176_invoke_instr->empty()) && !(rel_138_func_name->empty()) && !(rel_12_disconnected22->empty()) && !(rel_175_instr_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?name) :- 
   +disconnected24(),
   call_instr(?invoc),
   instr_func(?invoc,?func),
   func_name(?func,?name).
in file interface.dl [260:1-275:20])_");
if(!(rel_149_call_instr->empty()) && !(rel_138_func_name->empty()) && !(rel_13_disconnected24->empty()) && !(rel_175_instr_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_149_call_instr) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?name) :- 
   +disconnected24(),
   invoke_instr(?invoc),
   instr_func(?invoc,?func),
   func_name(?func,?name).
in file interface.dl [260:1-275:20])_");
if(!(rel_176_invoke_instr->empty()) && !(rel_138_func_name->empty()) && !(rel_13_disconnected24->empty()) && !(rel_175_instr_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?name) :- 
   +disconnected26(),
   call_instr(?invoc),
   instr_func(?invoc,?func),
   func_name(?func,?name).
in file interface.dl [260:1-275:20])_");
if(!(rel_149_call_instr->empty()) && !(rel_138_func_name->empty()) && !(rel_14_disconnected26->empty()) && !(rel_175_instr_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_149_call_instr) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?name) :- 
   +disconnected26(),
   invoke_instr(?invoc),
   instr_func(?invoc,?func),
   func_name(?func,?name).
in file interface.dl [260:1-275:20])_");
if(!(rel_176_invoke_instr->empty()) && !(rel_138_func_name->empty()) && !(rel_14_disconnected26->empty()) && !(rel_175_instr_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?name) :- 
   +disconnected28(),
   call_instr(?invoc),
   instr_func(?invoc,?func),
   func_name(?func,?name).
in file interface.dl [260:1-275:20])_");
if(!(rel_149_call_instr->empty()) && !(rel_138_func_name->empty()) && !(rel_15_disconnected28->empty()) && !(rel_175_instr_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_149_call_instr) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?name) :- 
   +disconnected28(),
   invoke_instr(?invoc),
   instr_func(?invoc,?func),
   func_name(?func,?name).
in file interface.dl [260:1-275:20])_");
if(!(rel_176_invoke_instr->empty()) && !(rel_138_func_name->empty()) && !(rel_15_disconnected28->empty()) && !(rel_175_instr_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?name) :- 
   +disconnected30(),
   call_instr(?invoc),
   instr_func(?invoc,?func),
   func_name(?func,?name).
in file interface.dl [260:1-275:20])_");
if(!(rel_149_call_instr->empty()) && !(rel_138_func_name->empty()) && !(rel_16_disconnected30->empty()) && !(rel_175_instr_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_149_call_instr) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?name) :- 
   +disconnected30(),
   invoke_instr(?invoc),
   instr_func(?invoc,?func),
   func_name(?func,?name).
in file interface.dl [260:1-275:20])_");
if(!(rel_176_invoke_instr->empty()) && !(rel_138_func_name->empty()) && !(rel_16_disconnected30->empty()) && !(rel_175_instr_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?name) :- 
   +disconnected32(),
   call_instr(?invoc),
   instr_func(?invoc,?func),
   func_name(?func,?name).
in file interface.dl [260:1-275:20])_");
if(!(rel_149_call_instr->empty()) && !(rel_138_func_name->empty()) && !(rel_17_disconnected32->empty()) && !(rel_175_instr_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_149_call_instr) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?name) :- 
   +disconnected32(),
   invoke_instr(?invoc),
   instr_func(?invoc,?func),
   func_name(?func,?name).
in file interface.dl [260:1-275:20])_");
if(!(rel_176_invoke_instr->empty()) && !(rel_138_func_name->empty()) && !(rel_17_disconnected32->empty()) && !(rel_175_instr_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?name) :- 
   +disconnected34(),
   call_instr(?invoc),
   instr_func(?invoc,?func),
   func_name(?func,?name).
in file interface.dl [260:1-275:20])_");
if(!(rel_149_call_instr->empty()) && !(rel_138_func_name->empty()) && !(rel_18_disconnected34->empty()) && !(rel_175_instr_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_149_call_instr) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?name) :- 
   +disconnected34(),
   invoke_instr(?invoc),
   instr_func(?invoc,?func),
   func_name(?func,?name).
in file interface.dl [260:1-275:20])_");
if(!(rel_176_invoke_instr->empty()) && !(rel_138_func_name->empty()) && !(rel_18_disconnected34->empty()) && !(rel_175_instr_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?name) :- 
   +disconnected36(),
   call_instr(?invoc),
   instr_func(?invoc,?func),
   func_name(?func,?name).
in file interface.dl [260:1-275:20])_");
if(!(rel_149_call_instr->empty()) && !(rel_138_func_name->empty()) && !(rel_19_disconnected36->empty()) && !(rel_175_instr_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_149_call_instr) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?name) :- 
   +disconnected36(),
   invoke_instr(?invoc),
   instr_func(?invoc,?func),
   func_name(?func,?name).
in file interface.dl [260:1-275:20])_");
if(!(rel_176_invoke_instr->empty()) && !(rel_138_func_name->empty()) && !(rel_19_disconnected36->empty()) && !(rel_175_instr_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?name) :- 
   +disconnected38(),
   call_instr(?invoc),
   instr_func(?invoc,?func),
   func_name(?func,?name).
in file interface.dl [260:1-275:20])_");
if(!(rel_149_call_instr->empty()) && !(rel_138_func_name->empty()) && !(rel_20_disconnected38->empty()) && !(rel_175_instr_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_149_call_instr) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context_item_by_invoc_interim(?invoc,?name) :- 
   +disconnected38(),
   invoke_instr(?invoc),
   instr_func(?invoc,?func),
   func_name(?func,?name).
in file interface.dl [260:1-275:20])_");
if(!(rel_176_invoke_instr->empty()) && !(rel_138_func_name->empty()) && !(rel_20_disconnected38->empty()) && !(rel_175_instr_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_179_context_item_by_invoc_interim->insert(tuple,READ_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt));
}
}
}
}
();}
if (pruneImdtRels) rel_5_disconnected10->purge();
if (pruneImdtRels) rel_14_disconnected26->purge();
if (pruneImdtRels) rel_7_disconnected14->purge();
if (pruneImdtRels) rel_6_disconnected12->purge();
if (pruneImdtRels) rel_12_disconnected22->purge();
if (pruneImdtRels) rel_13_disconnected24->purge();
if (pruneImdtRels) rel_17_disconnected32->purge();
if (pruneImdtRels) rel_16_disconnected30->purge();
if (pruneImdtRels) rel_8_disconnected16->purge();
if (pruneImdtRels) rel_21_disconnected4->purge();
if (pruneImdtRels) rel_24_disconnected8->purge();
if (pruneImdtRels) rel_10_disconnected2->purge();
if (pruneImdtRels) rel_18_disconnected34->purge();
if (pruneImdtRels) rel_9_disconnected18->purge();
if (pruneImdtRels) rel_23_disconnected6->purge();
if (pruneImdtRels) rel_19_disconnected36->purge();
if (pruneImdtRels) rel_20_disconnected38->purge();
if (pruneImdtRels) rel_15_disconnected28->purge();
if (pruneImdtRels) rel_11_disconnected20->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_65(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","func\tsection"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func_section.csv.gz"},{"name","func_section"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"func\", \"section\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:Function\", \"s:symbol\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_180_func_section);
} catch (std::exception& e) {std::cerr << "Error loading func_section data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_66(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(called_at_startup(StartupFn) :- 
   func_section(StartupFn,".text.startup").
in file entry-points.dl [64:1-65:45])_");
if(!(rel_180_func_section->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_180_func_section_op_ctxt,rel_180_func_section->createContext());
CREATE_OP_CONTEXT(rel_181_called_at_startup_op_ctxt,rel_181_called_at_startup->createContext());
auto range = rel_180_func_section->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(20))}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(20))}},READ_OP_CONTEXT(rel_180_func_section_op_ctxt));
for(const auto& env0 : range) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_181_called_at_startup->insert(tuple,READ_OP_CONTEXT(rel_181_called_at_startup_op_ctxt));
}
}
();}
if (pruneImdtRels) rel_180_func_section->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_67(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(empty_alloc_context(nil).
in file interface.dl [206:1-206:26])_");
[&](){
CREATE_OP_CONTEXT(rel_182_empty_alloc_context_op_ctxt,rel_182_empty_alloc_context->createContext());
Tuple<RamDomain,1> tuple{{ramBitCast(RamSigned(0))}};
rel_182_empty_alloc_context->insert(tuple,READ_OP_CONTEXT(rel_182_empty_alloc_context_op_ctxt));
}
();}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_68(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(+disconnected32() :- 
   user_options("context_sensitivity",Config),
   Config = "6-caller".
in file interface.dl [260:1-275:20])_");
if(rel_17_disconnected32->empty() && !(rel_4_user_options->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_4_user_options_op_ctxt,rel_4_user_options->createContext());
CREATE_OP_CONTEXT(rel_17_disconnected32_op_ctxt,rel_17_disconnected32->createContext());
if(rel_4_user_options->contains(Tuple<RamDomain,2>{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(21))}},READ_OP_CONTEXT(rel_4_user_options_op_ctxt))) {
Tuple<RamDomain,0> tuple{{}};
rel_17_disconnected32->insert(tuple,READ_OP_CONTEXT(rel_17_disconnected32_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_69(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(exit_context(["<<exit_context>>",nil]).
in file interface.dl [226:1-229:36])_");
[&](){
CREATE_OP_CONTEXT(rel_183_exit_context_op_ctxt,rel_183_exit_context->createContext());
Tuple<RamDomain,1> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(RamSigned(22))),ramBitCast(ramBitCast(RamSigned(0)))}}
))}};
rel_183_exit_context->insert(tuple,READ_OP_CONTEXT(rel_183_exit_context_op_ctxt));
}
();}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_70(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(main_context(["<<main-context>>",nil]).
in file interface.dl [216:1-219:36])_");
[&](){
CREATE_OP_CONTEXT(rel_184_main_context_op_ctxt,rel_184_main_context->createContext());
Tuple<RamDomain,1> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(RamSigned(23))),ramBitCast(ramBitCast(RamSigned(0)))}}
))}};
rel_184_main_context->insert(tuple,READ_OP_CONTEXT(rel_184_main_context_op_ctxt));
}
();}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_71(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(startup_context(["<<startup-context>>",nil]).
in file interface.dl [221:1-224:39])_");
[&](){
CREATE_OP_CONTEXT(rel_185_startup_context_op_ctxt,rel_185_startup_context->createContext());
Tuple<RamDomain,1> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(RamSigned(24))),ramBitCast(ramBitCast(RamSigned(0)))}}
))}};
rel_185_startup_context->insert(tuple,READ_OP_CONTEXT(rel_185_startup_context_op_ctxt));
}
();}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_72(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(user_option_default("context_sensitivity","insensitive").
in file user-options.dl [55:1-55:58])_");
[&](){
CREATE_OP_CONTEXT(rel_186_user_option_default_op_ctxt,rel_186_user_option_default->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(25))}};
rel_186_user_option_default->insert(tuple,READ_OP_CONTEXT(rel_186_user_option_default_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_default("drop_redundant_context_entries","on").
in file user-options.dl [66:1-66:60])_");
[&](){
CREATE_OP_CONTEXT(rel_186_user_option_default_op_ctxt,rel_186_user_option_default->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(26)),ramBitCast(RamSigned(27))}};
rel_186_user_option_default->insert(tuple,READ_OP_CONTEXT(rel_186_user_option_default_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_default("drop_redundant_contexts","on").
in file user-options.dl [77:1-77:53])_");
[&](){
CREATE_OP_CONTEXT(rel_186_user_option_default_op_ctxt,rel_186_user_option_default->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(28)),ramBitCast(RamSigned(27))}};
rel_186_user_option_default->insert(tuple,READ_OP_CONTEXT(rel_186_user_option_default_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_default("entrypoints","main").
in file user-options.dl [91:1-91:43])_");
[&](){
CREATE_OP_CONTEXT(rel_186_user_option_default_op_ctxt,rel_186_user_option_default->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(29)),ramBitCast(RamSigned(30))}};
rel_186_user_option_default->insert(tuple,READ_OP_CONTEXT(rel_186_user_option_default_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_default("pointer_arithmetic","on").
in file user-options.dl [104:1-104:48])_");
[&](){
CREATE_OP_CONTEXT(rel_186_user_option_default_op_ctxt,rel_186_user_option_default->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(31)),ramBitCast(RamSigned(27))}};
rel_186_user_option_default->insert(tuple,READ_OP_CONTEXT(rel_186_user_option_default_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_default("optimized_code","on").
in file user-options.dl [124:1-124:44])_");
[&](){
CREATE_OP_CONTEXT(rel_186_user_option_default_op_ctxt,rel_186_user_option_default->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(32)),ramBitCast(RamSigned(27))}};
rel_186_user_option_default->insert(tuple,READ_OP_CONTEXT(rel_186_user_option_default_op_ctxt));
}
();}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_73(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(user_option_valid_value("context_sensitivity","insensitive").
in file user-options.dl [35:1-35:62])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(25))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("context_sensitivity","1-callsite").
in file user-options.dl [36:1-36:61])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(33))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("context_sensitivity","2-callsite").
in file user-options.dl [37:1-37:61])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(34))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("context_sensitivity","3-callsite").
in file user-options.dl [38:1-38:61])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(35))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("context_sensitivity","4-callsite").
in file user-options.dl [39:1-39:61])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(36))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("context_sensitivity","5-callsite").
in file user-options.dl [40:1-40:61])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(37))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("context_sensitivity","6-callsite").
in file user-options.dl [41:1-41:61])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(38))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("context_sensitivity","7-callsite").
in file user-options.dl [42:1-42:61])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(39))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("context_sensitivity","8-callsite").
in file user-options.dl [43:1-43:61])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(40))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("context_sensitivity","9-callsite").
in file user-options.dl [44:1-44:61])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(2))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("context_sensitivity","1-caller").
in file user-options.dl [45:1-45:59])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(3))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("context_sensitivity","2-caller").
in file user-options.dl [46:1-46:59])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(4))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("context_sensitivity","3-caller").
in file user-options.dl [47:1-47:59])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(6))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("context_sensitivity","4-caller").
in file user-options.dl [48:1-48:59])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(11))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("context_sensitivity","5-caller").
in file user-options.dl [49:1-49:59])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(19))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("context_sensitivity","6-caller").
in file user-options.dl [50:1-50:59])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(21))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("context_sensitivity","7-caller").
in file user-options.dl [51:1-51:59])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(41))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("context_sensitivity","8-caller").
in file user-options.dl [52:1-52:59])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(42))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("context_sensitivity","9-caller").
in file user-options.dl [53:1-53:59])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(43))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("drop_redundant_context_entries","on").
in file user-options.dl [63:1-63:64])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(26)),ramBitCast(RamSigned(27))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("drop_redundant_context_entries","off").
in file user-options.dl [64:1-64:65])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(26)),ramBitCast(RamSigned(44))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("drop_redundant_contexts","on").
in file user-options.dl [74:1-74:57])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(28)),ramBitCast(RamSigned(27))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("drop_redundant_contexts","off").
in file user-options.dl [75:1-75:58])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(28)),ramBitCast(RamSigned(44))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("entrypoints","main").
in file user-options.dl [88:1-88:47])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(29)),ramBitCast(RamSigned(30))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("entrypoints","library").
in file user-options.dl [89:1-89:50])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(29)),ramBitCast(RamSigned(45))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("pointer_arithmetic","on").
in file user-options.dl [101:1-101:52])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(31)),ramBitCast(RamSigned(27))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("pointer_arithmetic","off").
in file user-options.dl [102:1-102:53])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(31)),ramBitCast(RamSigned(44))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("optimized_code","on").
in file user-options.dl [121:1-121:48])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(32)),ramBitCast(RamSigned(27))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();signalHandler->setMsg(R"_(user_option_valid_value("optimized_code","off").
in file user-options.dl [122:1-122:49])_");
[&](){
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(32)),ramBitCast(RamSigned(44))}};
rel_187_user_option_valid_value->insert(tuple,READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt));
}
();}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_74(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(user_option_selected(?key,?value) :- 
   user_options(?key,?value),
   user_option_valid_value(?key,?value).
in file user-options.dl [10:1-12:41])_");
if(!(rel_4_user_options->empty()) && !(rel_187_user_option_valid_value->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_4_user_options_op_ctxt,rel_4_user_options->createContext());
CREATE_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt,rel_187_user_option_valid_value->createContext());
CREATE_OP_CONTEXT(rel_188_user_option_selected_op_ctxt,rel_188_user_option_selected->createContext());
for(const auto& env0 : *rel_4_user_options) {
if( rel_187_user_option_valid_value->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_187_user_option_valid_value_op_ctxt))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_188_user_option_selected->insert(tuple,READ_OP_CONTEXT(rel_188_user_option_selected_op_ctxt));
}
}
}
();}
if (pruneImdtRels) rel_4_user_options->purge();
if (pruneImdtRels) rel_187_user_option_valid_value->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_75(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(user_option_defaulted(?key,?value) :- 
   user_option_default(?key,?value),
   !user_option_selected(?key,_).
in file user-options.dl [18:1-20:34])_");
if(!(rel_186_user_option_default->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_186_user_option_default_op_ctxt,rel_186_user_option_default->createContext());
CREATE_OP_CONTEXT(rel_188_user_option_selected_op_ctxt,rel_188_user_option_selected->createContext());
CREATE_OP_CONTEXT(rel_189_user_option_defaulted_op_ctxt,rel_189_user_option_defaulted->createContext());
for(const auto& env0 : *rel_186_user_option_default) {
if( !(!rel_188_user_option_selected->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_188_user_option_selected_op_ctxt)).empty())) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_189_user_option_defaulted->insert(tuple,READ_OP_CONTEXT(rel_189_user_option_defaulted_op_ctxt));
}
}
}
();}
if (pruneImdtRels) rel_186_user_option_default->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_76(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(user_option_value(?key,?value) :- 
   user_option_selected(?key,?value).
in file user-options.dl [22:1-23:38])_");
if(!(rel_188_user_option_selected->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_188_user_option_selected_op_ctxt,rel_188_user_option_selected->createContext());
CREATE_OP_CONTEXT(rel_190_user_option_value_op_ctxt,rel_190_user_option_value->createContext());
for(const auto& env0 : *rel_188_user_option_selected) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_190_user_option_value->insert(tuple,READ_OP_CONTEXT(rel_190_user_option_value_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(user_option_value(?key,?value) :- 
   user_option_defaulted(?key,?value).
in file user-options.dl [25:1-26:39])_");
if(!(rel_189_user_option_defaulted->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_189_user_option_defaulted_op_ctxt,rel_189_user_option_defaulted->createContext());
CREATE_OP_CONTEXT(rel_190_user_option_value_op_ctxt,rel_190_user_option_value->createContext());
for(const auto& env0 : *rel_189_user_option_defaulted) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_190_user_option_value->insert(tuple,READ_OP_CONTEXT(rel_190_user_option_value_op_ctxt));
}
}
();}
if (pruneImdtRels) rel_188_user_option_selected->purge();
if (pruneImdtRels) rel_189_user_option_defaulted->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_77(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(drop_context_by_invoc(?invoc) :- 
   user_option_value("drop_redundant_contexts","on"),
   call_instr_func_operand(?invoc,?funcOp),
   operand_has_type(?funcOp,?funcOpType),
   pointer_type_has_component(?funcOpType,?declaredType),
   func_type_has_no_pointer_args(?declaredType),
   func_type_has_no_pointer_return(?declaredType).
in file drop.dl [90:1-98:50])_");
if(!(rel_114_func_type_has_no_pointer_args->empty()) && !(rel_190_user_option_value->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_31_operand_has_type->empty()) && !(rel_116_func_type_has_no_pointer_return->empty()) && !(rel_27_call_instr_func_operand->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_27_call_instr_func_operand_op_ctxt,rel_27_call_instr_func_operand->createContext());
CREATE_OP_CONTEXT(rel_31_operand_has_type_op_ctxt,rel_31_operand_has_type->createContext());
CREATE_OP_CONTEXT(rel_114_func_type_has_no_pointer_args_op_ctxt,rel_114_func_type_has_no_pointer_args->createContext());
CREATE_OP_CONTEXT(rel_116_func_type_has_no_pointer_return_op_ctxt,rel_116_func_type_has_no_pointer_return->createContext());
CREATE_OP_CONTEXT(rel_190_user_option_value_op_ctxt,rel_190_user_option_value->createContext());
CREATE_OP_CONTEXT(rel_191_drop_context_by_invoc_op_ctxt,rel_191_drop_context_by_invoc->createContext());
if(rel_190_user_option_value->contains(Tuple<RamDomain,2>{{ramBitCast(RamSigned(28)),ramBitCast(RamSigned(27))}},READ_OP_CONTEXT(rel_190_user_option_value_op_ctxt))) {
for(const auto& env0 : *rel_27_call_instr_func_operand) {
auto range = rel_31_operand_has_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_31_operand_has_type_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env2 : range) {
if( rel_116_func_type_has_no_pointer_return->contains(Tuple<RamDomain,1>{{ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_116_func_type_has_no_pointer_return_op_ctxt)) && rel_114_func_type_has_no_pointer_args->contains(Tuple<RamDomain,1>{{ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_114_func_type_has_no_pointer_args_op_ctxt))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_191_drop_context_by_invoc->insert(tuple,READ_OP_CONTEXT(rel_191_drop_context_by_invoc_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(drop_context_by_invoc(?invoc) :- 
   user_option_value("drop_redundant_contexts","on"),
   invoke_instr_func_operand(?invoc,?funcOp),
   operand_has_type(?funcOp,?funcOpType),
   pointer_type_has_component(?funcOpType,?declaredType),
   func_type_has_no_pointer_args(?declaredType),
   func_type_has_no_pointer_return(?declaredType).
in file drop.dl [90:1-98:50])_");
if(!(rel_114_func_type_has_no_pointer_args->empty()) && !(rel_190_user_option_value->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_31_operand_has_type->empty()) && !(rel_116_func_type_has_no_pointer_return->empty()) && !(rel_33_invoke_instr_func_operand->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_31_operand_has_type_op_ctxt,rel_31_operand_has_type->createContext());
CREATE_OP_CONTEXT(rel_33_invoke_instr_func_operand_op_ctxt,rel_33_invoke_instr_func_operand->createContext());
CREATE_OP_CONTEXT(rel_114_func_type_has_no_pointer_args_op_ctxt,rel_114_func_type_has_no_pointer_args->createContext());
CREATE_OP_CONTEXT(rel_116_func_type_has_no_pointer_return_op_ctxt,rel_116_func_type_has_no_pointer_return->createContext());
CREATE_OP_CONTEXT(rel_190_user_option_value_op_ctxt,rel_190_user_option_value->createContext());
CREATE_OP_CONTEXT(rel_191_drop_context_by_invoc_op_ctxt,rel_191_drop_context_by_invoc->createContext());
if(rel_190_user_option_value->contains(Tuple<RamDomain,2>{{ramBitCast(RamSigned(28)),ramBitCast(RamSigned(27))}},READ_OP_CONTEXT(rel_190_user_option_value_op_ctxt))) {
for(const auto& env0 : *rel_33_invoke_instr_func_operand) {
auto range = rel_31_operand_has_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_31_operand_has_type_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env2 : range) {
if( rel_116_func_type_has_no_pointer_return->contains(Tuple<RamDomain,1>{{ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_116_func_type_has_no_pointer_return_op_ctxt)) && rel_114_func_type_has_no_pointer_args->contains(Tuple<RamDomain,1>{{ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_114_func_type_has_no_pointer_args_op_ctxt))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_191_drop_context_by_invoc->insert(tuple,READ_OP_CONTEXT(rel_191_drop_context_by_invoc_op_ctxt));
}
}
}
}
}
}
();}
if (pruneImdtRels) rel_114_func_type_has_no_pointer_args->purge();
if (pruneImdtRels) rel_116_func_type_has_no_pointer_return->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_78(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(drop_context_item_by_invoc(?invoc) :- 
   user_option_value("drop_redundant_context_entries","on"),
   _instr_calls_func(?invoc,?func),
   max_num_callsites(?func,1).
in file drop.dl [56:1-59:31])_");
if(!(rel_190_user_option_value->empty()) && !(rel_142_instr_calls_func->empty()) && !(rel_160_max_num_callsites->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_142_instr_calls_func_op_ctxt,rel_142_instr_calls_func->createContext());
CREATE_OP_CONTEXT(rel_160_max_num_callsites_op_ctxt,rel_160_max_num_callsites->createContext());
CREATE_OP_CONTEXT(rel_190_user_option_value_op_ctxt,rel_190_user_option_value->createContext());
CREATE_OP_CONTEXT(rel_192_drop_context_item_by_invoc_op_ctxt,rel_192_drop_context_item_by_invoc->createContext());
if(rel_190_user_option_value->contains(Tuple<RamDomain,2>{{ramBitCast(RamSigned(26)),ramBitCast(RamSigned(27))}},READ_OP_CONTEXT(rel_190_user_option_value_op_ctxt))) {
for(const auto& env0 : *rel_142_instr_calls_func) {
if( rel_160_max_num_callsites->contains(Tuple<RamDomain,2>{{ramBitCast(env0[1]),ramBitCast(RamSigned(1))}},READ_OP_CONTEXT(rel_160_max_num_callsites_op_ctxt))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_192_drop_context_item_by_invoc->insert(tuple,READ_OP_CONTEXT(rel_192_drop_context_item_by_invoc_op_ctxt));
}
}
}
}
();}
if (pruneImdtRels) rel_142_instr_calls_func->purge();
if (pruneImdtRels) rel_160_max_num_callsites->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_79(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(+disconnected34() :- 
   user_options("context_sensitivity",Config),
   Config = "7-caller".
in file interface.dl [260:1-275:20])_");
if(rel_18_disconnected34->empty() && !(rel_4_user_options->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_4_user_options_op_ctxt,rel_4_user_options->createContext());
CREATE_OP_CONTEXT(rel_18_disconnected34_op_ctxt,rel_18_disconnected34->createContext());
if(rel_4_user_options->contains(Tuple<RamDomain,2>{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(41))}},READ_OP_CONTEXT(rel_4_user_options_op_ctxt))) {
Tuple<RamDomain,0> tuple{{}};
rel_18_disconnected34->insert(tuple,READ_OP_CONTEXT(rel_18_disconnected34_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_80(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(context_item_by_invoc(?invoc,?ctxItem) :- 
   context_item_by_invoc_interim(?invoc,?ctxItem),
   !drop_context_by_invoc(?invoc),
   !drop_context_item_by_invoc(?invoc).
in file interface.dl [238:1-241:39])_");
if(!(rel_179_context_item_by_invoc_interim->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_179_context_item_by_invoc_interim_op_ctxt,rel_179_context_item_by_invoc_interim->createContext());
CREATE_OP_CONTEXT(rel_191_drop_context_by_invoc_op_ctxt,rel_191_drop_context_by_invoc->createContext());
CREATE_OP_CONTEXT(rel_192_drop_context_item_by_invoc_op_ctxt,rel_192_drop_context_item_by_invoc->createContext());
CREATE_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt,rel_193_context_item_by_invoc->createContext());
for(const auto& env0 : *rel_179_context_item_by_invoc_interim) {
if( !(rel_192_drop_context_item_by_invoc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_192_drop_context_item_by_invoc_op_ctxt))) && !(rel_191_drop_context_by_invoc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_191_drop_context_by_invoc_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_193_context_item_by_invoc->insert(tuple,READ_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt));
}
}
}
();}
if (pruneImdtRels) rel_179_context_item_by_invoc_interim->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_81(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(inlined_constructors() :- 
   user_option_value("optimized_code","on").
in file points-to-options.dl [32:1-33:45])_");
if(rel_194_inlined_constructors->empty() && !(rel_190_user_option_value->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_190_user_option_value_op_ctxt,rel_190_user_option_value->createContext());
CREATE_OP_CONTEXT(rel_194_inlined_constructors_op_ctxt,rel_194_inlined_constructors->createContext());
if(rel_190_user_option_value->contains(Tuple<RamDomain,2>{{ramBitCast(RamSigned(32)),ramBitCast(RamSigned(27))}},READ_OP_CONTEXT(rel_190_user_option_value_op_ctxt))) {
Tuple<RamDomain,0> tuple{{}};
rel_194_inlined_constructors->insert(tuple,READ_OP_CONTEXT(rel_194_inlined_constructors_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_82(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","v0\tv1"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","constant_in_func_name.csv.gz"},{"name","constant_in_func_name"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"v0\", \"v1\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:Constant\", \"s:FunctionName\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_195_constant_in_func_name);
} catch (std::exception& e) {std::cerr << "Error loading constant_in_func_name data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_83(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(constant_in_func(Constant,Function) :- 
   constant_in_func_name(Constant,FuncName),
   func_name(Function,FuncName).
in file constants.dl [69:1-71:34])_");
if(!(rel_195_constant_in_func_name->empty()) && !(rel_138_func_name->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_195_constant_in_func_name_op_ctxt,rel_195_constant_in_func_name->createContext());
CREATE_OP_CONTEXT(rel_196_constant_in_func_op_ctxt,rel_196_constant_in_func->createContext());
for(const auto& env0 : *rel_195_constant_in_func_name) {
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[1])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[0])}};
rel_196_constant_in_func->insert(tuple,READ_OP_CONTEXT(rel_196_constant_in_func_op_ctxt));
}
}
}
();}
if (pruneImdtRels) rel_195_constant_in_func_name->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_84(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c\tname"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","global_var_constant_name.csv.gz"},{"name","global_var_constant_name"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"c\", \"name\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:GlobalVariableConstant\", \"s:symbol\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_197_global_var_constant_name);
} catch (std::exception& e) {std::cerr << "Error loading global_var_constant_name data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_85(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(constant_references_variable(GC,GVar) :- 
   global_var_constant(GC),
   global_var_constant_name(GC,Name),
   global_var_name(GVar,Name).
in file resolve-func-calls.dl [36:1-39:31])_");
if(!(rel_197_global_var_constant_name->empty()) && !(rel_165_global_var_name->empty()) && !(rel_126_global_var_constant->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_126_global_var_constant_op_ctxt,rel_126_global_var_constant->createContext());
CREATE_OP_CONTEXT(rel_165_global_var_name_op_ctxt,rel_165_global_var_name->createContext());
CREATE_OP_CONTEXT(rel_197_global_var_constant_name_op_ctxt,rel_197_global_var_constant_name->createContext());
CREATE_OP_CONTEXT(rel_198_constant_references_variable_op_ctxt,rel_198_constant_references_variable->createContext());
for(const auto& env0 : *rel_126_global_var_constant) {
auto range = rel_197_global_var_constant_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_197_global_var_constant_name_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_165_global_var_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env1[1])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_165_global_var_name_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[0])}};
rel_198_constant_references_variable->insert(tuple,READ_OP_CONTEXT(rel_198_constant_references_variable_op_ctxt));
}
}
}
}
();}
[&](){
CREATE_OP_CONTEXT(rel_198_constant_references_variable_op_ctxt,rel_198_constant_references_variable->createContext());
CREATE_OP_CONTEXT(rel_199_delta_constant_references_variable_op_ctxt,rel_199_delta_constant_references_variable->createContext());
for(const auto& env0 : *rel_198_constant_references_variable) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_199_delta_constant_references_variable->insert(tuple,READ_OP_CONTEXT(rel_199_delta_constant_references_variable_op_ctxt));
}
}
();iter = 0;
for(;;) {
signalHandler->setMsg(R"_(constant_references_variable(Outer,GVar) :- 
   bitcast_constant_expression_from(Outer,Inner),
   constant_references_variable(Inner,GVar).
in file resolve-func-calls.dl [48:1-50:46])_");
if(!(rel_136_bitcast_constant_expression_from->empty()) && !(rel_199_delta_constant_references_variable->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_136_bitcast_constant_expression_from_op_ctxt,rel_136_bitcast_constant_expression_from->createContext());
CREATE_OP_CONTEXT(rel_198_constant_references_variable_op_ctxt,rel_198_constant_references_variable->createContext());
CREATE_OP_CONTEXT(rel_199_delta_constant_references_variable_op_ctxt,rel_199_delta_constant_references_variable->createContext());
CREATE_OP_CONTEXT(rel_200_new_constant_references_variable_op_ctxt,rel_200_new_constant_references_variable->createContext());
for(const auto& env0 : *rel_136_bitcast_constant_expression_from) {
auto range = rel_199_delta_constant_references_variable->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_199_delta_constant_references_variable_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_198_constant_references_variable->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_198_constant_references_variable_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[1])}};
rel_200_new_constant_references_variable->insert(tuple,READ_OP_CONTEXT(rel_200_new_constant_references_variable_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(constant_references_variable(OtherConstant,GVar) :- 
   aliased_constants(OtherConstant,Constant),
   constant_references_variable(Constant,GVar).
in file resolve-func-calls.dl [82:1-84:49])_");
if(!(rel_95_aliased_constants->empty()) && !(rel_199_delta_constant_references_variable->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_95_aliased_constants_op_ctxt,rel_95_aliased_constants->createContext());
CREATE_OP_CONTEXT(rel_198_constant_references_variable_op_ctxt,rel_198_constant_references_variable->createContext());
CREATE_OP_CONTEXT(rel_199_delta_constant_references_variable_op_ctxt,rel_199_delta_constant_references_variable->createContext());
CREATE_OP_CONTEXT(rel_200_new_constant_references_variable_op_ctxt,rel_200_new_constant_references_variable->createContext());
for(const auto& env0 : *rel_95_aliased_constants) {
auto range = rel_199_delta_constant_references_variable->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_199_delta_constant_references_variable_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_198_constant_references_variable->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_198_constant_references_variable_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[1])}};
rel_200_new_constant_references_variable->insert(tuple,READ_OP_CONTEXT(rel_200_new_constant_references_variable_op_ctxt));
}
}
}
}
();}
if(rel_200_new_constant_references_variable->empty()) break;
[&](){
CREATE_OP_CONTEXT(rel_198_constant_references_variable_op_ctxt,rel_198_constant_references_variable->createContext());
CREATE_OP_CONTEXT(rel_200_new_constant_references_variable_op_ctxt,rel_200_new_constant_references_variable->createContext());
for(const auto& env0 : *rel_200_new_constant_references_variable) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_198_constant_references_variable->insert(tuple,READ_OP_CONTEXT(rel_198_constant_references_variable_op_ctxt));
}
}
();std::swap(rel_199_delta_constant_references_variable, rel_200_new_constant_references_variable);
rel_200_new_constant_references_variable->purge();
iter++;
}
iter = 0;
rel_199_delta_constant_references_variable->purge();
rel_200_new_constant_references_variable->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_86(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c\ti\tic"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","constant_array_index.csv.gz"},{"name","constant_array_index"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"c\", \"i\", \"ic\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:ConstantArray\", \"i:number\", \"s:Constant\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_201_constant_array_index);
} catch (std::exception& e) {std::cerr << "Error loading constant_array_index data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_87(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\ti\tidx"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","getelementptr_instr_index.csv.gz"},{"name","getelementptr_instr_index"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"instr\", \"i\", \"idx\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:GetElementPtrInstruction\", \"i:GepIndex\", \"s:Operand\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_202_getelementptr_instr_index);
} catch (std::exception& e) {std::cerr << "Error loading getelementptr_instr_index data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_88(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\tptr"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","getelementptr_instr_base.csv.gz"},{"name","getelementptr_instr_base"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"ptr\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:GetElementPtrInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_203_getelementptr_instr_base);
} catch (std::exception& e) {std::cerr << "Error loading getelementptr_instr_base data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_89(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(getelementptr_instr_base_type(Instr,PtrType) :- 
   getelementptr_instr_base(Instr,BasePtr),
   operand_has_type(BasePtr,PtrType).
in file getelementptr-instr.dl [41:1-43:39])_");
if(!(rel_203_getelementptr_instr_base->empty()) && !(rel_31_operand_has_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_31_operand_has_type_op_ctxt,rel_31_operand_has_type->createContext());
CREATE_OP_CONTEXT(rel_203_getelementptr_instr_base_op_ctxt,rel_203_getelementptr_instr_base->createContext());
CREATE_OP_CONTEXT(rel_204_getelementptr_instr_base_type_op_ctxt,rel_204_getelementptr_instr_base_type->createContext());
for(const auto& env0 : *rel_203_getelementptr_instr_base) {
auto range = rel_31_operand_has_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_31_operand_has_type_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[1])}};
rel_204_getelementptr_instr_base_type->insert(tuple,READ_OP_CONTEXT(rel_204_getelementptr_instr_base_type_op_ctxt));
}
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_90(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(+disconnected36() :- 
   user_options("context_sensitivity",Config),
   Config = "8-caller".
in file interface.dl [260:1-275:20])_");
if(rel_19_disconnected36->empty() && !(rel_4_user_options->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_4_user_options_op_ctxt,rel_4_user_options->createContext());
CREATE_OP_CONTEXT(rel_19_disconnected36_op_ctxt,rel_19_disconnected36->createContext());
if(rel_4_user_options->contains(Tuple<RamDomain,2>{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(42))}},READ_OP_CONTEXT(rel_4_user_options_op_ctxt))) {
Tuple<RamDomain,0> tuple{{}};
rel_19_disconnected36->insert(tuple,READ_OP_CONTEXT(rel_19_disconnected36_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_91(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(gep_is_vector_based(Instr) :- 
   getelementptr_instr_base_type(Instr,PtrType),
   vector_type(PtrType).
in file getelementptr-instr.dl [52:1-54:25])_");
if(!(rel_204_getelementptr_instr_base_type->empty()) && !(rel_54_vector_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_54_vector_type_op_ctxt,rel_54_vector_type->createContext());
CREATE_OP_CONTEXT(rel_204_getelementptr_instr_base_type_op_ctxt,rel_204_getelementptr_instr_base_type->createContext());
CREATE_OP_CONTEXT(rel_205_gep_is_vector_based_op_ctxt,rel_205_gep_is_vector_based->createContext());
for(const auto& env0 : *rel_204_getelementptr_instr_base_type) {
if( rel_54_vector_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_54_vector_type_op_ctxt))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_205_gep_is_vector_based->insert(tuple,READ_OP_CONTEXT(rel_205_gep_is_vector_based_op_ctxt));
}
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_92(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\ti\tidx"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","extractvalue_instr_index.csv.gz"},{"name","extractvalue_instr_index"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"instr\", \"i\", \"idx\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:ExtractValueInstruction\", \"i:number\", \"i:number\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_206_extractvalue_instr_index);
} catch (std::exception& e) {std::cerr << "Error loading extractvalue_instr_index data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_93(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\ti\tidx"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","insertvalue_instr_index.csv.gz"},{"name","insertvalue_instr_index"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"instr\", \"i\", \"idx\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:InsertValueInstruction\", \"i:number\", \"i:number\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_207_insertvalue_instr_index);
} catch (std::exception& e) {std::cerr << "Error loading insertvalue_instr_index data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_94(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(instr_successor_index(Instr,Index,(Index+1)) :- 
   getelementptr_instr_index(Instr,Index,_).
in file getelementptr-instr.dl [75:1-76:47])_");
if(!(rel_202_getelementptr_instr_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_202_getelementptr_instr_index_op_ctxt,rel_202_getelementptr_instr_index->createContext());
CREATE_OP_CONTEXT(rel_208_instr_successor_index_op_ctxt,rel_208_instr_successor_index->createContext());
for(const auto& env0 : *rel_202_getelementptr_instr_index) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1))))}};
rel_208_instr_successor_index->insert(tuple,READ_OP_CONTEXT(rel_208_instr_successor_index_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(instr_successor_index(Instr,Index,(Index+1)) :- 
   extractvalue_instr_index(Instr,Index,_).
in file extractvalue-instr.dl [18:1-19:46])_");
if(!(rel_206_extractvalue_instr_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_206_extractvalue_instr_index_op_ctxt,rel_206_extractvalue_instr_index->createContext());
CREATE_OP_CONTEXT(rel_208_instr_successor_index_op_ctxt,rel_208_instr_successor_index->createContext());
for(const auto& env0 : *rel_206_extractvalue_instr_index) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1))))}};
rel_208_instr_successor_index->insert(tuple,READ_OP_CONTEXT(rel_208_instr_successor_index_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(instr_successor_index(Instr,Index,(Index+1)) :- 
   insertvalue_instr_index(Instr,Index,_).
in file insertvalue-instr.dl [19:1-20:45])_");
if(!(rel_207_insertvalue_instr_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_207_insertvalue_instr_index_op_ctxt,rel_207_insertvalue_instr_index->createContext());
CREATE_OP_CONTEXT(rel_208_instr_successor_index_op_ctxt,rel_208_instr_successor_index->createContext());
for(const auto& env0 : *rel_207_insertvalue_instr_index) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1))))}};
rel_208_instr_successor_index->insert(tuple,READ_OP_CONTEXT(rel_208_instr_successor_index_op_ctxt));
}
}
();}
if (pruneImdtRels) rel_206_extractvalue_instr_index->purge();
if (pruneImdtRels) rel_207_insertvalue_instr_index->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_95(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(getelementptr_instrterm_type(Instr,1,Type) :- 
   getelementptr_instr_base_type(Instr,PtrType),
   pointer_type_has_component(PtrType,Type).
in file getelementptr-instr.dl [78:1-80:46])_");
if(!(rel_204_getelementptr_instr_base_type->empty()) && !(rel_2_pointer_type_has_component->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_204_getelementptr_instr_base_type_op_ctxt,rel_204_getelementptr_instr_base_type->createContext());
CREATE_OP_CONTEXT(rel_209_getelementptr_instrterm_type_op_ctxt,rel_209_getelementptr_instrterm_type->createContext());
for(const auto& env0 : *rel_204_getelementptr_instr_base_type) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(RamSigned(1)),ramBitCast(env1[1])}};
rel_209_getelementptr_instrterm_type->insert(tuple,READ_OP_CONTEXT(rel_209_getelementptr_instrterm_type_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(getelementptr_instrterm_type(Instr,1,Type) :- 
   getelementptr_instr_base_type(Instr,VectorPtrType),
   vector_type_has_component(VectorPtrType,PtrType),
   pointer_type_has_component(PtrType,Type).
in file getelementptr-instr.dl [82:1-85:46])_");
if(!(rel_105_vector_type_has_component->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_204_getelementptr_instr_base_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_105_vector_type_has_component_op_ctxt,rel_105_vector_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_204_getelementptr_instr_base_type_op_ctxt,rel_204_getelementptr_instr_base_type->createContext());
CREATE_OP_CONTEXT(rel_209_getelementptr_instrterm_type_op_ctxt,rel_209_getelementptr_instrterm_type->createContext());
for(const auto& env0 : *rel_204_getelementptr_instr_base_type) {
auto range = rel_105_vector_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_105_vector_type_has_component_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(RamSigned(1)),ramBitCast(env2[1])}};
rel_209_getelementptr_instrterm_type->insert(tuple,READ_OP_CONTEXT(rel_209_getelementptr_instrterm_type_op_ctxt));
}
}
}
}
();}
[&](){
CREATE_OP_CONTEXT(rel_209_getelementptr_instrterm_type_op_ctxt,rel_209_getelementptr_instrterm_type->createContext());
CREATE_OP_CONTEXT(rel_210_delta_getelementptr_instrterm_type_op_ctxt,rel_210_delta_getelementptr_instrterm_type->createContext());
for(const auto& env0 : *rel_209_getelementptr_instrterm_type) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_210_delta_getelementptr_instrterm_type->insert(tuple,READ_OP_CONTEXT(rel_210_delta_getelementptr_instrterm_type_op_ctxt));
}
}
();iter = 0;
for(;;) {
signalHandler->setMsg(R"_(getelementptr_instrterm_type(Instr,NextIndex,Type) :- 
   getelementptr_instrterm_type(Instr,Index,ArrayType),
   array_type_has_component(ArrayType,Type),
   instr_successor_index(Instr,Index,NextIndex).
in file getelementptr-instr.dl [87:1-90:51])_");
if(!(rel_42_array_type_has_component->empty()) && !(rel_208_instr_successor_index->empty()) && !(rel_210_delta_getelementptr_instrterm_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_42_array_type_has_component_op_ctxt,rel_42_array_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_208_instr_successor_index_op_ctxt,rel_208_instr_successor_index->createContext());
CREATE_OP_CONTEXT(rel_209_getelementptr_instrterm_type_op_ctxt,rel_209_getelementptr_instrterm_type->createContext());
CREATE_OP_CONTEXT(rel_210_delta_getelementptr_instrterm_type_op_ctxt,rel_210_delta_getelementptr_instrterm_type->createContext());
CREATE_OP_CONTEXT(rel_211_new_getelementptr_instrterm_type_op_ctxt,rel_211_new_getelementptr_instrterm_type->createContext());
for(const auto& env0 : *rel_210_delta_getelementptr_instrterm_type) {
auto range = rel_42_array_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_42_array_type_has_component_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_208_instr_successor_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_208_instr_successor_index_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_209_getelementptr_instrterm_type->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env2[2]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_209_getelementptr_instrterm_type_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env2[2]),ramBitCast(env1[1])}};
rel_211_new_getelementptr_instrterm_type->insert(tuple,READ_OP_CONTEXT(rel_211_new_getelementptr_instrterm_type_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(getelementptr_instrterm_type(Instr,NextIndex,Type) :- 
   getelementptr_instrterm_type(Instr,Index,VectorType),
   vector_type_has_component(VectorType,Type),
   instr_successor_index(Instr,Index,NextIndex).
in file getelementptr-instr.dl [92:1-95:51])_");
if(!(rel_105_vector_type_has_component->empty()) && !(rel_208_instr_successor_index->empty()) && !(rel_210_delta_getelementptr_instrterm_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_105_vector_type_has_component_op_ctxt,rel_105_vector_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_208_instr_successor_index_op_ctxt,rel_208_instr_successor_index->createContext());
CREATE_OP_CONTEXT(rel_209_getelementptr_instrterm_type_op_ctxt,rel_209_getelementptr_instrterm_type->createContext());
CREATE_OP_CONTEXT(rel_210_delta_getelementptr_instrterm_type_op_ctxt,rel_210_delta_getelementptr_instrterm_type->createContext());
CREATE_OP_CONTEXT(rel_211_new_getelementptr_instrterm_type_op_ctxt,rel_211_new_getelementptr_instrterm_type->createContext());
for(const auto& env0 : *rel_210_delta_getelementptr_instrterm_type) {
auto range = rel_105_vector_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_105_vector_type_has_component_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_208_instr_successor_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_208_instr_successor_index_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_209_getelementptr_instrterm_type->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env2[2]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_209_getelementptr_instrterm_type_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env2[2]),ramBitCast(env1[1])}};
rel_211_new_getelementptr_instrterm_type->insert(tuple,READ_OP_CONTEXT(rel_211_new_getelementptr_instrterm_type_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(getelementptr_instrterm_type(Instr,NextIndex,Type) :- 
   getelementptr_instrterm_type(Instr,Index,StructType),
   getelementptr_instr_index(Instr,Index,FieldIdx),
   constant_has_type(FieldIdx,FieldIdxType),
   constant_to_int(FieldIdx,FieldIdxValue),
   int32_type(FieldIdxType),
   struct_type_field(StructType,FieldIdxValue,Type),
   instr_successor_index(Instr,Index,NextIndex).
in file getelementptr-instr.dl [97:1-104:51])_");
if(!(rel_202_getelementptr_instr_index->empty()) && !(rel_40_struct_type_field->empty()) && !(rel_29_constant_has_type->empty()) && !(rel_104_constant_to_int->empty()) && !(rel_62_int32_type->empty()) && !(rel_208_instr_successor_index->empty()) && !(rel_210_delta_getelementptr_instrterm_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_29_constant_has_type_op_ctxt,rel_29_constant_has_type->createContext());
CREATE_OP_CONTEXT(rel_40_struct_type_field_op_ctxt,rel_40_struct_type_field->createContext());
CREATE_OP_CONTEXT(rel_62_int32_type_op_ctxt,rel_62_int32_type->createContext());
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_202_getelementptr_instr_index_op_ctxt,rel_202_getelementptr_instr_index->createContext());
CREATE_OP_CONTEXT(rel_208_instr_successor_index_op_ctxt,rel_208_instr_successor_index->createContext());
CREATE_OP_CONTEXT(rel_209_getelementptr_instrterm_type_op_ctxt,rel_209_getelementptr_instrterm_type->createContext());
CREATE_OP_CONTEXT(rel_210_delta_getelementptr_instrterm_type_op_ctxt,rel_210_delta_getelementptr_instrterm_type->createContext());
CREATE_OP_CONTEXT(rel_211_new_getelementptr_instrterm_type_op_ctxt,rel_211_new_getelementptr_instrterm_type->createContext());
for(const auto& env0 : *rel_210_delta_getelementptr_instrterm_type) {
auto range = rel_202_getelementptr_instr_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_202_getelementptr_instr_index_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_29_constant_has_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_29_constant_has_type_op_ctxt));
for(const auto& env2 : range) {
if( rel_62_int32_type->contains(Tuple<RamDomain,1>{{ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_62_int32_type_op_ctxt))) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env3 : range) {
auto range = rel_40_struct_type_field->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env3[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env3[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_40_struct_type_field_op_ctxt));
for(const auto& env4 : range) {
auto range = rel_208_instr_successor_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_208_instr_successor_index_op_ctxt));
for(const auto& env5 : range) {
if( !(rel_209_getelementptr_instrterm_type->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env5[2]),ramBitCast(env4[2])}},READ_OP_CONTEXT(rel_209_getelementptr_instrterm_type_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env5[2]),ramBitCast(env4[2])}};
rel_211_new_getelementptr_instrterm_type->insert(tuple,READ_OP_CONTEXT(rel_211_new_getelementptr_instrterm_type_op_ctxt));
}
}
}
}
break;
}
}
}
}
}
();}
if(rel_211_new_getelementptr_instrterm_type->empty()) break;
[&](){
CREATE_OP_CONTEXT(rel_209_getelementptr_instrterm_type_op_ctxt,rel_209_getelementptr_instrterm_type->createContext());
CREATE_OP_CONTEXT(rel_211_new_getelementptr_instrterm_type_op_ctxt,rel_211_new_getelementptr_instrterm_type->createContext());
for(const auto& env0 : *rel_211_new_getelementptr_instrterm_type) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_209_getelementptr_instrterm_type->insert(tuple,READ_OP_CONTEXT(rel_209_getelementptr_instrterm_type_op_ctxt));
}
}
();std::swap(rel_210_delta_getelementptr_instrterm_type, rel_211_new_getelementptr_instrterm_type);
rel_211_new_getelementptr_instrterm_type->purge();
iter++;
}
iter = 0;
rel_210_delta_getelementptr_instrterm_type->purge();
rel_211_new_getelementptr_instrterm_type->purge();
if (pruneImdtRels) rel_105_vector_type_has_component->purge();
if (pruneImdtRels) rel_208_instr_successor_index->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_96(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(array_indices__no_typecomp(?region,?declaredType,as(?constantIndex, ArrayIndex)) :- 
   getelementptr_instr_index(?insn,?index,?indexOp),
   getelementptr_instrterm_type(?insn,?index,?declaredType),
   _alloc_region(?region),
   constant_to_int(?indexOp,?constantIndex),
   array_type(?declaredType).
in file allocations-subobjects.dl [100:1-111:30])_");
if(!(rel_209_getelementptr_instrterm_type->empty()) && !(rel_99_alloc_region->empty()) && !(rel_50_array_type->empty()) && !(rel_104_constant_to_int->empty()) && !(rel_202_getelementptr_instr_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_99_alloc_region_op_ctxt,rel_99_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_202_getelementptr_instr_index_op_ctxt,rel_202_getelementptr_instr_index->createContext());
CREATE_OP_CONTEXT(rel_209_getelementptr_instrterm_type_op_ctxt,rel_209_getelementptr_instrterm_type->createContext());
CREATE_OP_CONTEXT(rel_212_array_indices_no_typecomp_op_ctxt,rel_212_array_indices_no_typecomp->createContext());
for(const auto& env0 : *rel_202_getelementptr_instr_index) {
auto range = rel_209_getelementptr_instrterm_type->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_209_getelementptr_instrterm_type_op_ctxt));
for(const auto& env1 : range) {
if( rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
for(const auto& env2 : *rel_99_alloc_region) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,3> tuple{{ramBitCast(env2[0]),ramBitCast(env1[2]),ramBitCast(env3[1])}};
rel_212_array_indices_no_typecomp->insert(tuple,READ_OP_CONTEXT(rel_212_array_indices_no_typecomp_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(array_indices__no_typecomp(?region,?declaredType,as(?constantIndex, ArrayIndex)) :- 
   getelementptr_constant_expression_index(?expr,?index,?indexOp),
   _getelementptr_constant_expression_interm_type(?expr,?index,?declaredType),
   global_region(?region),
   constant_to_int(?indexOp,?constantIndex),
   array_type(?declaredType).
in file allocations-subobjects.dl [100:1-111:30])_");
if(!(rel_106_getelementptr_constant_expression_interm_type->empty()) && !(rel_96_global_region->empty()) && !(rel_50_array_type->empty()) && !(rel_104_constant_to_int->empty()) && !(rel_100_getelementptr_constant_expression_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_100_getelementptr_constant_expression_index_op_ctxt,rel_100_getelementptr_constant_expression_index->createContext());
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_106_getelementptr_constant_expression_interm_type_op_ctxt,rel_106_getelementptr_constant_expression_interm_type->createContext());
CREATE_OP_CONTEXT(rel_212_array_indices_no_typecomp_op_ctxt,rel_212_array_indices_no_typecomp->createContext());
for(const auto& env0 : *rel_100_getelementptr_constant_expression_index) {
auto range = rel_106_getelementptr_constant_expression_interm_type->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_106_getelementptr_constant_expression_interm_type_op_ctxt));
for(const auto& env1 : range) {
if( rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
for(const auto& env2 : *rel_96_global_region) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,3> tuple{{ramBitCast(env2[0]),ramBitCast(env1[2]),ramBitCast(env3[1])}};
rel_212_array_indices_no_typecomp->insert(tuple,READ_OP_CONTEXT(rel_212_array_indices_no_typecomp_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(array_indices__no_typecomp(?region,?constantType,as(?index, ArrayIndex)) :- 
   constant_has_type(?constant,?constantType),
   constant_array_index(?constant,?index,_),
   array_type(?constantType),
   type_contains_pointer(?constantType),
   global_region(?region).
in file constant-init.dl [40:1-49:26])_");
if(!(rel_50_array_type->empty()) && !(rel_201_constant_array_index->empty()) && !(rel_112_type_contains_pointer->empty()) && !(rel_96_global_region->empty()) && !(rel_29_constant_has_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_29_constant_has_type_op_ctxt,rel_29_constant_has_type->createContext());
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_112_type_contains_pointer_op_ctxt,rel_112_type_contains_pointer->createContext());
CREATE_OP_CONTEXT(rel_201_constant_array_index_op_ctxt,rel_201_constant_array_index->createContext());
CREATE_OP_CONTEXT(rel_212_array_indices_no_typecomp_op_ctxt,rel_212_array_indices_no_typecomp->createContext());
for(const auto& env0 : *rel_29_constant_has_type) {
if( rel_112_type_contains_pointer->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_112_type_contains_pointer_op_ctxt)) && rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
auto range = rel_201_constant_array_index->lowerUpperRange_100(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_201_constant_array_index_op_ctxt));
for(const auto& env1 : range) {
for(const auto& env2 : *rel_96_global_region) {
Tuple<RamDomain,3> tuple{{ramBitCast(env2[0]),ramBitCast(env0[1]),ramBitCast(env1[1])}};
rel_212_array_indices_no_typecomp->insert(tuple,READ_OP_CONTEXT(rel_212_array_indices_no_typecomp_op_ctxt));
}
}
}
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_97(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(array_indices(?region,?type,?constantIndex) :- 
   array_type(?type),
   type_contains_pointer(?type),
   type_compatible(?type,?declaredType),
   array_indices__no_typecomp(?region,?declaredType,?constantIndex).
in file allocations-subobjects.dl [117:1-121:70])_");
if(!(rel_112_type_contains_pointer->empty()) && !(rel_74_type_compatible->empty()) && !(rel_50_array_type->empty()) && !(rel_212_array_indices_no_typecomp->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_74_type_compatible_op_ctxt,rel_74_type_compatible->createContext());
CREATE_OP_CONTEXT(rel_112_type_contains_pointer_op_ctxt,rel_112_type_contains_pointer->createContext());
CREATE_OP_CONTEXT(rel_212_array_indices_no_typecomp_op_ctxt,rel_212_array_indices_no_typecomp->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
for(const auto& env0 : *rel_50_array_type) {
if( rel_112_type_contains_pointer->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_112_type_contains_pointer_op_ctxt))) {
auto range = rel_74_type_compatible->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_74_type_compatible_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_212_array_indices_no_typecomp->lowerUpperRange_010(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_212_array_indices_no_typecomp_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,3> tuple{{ramBitCast(env2[0]),ramBitCast(env0[0]),ramBitCast(env2[2])}};
rel_213_array_indices->insert(tuple,READ_OP_CONTEXT(rel_213_array_indices_op_ctxt));
}
}
}
}
}
();}
if (pruneImdtRels) rel_212_array_indices_no_typecomp->purge();
if (pruneImdtRels) rel_112_type_contains_pointer->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_98(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(ppc_fp128_type("ppc_fp128").
in file type.dl [115:1-115:29])_");
[&](){
CREATE_OP_CONTEXT(rel_214_ppc_fp128_type_op_ctxt,rel_214_ppc_fp128_type->createContext());
Tuple<RamDomain,1> tuple{{ramBitCast(RamSigned(46))}};
rel_214_ppc_fp128_type->insert(tuple,READ_OP_CONTEXT(rel_214_ppc_fp128_type_op_ctxt));
}
();}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_99(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(x86_fp80_type("x86_fp80").
in file type.dl [114:1-114:27])_");
[&](){
CREATE_OP_CONTEXT(rel_215_x86_fp80_type_op_ctxt,rel_215_x86_fp80_type->createContext());
Tuple<RamDomain,1> tuple{{ramBitCast(RamSigned(47))}};
rel_215_x86_fp80_type->insert(tuple,READ_OP_CONTEXT(rel_215_x86_fp80_type_op_ctxt));
}
();}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_100(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","t\tsize"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","type_has_size.csv.gz"},{"name","type_has_size"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"t\", \"size\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:Type\", \"i:Bytes\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_216_type_has_size);
} catch (std::exception& e) {std::cerr << "Error loading type_has_size data: " << e.what() << '\n';}
}
signalHandler->setMsg(R"_(type_has_size(t,1) :- 
   int1_type(t).
in file type.dl [86:1-86:37])_");
if(!(rel_61_int1_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_61_int1_type_op_ctxt,rel_61_int1_type->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
for(const auto& env0 : *rel_61_int1_type) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(RamSigned(1))}};
rel_216_type_has_size->insert(tuple,READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(type_has_size(t,1) :- 
   int8_type(t).
in file type.dl [87:1-87:37])_");
if(!(rel_1_int8_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_1_int8_type_op_ctxt,rel_1_int8_type->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
for(const auto& env0 : *rel_1_int8_type) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(RamSigned(1))}};
rel_216_type_has_size->insert(tuple,READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(type_has_size(t,4) :- 
   int32_type(t).
in file type.dl [88:1-88:38])_");
if(!(rel_62_int32_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_62_int32_type_op_ctxt,rel_62_int32_type->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
for(const auto& env0 : *rel_62_int32_type) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(RamSigned(4))}};
rel_216_type_has_size->insert(tuple,READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(type_has_size(t,8) :- 
   int64_type(t).
in file type.dl [89:1-89:38])_");
if(!(rel_63_int64_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_63_int64_type_op_ctxt,rel_63_int64_type->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
for(const auto& env0 : *rel_63_int64_type) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(RamSigned(8))}};
rel_216_type_has_size->insert(tuple,READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(type_has_size(t,8) :- 
   double_type(t).
in file type.dl [117:1-117:39])_");
if(!(rel_56_double_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_56_double_type_op_ctxt,rel_56_double_type->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
for(const auto& env0 : *rel_56_double_type) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(RamSigned(8))}};
rel_216_type_has_size->insert(tuple,READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(type_has_size(t,4) :- 
   float_type(t).
in file type.dl [118:1-118:38])_");
if(!(rel_57_float_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_57_float_type_op_ctxt,rel_57_float_type->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
for(const auto& env0 : *rel_57_float_type) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(RamSigned(4))}};
rel_216_type_has_size->insert(tuple,READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(type_has_size(t,2) :- 
   half_type(t).
in file type.dl [119:1-119:37])_");
if(!(rel_59_half_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_59_half_type_op_ctxt,rel_59_half_type->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
for(const auto& env0 : *rel_59_half_type) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(RamSigned(2))}};
rel_216_type_has_size->insert(tuple,READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(type_has_size(t,16) :- 
   fp128_type(t).
in file type.dl [120:1-120:39])_");
if(!(rel_58_fp128_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_58_fp128_type_op_ctxt,rel_58_fp128_type->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
for(const auto& env0 : *rel_58_fp128_type) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(RamSigned(16))}};
rel_216_type_has_size->insert(tuple,READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(type_has_size(t,10) :- 
   x86_fp80_type(t).
in file type.dl [121:1-121:42])_");
if(!(rel_215_x86_fp80_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_215_x86_fp80_type_op_ctxt,rel_215_x86_fp80_type->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
for(const auto& env0 : *rel_215_x86_fp80_type) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(RamSigned(10))}};
rel_216_type_has_size->insert(tuple,READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(type_has_size(t,16) :- 
   ppc_fp128_type(t).
in file type.dl [122:1-122:43])_");
if(!(rel_214_ppc_fp128_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_214_ppc_fp128_type_op_ctxt,rel_214_ppc_fp128_type->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
for(const auto& env0 : *rel_214_ppc_fp128_type) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(RamSigned(16))}};
rel_216_type_has_size->insert(tuple,READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
}
}
();}
if (pruneImdtRels) rel_61_int1_type->purge();
if (pruneImdtRels) rel_62_int32_type->purge();
if (pruneImdtRels) rel_63_int64_type->purge();
if (pruneImdtRels) rel_56_double_type->purge();
if (pruneImdtRels) rel_57_float_type->purge();
if (pruneImdtRels) rel_59_half_type->purge();
if (pruneImdtRels) rel_58_fp128_type->purge();
if (pruneImdtRels) rel_215_x86_fp80_type->purge();
if (pruneImdtRels) rel_214_ppc_fp128_type->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_101(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(+disconnected38() :- 
   user_options("context_sensitivity",Config),
   Config = "9-caller".
in file interface.dl [260:1-275:20])_");
if(rel_20_disconnected38->empty() && !(rel_4_user_options->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_4_user_options_op_ctxt,rel_4_user_options->createContext());
CREATE_OP_CONTEXT(rel_20_disconnected38_op_ctxt,rel_20_disconnected38->createContext());
if(rel_4_user_options->contains(Tuple<RamDomain,2>{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(43))}},READ_OP_CONTEXT(rel_4_user_options_op_ctxt))) {
Tuple<RamDomain,0> tuple{{}};
rel_20_disconnected38->insert(tuple,READ_OP_CONTEXT(rel_20_disconnected38_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_102(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(pointer_index(?region,?type,0) :- 
   _alloc_region(?region),
   type(?type).
in file allocations-subobjects.dl [46:1-48:15])_");
if(!(rel_99_alloc_region->empty()) && !(rel_71_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_71_type_op_ctxt,rel_71_type->createContext());
CREATE_OP_CONTEXT(rel_99_alloc_region_op_ctxt,rel_99_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_217_pointer_index_op_ctxt,rel_217_pointer_index->createContext());
for(const auto& env0 : *rel_99_alloc_region) {
for(const auto& env1 : *rel_71_type) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env1[0]),ramBitCast(RamSigned(0))}};
rel_217_pointer_index->insert(tuple,READ_OP_CONTEXT(rel_217_pointer_index_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(pointer_index(?region,?type,((?index*?declaredSize)/max(?size,1))) :- 
   getelementptr_instr_index(?insn,0,?indexOp),
   constant_to_int(?indexOp,?index),
   getelementptr_instr_base_type(?insn,?declaredType),
   _alloc_region(?region),
   ?index >= 0,
   pointer_type_has_component(?declaredType,?declaredElemType),
   type_compatible(?type,?declaredElemType),
   type_has_size(?type,?size),
   ?size > 0,
   type_has_size(?declaredElemType,?declaredSize),
   (((?index*?declaredSize)/max(?size,1))*?size) = (?index*?declaredSize).
in file allocations-subobjects.dl [51:1-84:50])_");
if(!(rel_74_type_compatible->empty()) && !(rel_202_getelementptr_instr_index->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_204_getelementptr_instr_base_type->empty()) && !(rel_99_alloc_region->empty()) && !(rel_104_constant_to_int->empty()) && !(rel_216_type_has_size->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_74_type_compatible_op_ctxt,rel_74_type_compatible->createContext());
CREATE_OP_CONTEXT(rel_99_alloc_region_op_ctxt,rel_99_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_202_getelementptr_instr_index_op_ctxt,rel_202_getelementptr_instr_index->createContext());
CREATE_OP_CONTEXT(rel_204_getelementptr_instr_base_type_op_ctxt,rel_204_getelementptr_instr_base_type->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_217_pointer_index_op_ctxt,rel_217_pointer_index->createContext());
auto range = rel_202_getelementptr_instr_index->lowerUpperRange_010(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_202_getelementptr_instr_index_op_ctxt));
for(const auto& env0 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_12(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast(RamSigned(0))}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_204_getelementptr_instr_base_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_204_getelementptr_instr_base_type_op_ctxt));
for(const auto& env2 : range) {
for(const auto& env3 : *rel_99_alloc_region) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env4 : range) {
auto range = rel_74_type_compatible->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env4[1])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_74_type_compatible_op_ctxt));
for(const auto& env5 : range) {
auto range = rel_216_type_has_size->lowerUpperRange_12(Tuple<RamDomain,2>{{ramBitCast(env5[0]), ramBitCast(RamSigned(0))}},Tuple<RamDomain,2>{{ramBitCast(env5[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env6 : range) {
if( (ramBitCast<RamDomain>(env6[1]) != ramBitCast<RamDomain>(RamSigned(0)))) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env4[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env4[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env7 : range) {
if( (ramBitCast<RamDomain>((ramBitCast<RamSigned>((ramBitCast<RamSigned>((ramBitCast<RamSigned>(env1[1]) * ramBitCast<RamSigned>(env7[1]))) / ramBitCast<RamSigned>(std::max({ramBitCast<RamSigned>(env6[1]), ramBitCast<RamSigned>(RamSigned(1)), })))) * ramBitCast<RamSigned>(env6[1]))) == ramBitCast<RamDomain>((ramBitCast<RamSigned>(env1[1]) * ramBitCast<RamSigned>(env7[1]))))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env3[0]),ramBitCast(env5[0]),ramBitCast((ramBitCast<RamSigned>((ramBitCast<RamSigned>(env1[1]) * ramBitCast<RamSigned>(env7[1]))) / ramBitCast<RamSigned>(std::max({ramBitCast<RamSigned>(env6[1]), ramBitCast<RamSigned>(RamSigned(1)), }))))}};
rel_217_pointer_index->insert(tuple,READ_OP_CONTEXT(rel_217_pointer_index_op_ctxt));
}
}
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(pointer_index(?region,?type,((?index*?declaredSize)/max(?size,1))) :- 
   getelementptr_instr_index(?insn,0,?indexOp),
   constant_to_int(?indexOp,?index),
   getelementptr_instr_base_type(?insn,?declaredType),
   _alloc_region(?region),
   ?index >= 0,
   pointer_type_has_component(?declaredType,?declaredElemType),
   pointer_type_has_component(?ptrType,?type),
   type_compatible(?ptrType,?declaredType),
   type_has_size(?type,?size),
   ?size > 0,
   type_has_size(?declaredElemType,?declaredSize),
   (((?index*?declaredSize)/max(?size,1))*?size) = (?index*?declaredSize).
in file allocations-subobjects.dl [51:1-84:50])_");
if(!(rel_74_type_compatible->empty()) && !(rel_202_getelementptr_instr_index->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_204_getelementptr_instr_base_type->empty()) && !(rel_99_alloc_region->empty()) && !(rel_104_constant_to_int->empty()) && !(rel_216_type_has_size->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_74_type_compatible_op_ctxt,rel_74_type_compatible->createContext());
CREATE_OP_CONTEXT(rel_99_alloc_region_op_ctxt,rel_99_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_202_getelementptr_instr_index_op_ctxt,rel_202_getelementptr_instr_index->createContext());
CREATE_OP_CONTEXT(rel_204_getelementptr_instr_base_type_op_ctxt,rel_204_getelementptr_instr_base_type->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_217_pointer_index_op_ctxt,rel_217_pointer_index->createContext());
auto range = rel_202_getelementptr_instr_index->lowerUpperRange_010(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_202_getelementptr_instr_index_op_ctxt));
for(const auto& env0 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_12(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast(RamSigned(0))}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_204_getelementptr_instr_base_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_204_getelementptr_instr_base_type_op_ctxt));
for(const auto& env2 : range) {
for(const auto& env3 : *rel_99_alloc_region) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env4 : range) {
for(const auto& env5 : *rel_2_pointer_type_has_component) {
if( rel_74_type_compatible->contains(Tuple<RamDomain,2>{{ramBitCast(env5[0]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_74_type_compatible_op_ctxt))) {
auto range = rel_216_type_has_size->lowerUpperRange_12(Tuple<RamDomain,2>{{ramBitCast(env5[1]), ramBitCast(RamSigned(0))}},Tuple<RamDomain,2>{{ramBitCast(env5[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env6 : range) {
if( (ramBitCast<RamDomain>(env6[1]) != ramBitCast<RamDomain>(RamSigned(0)))) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env4[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env4[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env7 : range) {
if( (ramBitCast<RamDomain>((ramBitCast<RamSigned>((ramBitCast<RamSigned>((ramBitCast<RamSigned>(env1[1]) * ramBitCast<RamSigned>(env7[1]))) / ramBitCast<RamSigned>(std::max({ramBitCast<RamSigned>(env6[1]), ramBitCast<RamSigned>(RamSigned(1)), })))) * ramBitCast<RamSigned>(env6[1]))) == ramBitCast<RamDomain>((ramBitCast<RamSigned>(env1[1]) * ramBitCast<RamSigned>(env7[1]))))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env3[0]),ramBitCast(env5[1]),ramBitCast((ramBitCast<RamSigned>((ramBitCast<RamSigned>(env1[1]) * ramBitCast<RamSigned>(env7[1]))) / ramBitCast<RamSigned>(std::max({ramBitCast<RamSigned>(env6[1]), ramBitCast<RamSigned>(RamSigned(1)), }))))}};
rel_217_pointer_index->insert(tuple,READ_OP_CONTEXT(rel_217_pointer_index_op_ctxt));
}
}
}
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(pointer_index(?region,?type,((?index*?declaredSize)/max(?size,1))) :- 
   getelementptr_constant_expression_index(?expr,0,?indexOp),
   constant_to_int(?indexOp,?index),
   _getelementptr_constant_expression_base_type(?expr,?declaredType),
   global_region(?region),
   ?index >= 0,
   pointer_type_has_component(?declaredType,?declaredElemType),
   type_compatible(?type,?declaredElemType),
   type_has_size(?type,?size),
   ?size > 0,
   type_has_size(?declaredElemType,?declaredSize),
   (((?index*?declaredSize)/max(?size,1))*?size) = (?index*?declaredSize).
in file allocations-subobjects.dl [51:1-84:50])_");
if(!(rel_74_type_compatible->empty()) && !(rel_100_getelementptr_constant_expression_index->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_103_getelementptr_constant_expression_base_type->empty()) && !(rel_96_global_region->empty()) && !(rel_104_constant_to_int->empty()) && !(rel_216_type_has_size->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_74_type_compatible_op_ctxt,rel_74_type_compatible->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_100_getelementptr_constant_expression_index_op_ctxt,rel_100_getelementptr_constant_expression_index->createContext());
CREATE_OP_CONTEXT(rel_103_getelementptr_constant_expression_base_type_op_ctxt,rel_103_getelementptr_constant_expression_base_type->createContext());
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_217_pointer_index_op_ctxt,rel_217_pointer_index->createContext());
auto range = rel_100_getelementptr_constant_expression_index->lowerUpperRange_010(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_100_getelementptr_constant_expression_index_op_ctxt));
for(const auto& env0 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_12(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast(RamSigned(0))}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_103_getelementptr_constant_expression_base_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_103_getelementptr_constant_expression_base_type_op_ctxt));
for(const auto& env2 : range) {
for(const auto& env3 : *rel_96_global_region) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env4 : range) {
auto range = rel_74_type_compatible->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env4[1])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_74_type_compatible_op_ctxt));
for(const auto& env5 : range) {
auto range = rel_216_type_has_size->lowerUpperRange_12(Tuple<RamDomain,2>{{ramBitCast(env5[0]), ramBitCast(RamSigned(0))}},Tuple<RamDomain,2>{{ramBitCast(env5[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env6 : range) {
if( (ramBitCast<RamDomain>(env6[1]) != ramBitCast<RamDomain>(RamSigned(0)))) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env4[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env4[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env7 : range) {
if( (ramBitCast<RamDomain>((ramBitCast<RamSigned>((ramBitCast<RamSigned>((ramBitCast<RamSigned>(env1[1]) * ramBitCast<RamSigned>(env7[1]))) / ramBitCast<RamSigned>(std::max({ramBitCast<RamSigned>(env6[1]), ramBitCast<RamSigned>(RamSigned(1)), })))) * ramBitCast<RamSigned>(env6[1]))) == ramBitCast<RamDomain>((ramBitCast<RamSigned>(env1[1]) * ramBitCast<RamSigned>(env7[1]))))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env3[0]),ramBitCast(env5[0]),ramBitCast((ramBitCast<RamSigned>((ramBitCast<RamSigned>(env1[1]) * ramBitCast<RamSigned>(env7[1]))) / ramBitCast<RamSigned>(std::max({ramBitCast<RamSigned>(env6[1]), ramBitCast<RamSigned>(RamSigned(1)), }))))}};
rel_217_pointer_index->insert(tuple,READ_OP_CONTEXT(rel_217_pointer_index_op_ctxt));
}
}
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(pointer_index(?region,?type,((?index*?declaredSize)/max(?size,1))) :- 
   getelementptr_constant_expression_index(?expr,0,?indexOp),
   constant_to_int(?indexOp,?index),
   _getelementptr_constant_expression_base_type(?expr,?declaredType),
   global_region(?region),
   ?index >= 0,
   pointer_type_has_component(?declaredType,?declaredElemType),
   pointer_type_has_component(?ptrType,?type),
   type_compatible(?ptrType,?declaredType),
   type_has_size(?type,?size),
   ?size > 0,
   type_has_size(?declaredElemType,?declaredSize),
   (((?index*?declaredSize)/max(?size,1))*?size) = (?index*?declaredSize).
in file allocations-subobjects.dl [51:1-84:50])_");
if(!(rel_74_type_compatible->empty()) && !(rel_100_getelementptr_constant_expression_index->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_103_getelementptr_constant_expression_base_type->empty()) && !(rel_96_global_region->empty()) && !(rel_104_constant_to_int->empty()) && !(rel_216_type_has_size->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_74_type_compatible_op_ctxt,rel_74_type_compatible->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_100_getelementptr_constant_expression_index_op_ctxt,rel_100_getelementptr_constant_expression_index->createContext());
CREATE_OP_CONTEXT(rel_103_getelementptr_constant_expression_base_type_op_ctxt,rel_103_getelementptr_constant_expression_base_type->createContext());
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_217_pointer_index_op_ctxt,rel_217_pointer_index->createContext());
auto range = rel_100_getelementptr_constant_expression_index->lowerUpperRange_010(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_100_getelementptr_constant_expression_index_op_ctxt));
for(const auto& env0 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_12(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast(RamSigned(0))}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_103_getelementptr_constant_expression_base_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_103_getelementptr_constant_expression_base_type_op_ctxt));
for(const auto& env2 : range) {
for(const auto& env3 : *rel_96_global_region) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env4 : range) {
for(const auto& env5 : *rel_2_pointer_type_has_component) {
if( rel_74_type_compatible->contains(Tuple<RamDomain,2>{{ramBitCast(env5[0]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_74_type_compatible_op_ctxt))) {
auto range = rel_216_type_has_size->lowerUpperRange_12(Tuple<RamDomain,2>{{ramBitCast(env5[1]), ramBitCast(RamSigned(0))}},Tuple<RamDomain,2>{{ramBitCast(env5[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env6 : range) {
if( (ramBitCast<RamDomain>(env6[1]) != ramBitCast<RamDomain>(RamSigned(0)))) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env4[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env4[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env7 : range) {
if( (ramBitCast<RamDomain>((ramBitCast<RamSigned>((ramBitCast<RamSigned>((ramBitCast<RamSigned>(env1[1]) * ramBitCast<RamSigned>(env7[1]))) / ramBitCast<RamSigned>(std::max({ramBitCast<RamSigned>(env6[1]), ramBitCast<RamSigned>(RamSigned(1)), })))) * ramBitCast<RamSigned>(env6[1]))) == ramBitCast<RamDomain>((ramBitCast<RamSigned>(env1[1]) * ramBitCast<RamSigned>(env7[1]))))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env3[0]),ramBitCast(env5[1]),ramBitCast((ramBitCast<RamSigned>((ramBitCast<RamSigned>(env1[1]) * ramBitCast<RamSigned>(env7[1]))) / ramBitCast<RamSigned>(std::max({ramBitCast<RamSigned>(env6[1]), ramBitCast<RamSigned>(RamSigned(1)), }))))}};
rel_217_pointer_index->insert(tuple,READ_OP_CONTEXT(rel_217_pointer_index_op_ctxt));
}
}
}
}
}
}
}
}
}
}
}
}
();}
if (pruneImdtRels) rel_71_type->purge();
if (pruneImdtRels) rel_99_alloc_region->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_103(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(pointer_offset(?region,?type,0) :- 
   pointer_index(?region,?type,0).
in file allocations-subobjects.dl [89:1-90:36])_");
if(!(rel_217_pointer_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_217_pointer_index_op_ctxt,rel_217_pointer_index->createContext());
CREATE_OP_CONTEXT(rel_218_pointer_offset_op_ctxt,rel_218_pointer_offset->createContext());
auto range = rel_217_pointer_index->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(0))}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(0))}},READ_OP_CONTEXT(rel_217_pointer_index_op_ctxt));
for(const auto& env0 : range) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(RamSigned(0))}};
rel_218_pointer_offset->insert(tuple,READ_OP_CONTEXT(rel_218_pointer_offset_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(pointer_offset(?region,?type,(?index*?size)) :- 
   pointer_index(?region,?type,?index),
   type_has_size(?type,?size).
in file allocations-subobjects.dl [92:1-94:31])_");
if(!(rel_217_pointer_index->empty()) && !(rel_216_type_has_size->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_217_pointer_index_op_ctxt,rel_217_pointer_index->createContext());
CREATE_OP_CONTEXT(rel_218_pointer_offset_op_ctxt,rel_218_pointer_offset->createContext());
for(const auto& env0 : *rel_217_pointer_index) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast((ramBitCast<RamSigned>(env0[2]) * ramBitCast<RamSigned>(env1[1])))}};
rel_218_pointer_offset->insert(tuple,READ_OP_CONTEXT(rel_218_pointer_offset_op_ctxt));
}
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_104(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(array_offset(?region,?type,(?index*?size)) :- 
   array_indices(?region,?type,?index),
   array_type_has_component(?type,?elemType),
   type_has_size(?elemType,?size).
in file allocations-subobjects.dl [124:1-127:35])_");
if(!(rel_42_array_type_has_component->empty()) && !(rel_216_type_has_size->empty()) && !(rel_213_array_indices->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_42_array_type_has_component_op_ctxt,rel_42_array_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_219_array_offset_op_ctxt,rel_219_array_offset->createContext());
for(const auto& env0 : *rel_213_array_indices) {
auto range = rel_42_array_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_42_array_type_has_component_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast((ramBitCast<RamSigned>(env0[2]) * ramBitCast<RamSigned>(env2[1])))}};
rel_219_array_offset->insert(tuple,READ_OP_CONTEXT(rel_219_array_offset_op_ctxt));
}
}
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_105(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(gep_zero_index_offset(?insn,0) :- 
   getelementptr_instr_index(?insn,0,?indexOp),
   constant_to_int(?indexOp,0).
in file field-sensitivity.dl [17:1-19:32])_");
if(!(rel_202_getelementptr_instr_index->empty()) && !(rel_104_constant_to_int->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_202_getelementptr_instr_index_op_ctxt,rel_202_getelementptr_instr_index->createContext());
CREATE_OP_CONTEXT(rel_220_gep_zero_index_offset_op_ctxt,rel_220_gep_zero_index_offset->createContext());
auto range = rel_202_getelementptr_instr_index->lowerUpperRange_010(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_202_getelementptr_instr_index_op_ctxt));
for(const auto& env0 : range) {
if( rel_104_constant_to_int->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(RamSigned(0))}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(RamSigned(0))}};
rel_220_gep_zero_index_offset->insert(tuple,READ_OP_CONTEXT(rel_220_gep_zero_index_offset_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(gep_zero_index_offset(?insn,(?index*?size)) :- 
   getelementptr_instr_index(?insn,0,?indexOp),
   constant_to_int(?indexOp,?index),
   getelementptr_instr_base_type(?insn,?ptrType),
   pointer_type_has_component(?ptrType,?type),
   type_has_size(?type,?size).
in file field-sensitivity.dl [21:1-26:31])_");
if(!(rel_104_constant_to_int->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_204_getelementptr_instr_base_type->empty()) && !(rel_216_type_has_size->empty()) && !(rel_202_getelementptr_instr_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_202_getelementptr_instr_index_op_ctxt,rel_202_getelementptr_instr_index->createContext());
CREATE_OP_CONTEXT(rel_204_getelementptr_instr_base_type_op_ctxt,rel_204_getelementptr_instr_base_type->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_220_gep_zero_index_offset_op_ctxt,rel_220_gep_zero_index_offset->createContext());
auto range = rel_202_getelementptr_instr_index->lowerUpperRange_010(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_202_getelementptr_instr_index_op_ctxt));
for(const auto& env0 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_204_getelementptr_instr_base_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_204_getelementptr_instr_base_type_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env3 : range) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env4 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast((ramBitCast<RamSigned>(env1[1]) * ramBitCast<RamSigned>(env4[1])))}};
rel_220_gep_zero_index_offset->insert(tuple,READ_OP_CONTEXT(rel_220_gep_zero_index_offset_op_ctxt));
}
}
}
}
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_106(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(empty_path_component("").
in file allocations-subobjects.dl [161:1-161:26])_");
[&](){
CREATE_OP_CONTEXT(rel_221_empty_path_component_op_ctxt,rel_221_empty_path_component->createContext());
Tuple<RamDomain,1> tuple{{ramBitCast(RamSigned(48))}};
rel_221_empty_path_component->insert(tuple,READ_OP_CONTEXT(rel_221_empty_path_component_op_ctxt));
}
();}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_107(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(path_component_at_any_index("[*]").
in file allocations-subobjects.dl [163:1-163:36])_");
[&](){
CREATE_OP_CONTEXT(rel_222_path_component_at_any_index_op_ctxt,rel_222_path_component_at_any_index->createContext());
Tuple<RamDomain,1> tuple{{ramBitCast(RamSigned(49))}};
rel_222_path_component_at_any_index->insert(tuple,READ_OP_CONTEXT(rel_222_path_component_at_any_index_op_ctxt));
}
();}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_108(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\tsize"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","alloca_instr_size.csv.gz"},{"name","alloca_instr_size"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"size\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:AllocaInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_223_alloca_instr_size);
} catch (std::exception& e) {std::cerr << "Error loading alloca_instr_size data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_109(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(external_linkage_type("external").
in file global.dl [74:27-74:61])_");
[&](){
CREATE_OP_CONTEXT(rel_224_external_linkage_type_op_ctxt,rel_224_external_linkage_type->createContext());
Tuple<RamDomain,1> tuple{{ramBitCast(RamSigned(50))}};
rel_224_external_linkage_type->insert(tuple,READ_OP_CONTEXT(rel_224_external_linkage_type_op_ctxt));
}
();}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_110(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","gv\tlink"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","global_var_linkage.csv.gz"},{"name","global_var_linkage"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"gv\", \"link\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:GlobalVariable\", \"s:LinkageType\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_225_global_var_linkage);
} catch (std::exception& e) {std::cerr << "Error loading global_var_linkage data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_111(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(typeinfo_vtable(?vt,?name) :- 
   external_linkage_type(?externalLinkage),
   global_var_linkage(?vt,?externalLinkage),
   global_var_name(?vt,?name),
   contains("class_type_info", ?name),
   contains("cxxabi", ?name).
in file virtual-tables.dl [25:1-30:30])_");
if(!(rel_225_global_var_linkage->empty()) && !(rel_165_global_var_name->empty()) && !(rel_224_external_linkage_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_165_global_var_name_op_ctxt,rel_165_global_var_name->createContext());
CREATE_OP_CONTEXT(rel_224_external_linkage_type_op_ctxt,rel_224_external_linkage_type->createContext());
CREATE_OP_CONTEXT(rel_225_global_var_linkage_op_ctxt,rel_225_global_var_linkage->createContext());
CREATE_OP_CONTEXT(rel_226_typeinfo_vtable_op_ctxt,rel_226_typeinfo_vtable->createContext());
for(const auto& env0 : *rel_224_external_linkage_type) {
auto range = rel_225_global_var_linkage->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_225_global_var_linkage_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_165_global_var_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_165_global_var_name_op_ctxt));
for(const auto& env2 : range) {
if( (symTable.decode(env2[1]).find(symTable.decode(RamSigned(51))) != std::string::npos) && (symTable.decode(env2[1]).find(symTable.decode(RamSigned(52))) != std::string::npos)) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(env2[1])}};
rel_226_typeinfo_vtable->insert(tuple,READ_OP_CONTEXT(rel_226_typeinfo_vtable_op_ctxt));
}
}
}
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_112(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(+disconnected0() :- 
   int8_type(i8),
   pointer_type_has_component(_,i8).
in file entry-points.dl [38:1-47:62])_");
if(!(rel_2_pointer_type_has_component->empty()) && rel_3_disconnected0->empty() && !(rel_1_int8_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_3_disconnected0_op_ctxt,rel_3_disconnected0->createContext());
CREATE_OP_CONTEXT(rel_1_int8_type_op_ctxt,rel_1_int8_type->createContext());
for(const auto& env0 : *rel_1_int8_type) {
if( !(rel_3_disconnected0->empty())) break;
if( !rel_2_pointer_type_has_component->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt)).empty()) {
Tuple<RamDomain,0> tuple{{}};
rel_3_disconnected0->insert(tuple,READ_OP_CONTEXT(rel_3_disconnected0_op_ctxt));
}
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_113(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(+disconnected4() :- 
   user_options("context_sensitivity",Config),
   Config = "1-callsite".
in file interface.dl [243:1-258:21])_");
if(rel_21_disconnected4->empty() && !(rel_4_user_options->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_4_user_options_op_ctxt,rel_4_user_options->createContext());
CREATE_OP_CONTEXT(rel_21_disconnected4_op_ctxt,rel_21_disconnected4->createContext());
if(rel_4_user_options->contains(Tuple<RamDomain,2>{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(33))}},READ_OP_CONTEXT(rel_4_user_options_op_ctxt))) {
Tuple<RamDomain,0> tuple{{}};
rel_21_disconnected4->insert(tuple,READ_OP_CONTEXT(rel_21_disconnected4_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_114(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","v\tname"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","variable_has_name.csv.gz"},{"name","variable_has_name"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"v\", \"name\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:Variable\", \"s:symbol\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_227_variable_has_name);
} catch (std::exception& e) {std::cerr << "Error loading variable_has_name data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_115(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\tval"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","bitcast_instr_from_operand.csv.gz"},{"name","bitcast_instr_from_operand"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"val\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:BitcastInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_228_bitcast_instr_from_operand);
} catch (std::exception& e) {std::cerr << "Error loading bitcast_instr_from_operand data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_116(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\ttype"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","bitcast_instr_to_type.csv.gz"},{"name","bitcast_instr_to_type"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:BitcastInstruction\", \"s:Type\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_229_bitcast_instr_to_type);
} catch (std::exception& e) {std::cerr << "Error loading bitcast_instr_to_type data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_117(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","v0\tv1"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","variable_in_func_name.csv.gz"},{"name","variable_in_func_name"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"v0\", \"v1\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:Variable\", \"s:FunctionName\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_230_variable_in_func_name);
} catch (std::exception& e) {std::cerr << "Error loading variable_in_func_name data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_118(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(variable_in_func(Variable,Function) :- 
   variable_in_func_name(Variable,FuncName),
   func_name(Function,FuncName).
in file operand.dl [31:1-33:34])_");
if(!(rel_230_variable_in_func_name->empty()) && !(rel_138_func_name->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_230_variable_in_func_name_op_ctxt,rel_230_variable_in_func_name->createContext());
CREATE_OP_CONTEXT(rel_231_variable_in_func_op_ctxt,rel_231_variable_in_func->createContext());
for(const auto& env0 : *rel_230_variable_in_func_name) {
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[1])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[0])}};
rel_231_variable_in_func->insert(tuple,READ_OP_CONTEXT(rel_231_variable_in_func_op_ctxt));
}
}
}
();}
if (pruneImdtRels) rel_230_variable_in_func_name->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_119(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?index"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_arg_alloc.csv.gz"},{"name","signature_arg_alloc"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"?func\", \"?index\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_232_signature_arg_alloc);
} catch (std::exception& e) {std::cerr << "Error loading signature_arg_alloc data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_120(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?index"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_arg_alloc_once.csv.gz"},{"name","signature_arg_alloc_once"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"?func\", \"?index\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_233_signature_arg_alloc_once);
} catch (std::exception& e) {std::cerr << "Error loading signature_arg_alloc_once data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_121(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","func\tindex\tparam"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","func_param.csv.gz"},{"name","func_param"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"func\", \"index\", \"param\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:Function\", \"i:ArgumentIndex\", \"s:Variable\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_234_func_param);
} catch (std::exception& e) {std::cerr << "Error loading func_param data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_122(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(argv_var_points_to(aCtx,argvAlloc,mainCtx,argvVar) :- 
   main_func(main),
   argv_alloc(argvAlloc),
   func_param(main,1,argvVar),
   empty_alloc_context(aCtx),
   main_context(mainCtx).
in file entry-points.dl [50:1-55:25])_");
if(!(rel_146_argv_alloc->empty()) && !(rel_182_empty_alloc_context->empty()) && !(rel_234_func_param->empty()) && !(rel_184_main_context->empty()) && !(rel_157_main_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_146_argv_alloc_op_ctxt,rel_146_argv_alloc->createContext());
CREATE_OP_CONTEXT(rel_157_main_func_op_ctxt,rel_157_main_func->createContext());
CREATE_OP_CONTEXT(rel_182_empty_alloc_context_op_ctxt,rel_182_empty_alloc_context->createContext());
CREATE_OP_CONTEXT(rel_184_main_context_op_ctxt,rel_184_main_context->createContext());
CREATE_OP_CONTEXT(rel_234_func_param_op_ctxt,rel_234_func_param->createContext());
CREATE_OP_CONTEXT(rel_235_argv_var_points_to_op_ctxt,rel_235_argv_var_points_to->createContext());
for(const auto& env0 : *rel_157_main_func) {
for(const auto& env1 : *rel_146_argv_alloc) {
auto range = rel_234_func_param->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(RamSigned(1)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(RamSigned(1)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_234_func_param_op_ctxt));
for(const auto& env2 : range) {
for(const auto& env3 : *rel_182_empty_alloc_context) {
for(const auto& env4 : *rel_184_main_context) {
Tuple<RamDomain,4> tuple{{ramBitCast(env3[0]),ramBitCast(env1[0]),ramBitCast(env4[0]),ramBitCast(env2[2])}};
rel_235_argv_var_points_to->insert(tuple,READ_OP_CONTEXT(rel_235_argv_var_points_to_op_ctxt));
}
}
}
}
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_123(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","phi_instr.csv.gz"},{"name","phi_instr"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"instr\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:PhiInstruction\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_236_phi_instr);
} catch (std::exception& e) {std::cerr << "Error loading phi_instr data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_124(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(+disconnected41() :- 
   user_options("context_sensitivity",_).
in file signatures.dl [208:3-225:35])_");
if(rel_22_disconnected41->empty() && !(rel_4_user_options->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_4_user_options_op_ctxt,rel_4_user_options->createContext());
CREATE_OP_CONTEXT(rel_22_disconnected41_op_ctxt,rel_22_disconnected41->createContext());
if(!rel_4_user_options->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(RamSigned(1)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(RamSigned(1)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_4_user_options_op_ctxt)).empty()) {
Tuple<RamDomain,0> tuple{{}};
rel_22_disconnected41->insert(tuple,READ_OP_CONTEXT(rel_22_disconnected41_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_125(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","v0\tv1\tv2"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","phi_instr_pair_label.csv.gz"},{"name","phi_instr_pair_label"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"v0\", \"v1\", \"v2\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:symbol\", \"i:number\", \"s:symbol\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_237_phi_instr_pair_label);
} catch (std::exception& e) {std::cerr << "Error loading phi_instr_pair_label data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_126(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","v0\tv1\tv2"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","phi_instr_pair_value.csv.gz"},{"name","phi_instr_pair_value"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"v0\", \"v1\", \"v2\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:symbol\", \"i:number\", \"s:symbol\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_238_phi_instr_pair_value);
} catch (std::exception& e) {std::cerr << "Error loading phi_instr_pair_value data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_127(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(phi_instr_pair(v0,v1,v2,v3) :- 
   phi_instr_pair_value(v0,v1,v2),
   phi_instr(v0),
   operand(v2),
   phi_instr_pair_label(v0,v1,v3),
   variable(v3).
in file phi-instr.dl [15:1-20:17])_");
if(!(rel_236_phi_instr->empty()) && !(rel_237_phi_instr_pair_label->empty()) && !(rel_135_operand->empty()) && !(rel_36_variable->empty()) && !(rel_238_phi_instr_pair_value->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_36_variable_op_ctxt,rel_36_variable->createContext());
CREATE_OP_CONTEXT(rel_135_operand_op_ctxt,rel_135_operand->createContext());
CREATE_OP_CONTEXT(rel_236_phi_instr_op_ctxt,rel_236_phi_instr->createContext());
CREATE_OP_CONTEXT(rel_237_phi_instr_pair_label_op_ctxt,rel_237_phi_instr_pair_label->createContext());
CREATE_OP_CONTEXT(rel_238_phi_instr_pair_value_op_ctxt,rel_238_phi_instr_pair_value->createContext());
CREATE_OP_CONTEXT(rel_239_phi_instr_pair_op_ctxt,rel_239_phi_instr_pair->createContext());
for(const auto& env0 : *rel_238_phi_instr_pair_value) {
if( rel_135_operand->contains(Tuple<RamDomain,1>{{ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_135_operand_op_ctxt)) && rel_236_phi_instr->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_236_phi_instr_op_ctxt))) {
auto range = rel_237_phi_instr_pair_label->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_237_phi_instr_pair_label_op_ctxt));
for(const auto& env1 : range) {
if( rel_36_variable->contains(Tuple<RamDomain,1>{{ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_36_variable_op_ctxt))) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env1[2])}};
rel_239_phi_instr_pair->insert(tuple,READ_OP_CONTEXT(rel_239_phi_instr_pair_op_ctxt));
}
}
}
}
}
();}
if (pruneImdtRels) rel_36_variable->purge();
if (pruneImdtRels) rel_135_operand->purge();
if (pruneImdtRels) rel_236_phi_instr->purge();
if (pruneImdtRels) rel_237_phi_instr_pair_label->purge();
if (pruneImdtRels) rel_238_phi_instr_pair_value->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_128(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\tval"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","ptrtoint_instr_from_operand.csv.gz"},{"name","ptrtoint_instr_from_operand"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"val\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:PtrToIntInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_240_ptrtoint_instr_from_operand);
} catch (std::exception& e) {std::cerr << "Error loading ptrtoint_instr_from_operand data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_129(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","select_instr.csv.gz"},{"name","select_instr"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"instr\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:SelectInstruction\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_241_select_instr);
} catch (std::exception& e) {std::cerr << "Error loading select_instr data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_130(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\top"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","select_instr_first_operand.csv.gz"},{"name","select_instr_first_operand"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"op\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:SelectInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_242_select_instr_first_operand);
} catch (std::exception& e) {std::cerr << "Error loading select_instr_first_operand data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_131(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\top"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","select_instr_second_operand.csv.gz"},{"name","select_instr_second_operand"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"op\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:SelectInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_243_select_instr_second_operand);
} catch (std::exception& e) {std::cerr << "Error loading select_instr_second_operand data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_132(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","inttoptr_instr.csv.gz"},{"name","inttoptr_instr"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"instr\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:IntToPtrInstruction\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_244_inttoptr_instr);
} catch (std::exception& e) {std::cerr << "Error loading inttoptr_instr data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_133(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\tpointer"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","load_instr_address.csv.gz"},{"name","load_instr_address"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"pointer\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:LoadInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_245_load_instr_address);
} catch (std::exception& e) {std::cerr << "Error loading load_instr_address data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_134(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\tval"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","ret_instr_operand.csv.gz"},{"name","ret_instr_operand"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"val\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:RetInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_246_ret_instr_operand);
} catch (std::exception& e) {std::cerr << "Error loading ret_instr_operand data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_135(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(+disconnected6() :- 
   user_options("context_sensitivity",Config),
   Config = "2-callsite".
in file interface.dl [243:1-258:21])_");
if(rel_23_disconnected6->empty() && !(rel_4_user_options->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_4_user_options_op_ctxt,rel_4_user_options->createContext());
CREATE_OP_CONTEXT(rel_23_disconnected6_op_ctxt,rel_23_disconnected6->createContext());
if(rel_4_user_options->contains(Tuple<RamDomain,2>{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(34))}},READ_OP_CONTEXT(rel_4_user_options_op_ctxt))) {
Tuple<RamDomain,0> tuple{{}};
rel_23_disconnected6->insert(tuple,READ_OP_CONTEXT(rel_23_disconnected6_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_136(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(func_returns_value(?retValue,?inFunction) :- 
   ret_instr_operand(?retInsn,?retValue),
   instr_func(?retInsn,?inFunction).
in file interprocedural.dl [177:1-179:37])_");
if(!(rel_246_ret_instr_operand->empty()) && !(rel_175_instr_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_246_ret_instr_operand_op_ctxt,rel_246_ret_instr_operand->createContext());
CREATE_OP_CONTEXT(rel_247_func_returns_value_op_ctxt,rel_247_func_returns_value->createContext());
for(const auto& env0 : *rel_246_ret_instr_operand) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[1]),ramBitCast(env1[1])}};
rel_247_func_returns_value->insert(tuple,READ_OP_CONTEXT(rel_247_func_returns_value_op_ctxt));
}
}
}
();}
if (pruneImdtRels) rel_246_ret_instr_operand->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_137(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","va_arg_instr.csv.gz"},{"name","va_arg_instr"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"instr\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:VaArgInstruction\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_248_va_arg_instr);
} catch (std::exception& e) {std::cerr << "Error loading va_arg_instr data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_138(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\ttype"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","va_arg_instr_type.csv.gz"},{"name","va_arg_instr_type"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"type\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:VaArgInstruction\", \"s:Type\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_249_va_arg_instr_type);
} catch (std::exception& e) {std::cerr << "Error loading va_arg_instr_type data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_139(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(subset.interp_assignment._va_arg_target(?toVar,?argType,?callee) :- 
   va_arg_instr(?vAArgInstr),
   va_arg_instr_type(?vAArgInstr,?argType),
   instr_assigns_to(?vAArgInstr,?toVar),
   instr_func(?vAArgInstr,?callee).
in file interprocedural.dl [225:3-229:38])_");
if(!(rel_249_va_arg_instr_type->empty()) && !(rel_173_instr_assigns_to->empty()) && !(rel_248_va_arg_instr->empty()) && !(rel_175_instr_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt,rel_173_instr_assigns_to->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_248_va_arg_instr_op_ctxt,rel_248_va_arg_instr->createContext());
CREATE_OP_CONTEXT(rel_249_va_arg_instr_type_op_ctxt,rel_249_va_arg_instr_type->createContext());
CREATE_OP_CONTEXT(rel_250_subset_interp_assignment_va_arg_target_op_ctxt,rel_250_subset_interp_assignment_va_arg_target->createContext());
for(const auto& env0 : *rel_248_va_arg_instr) {
auto range = rel_249_va_arg_instr_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_249_va_arg_instr_type_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_173_instr_assigns_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,3> tuple{{ramBitCast(env2[1]),ramBitCast(env1[1]),ramBitCast(env3[1])}};
rel_250_subset_interp_assignment_va_arg_target->insert(tuple,READ_OP_CONTEXT(rel_250_subset_interp_assignment_va_arg_target_op_ctxt));
}
}
}
}
}
();}
if (pruneImdtRels) rel_248_va_arg_instr->purge();
if (pruneImdtRels) rel_249_va_arg_instr_type->purge();
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_140(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","c\ti\tic"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","constant_struct_index.csv.gz"},{"name","constant_struct_index"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"c\", \"i\", \"ic\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:ConstantStruct\", \"i:number\", \"s:Constant\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_251_constant_struct_index);
} catch (std::exception& e) {std::cerr << "Error loading constant_struct_index data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_141(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","gv\tinit"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","global_var_initializer.csv.gz"},{"name","global_var_initializer"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"gv\", \"init\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:GlobalVariable\", \"s:Constant\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_252_global_var_initializer);
} catch (std::exception& e) {std::cerr << "Error loading global_var_initializer data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_142(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\tpointer"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","store_instr_address.csv.gz"},{"name","store_instr_address"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"pointer\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:StoreInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_253_store_instr_address);
} catch (std::exception& e) {std::cerr << "Error loading store_instr_address data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_143(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\tvalue"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","store_instr_value.csv.gz"},{"name","store_instr_value"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"value\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:StoreInstruction\", \"s:Operand\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_254_store_instr_value);
} catch (std::exception& e) {std::cerr << "Error loading store_instr_value data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_144(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?index1\t?index2"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_arg_memcpy_arg.csv.gz"},{"name","signature_arg_memcpy_arg"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"?func\", \"?index1\", \"?index2\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\", \"i:ArgumentIndex\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_255_signature_arg_memcpy_arg);
} catch (std::exception& e) {std::cerr << "Error loading signature_arg_memcpy_arg data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_145(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?index1\t?index2"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_arg_memcpy_arg_reachable.csv.gz"},{"name","signature_arg_memcpy_arg_reachable"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"?func\", \"?index1\", \"?index2\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\", \"i:ArgumentIndex\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_256_signature_arg_memcpy_arg_reachable);
} catch (std::exception& e) {std::cerr << "Error loading signature_arg_memcpy_arg_reachable data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_146(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(+disconnected8() :- 
   user_options("context_sensitivity",Config),
   Config = "3-callsite".
in file interface.dl [243:1-258:21])_");
if(rel_24_disconnected8->empty() && !(rel_4_user_options->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_4_user_options_op_ctxt,rel_4_user_options->createContext());
CREATE_OP_CONTEXT(rel_24_disconnected8_op_ctxt,rel_24_disconnected8->createContext());
if(rel_4_user_options->contains(Tuple<RamDomain,2>{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(35))}},READ_OP_CONTEXT(rel_4_user_options_op_ctxt))) {
Tuple<RamDomain,0> tuple{{}};
rel_24_disconnected8->insert(tuple,READ_OP_CONTEXT(rel_24_disconnected8_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_147(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?index\t?global"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_arg_memcpy_global.csv.gz"},{"name","signature_arg_memcpy_global"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"?func\", \"?index\", \"?global\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\", \"s:GlobalVarName\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_257_signature_arg_memcpy_global);
} catch (std::exception& e) {std::cerr << "Error loading signature_arg_memcpy_global data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_148(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?index\t?global"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_arg_memcpy_global_reachable.csv.gz"},{"name","signature_arg_memcpy_global_reachable"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"?func\", \"?index\", \"?global\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\", \"s:GlobalVarName\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_258_signature_arg_memcpy_global_reachable);
} catch (std::exception& e) {std::cerr << "Error loading signature_arg_memcpy_global_reachable data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_149(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?global\t?index"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_global_memcpy_arg.csv.gz"},{"name","signature_global_memcpy_arg"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"?func\", \"?global\", \"?index\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:FunctionName\", \"s:GlobalVarName\", \"i:ArgumentIndex\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_259_signature_global_memcpy_arg);
} catch (std::exception& e) {std::cerr << "Error loading signature_global_memcpy_arg data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_150(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?global\t?index"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_global_memcpy_arg_reachable.csv.gz"},{"name","signature_global_memcpy_arg_reachable"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"?func\", \"?global\", \"?index\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:FunctionName\", \"s:GlobalVarName\", \"i:ArgumentIndex\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_260_signature_global_memcpy_arg_reachable);
} catch (std::exception& e) {std::cerr << "Error loading signature_global_memcpy_arg_reachable data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_151(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?index"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_return_aliases_arg_reachable.csv.gz"},{"name","signature_return_aliases_arg_reachable"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"?func\", \"?index\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_261_signature_return_aliases_arg_reachable);
} catch (std::exception& e) {std::cerr << "Error loading signature_return_aliases_arg_reachable data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_152(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?global"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_return_aliases_global_reachable.csv.gz"},{"name","signature_return_aliases_global_reachable"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"?func\", \"?global\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionName\", \"s:GlobalVarName\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_262_signature_return_aliases_global_reachable);
} catch (std::exception& e) {std::cerr << "Error loading signature_return_aliases_global_reachable data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_153(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","type\tindex\toffset"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","struct_type_field_offset.csv.gz"},{"name","struct_type_field_offset"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"type\", \"index\", \"offset\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:StructType\", \"i:FieldIndex\", \"i:SubregionOffset\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_263_struct_type_field_offset);
} catch (std::exception& e) {std::cerr << "Error loading struct_type_field_offset data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_154(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?index\t?global"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_arg_points_to_global.csv.gz"},{"name","signature_arg_points_to_global"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 3, \"params\": [\"?func\", \"?index\", \"?global\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 3, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\", \"s:GlobalVarName\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_264_signature_arg_points_to_global);
} catch (std::exception& e) {std::cerr << "Error loading signature_arg_points_to_global data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_155(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(unknown_location("*unknown*").
in file allocations-decl.dl [111:1-111:31])_");
[&](){
CREATE_OP_CONTEXT(rel_265_unknown_location_op_ctxt,rel_265_unknown_location->createContext());
Tuple<RamDomain,1> tuple{{ramBitCast(RamSigned(53))}};
rel_265_unknown_location->insert(tuple,READ_OP_CONTEXT(rel_265_unknown_location_op_ctxt));
}
();}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_156(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","instr\ttotal"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","getelementptr_instr_nindices.csv.gz"},{"name","getelementptr_instr_nindices"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"instr\", \"total\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:GetElementPtrInstruction\", \"i:number\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_266_getelementptr_instr_nindices);
} catch (std::exception& e) {std::cerr << "Error loading getelementptr_instr_nindices data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_157(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(insensitive() :- 
   user_options("context_sensitivity","insensitive").
in file interface.dl [23:1-23:69])_");
if(rel_25_insensitive->empty() && !(rel_4_user_options->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_4_user_options_op_ctxt,rel_4_user_options->createContext());
CREATE_OP_CONTEXT(rel_25_insensitive_op_ctxt,rel_25_insensitive->createContext());
if(rel_4_user_options->contains(Tuple<RamDomain,2>{{ramBitCast(RamSigned(1)),ramBitCast(RamSigned(25))}},READ_OP_CONTEXT(rel_4_user_options_op_ctxt))) {
Tuple<RamDomain,0> tuple{{}};
rel_25_insensitive->insert(tuple,READ_OP_CONTEXT(rel_25_insensitive_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_158(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(null_location("*null*").
in file allocations-decl.dl [113:1-113:25])_");
[&](){
CREATE_OP_CONTEXT(rel_267_null_location_op_ctxt,rel_267_null_location->createContext());
Tuple<RamDomain,1> tuple{{ramBitCast(RamSigned(54))}};
rel_267_null_location->insert(tuple,READ_OP_CONTEXT(rel_267_null_location_op_ctxt));
}
();}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_159(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(non_allocation(?alloc) :- 
   unknown_location(?alloc).
in file allocations-decl.dl [107:1-109:26])_");
if(!(rel_265_unknown_location->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_265_unknown_location_op_ctxt,rel_265_unknown_location->createContext());
CREATE_OP_CONTEXT(rel_268_non_allocation_op_ctxt,rel_268_non_allocation->createContext());
for(const auto& env0 : *rel_265_unknown_location) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_268_non_allocation->insert(tuple,READ_OP_CONTEXT(rel_268_non_allocation_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(non_allocation(?alloc) :- 
   null_location(?alloc).
in file allocations-decl.dl [107:1-109:26])_");
if(!(rel_267_null_location->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_267_null_location_op_ctxt,rel_267_null_location->createContext());
CREATE_OP_CONTEXT(rel_268_non_allocation_op_ctxt,rel_268_non_allocation->createContext());
for(const auto& env0 : *rel_267_null_location) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_268_non_allocation->insert(tuple,READ_OP_CONTEXT(rel_268_non_allocation_op_ctxt));
}
}
();}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_160(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_return_alloc.csv.gz"},{"name","signature_return_alloc"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"?func\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:FunctionName\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_269_signature_return_alloc);
} catch (std::exception& e) {std::cerr << "Error loading signature_return_alloc data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_161(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_return_alloc_once.csv.gz"},{"name","signature_return_alloc_once"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 1, \"params\": [\"?func\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 1, \"types\": [\"s:FunctionName\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_270_signature_return_alloc_once);
} catch (std::exception& e) {std::cerr << "Error loading signature_return_alloc_once data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_162(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?index"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_return_aliases_arg.csv.gz"},{"name","signature_return_aliases_arg"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"?func\", \"?index\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionName\", \"i:ArgumentIndex\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_271_signature_return_aliases_arg);
} catch (std::exception& e) {std::cerr << "Error loading signature_return_aliases_arg data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_163(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?global"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_return_aliases_global.csv.gz"},{"name","signature_return_aliases_global"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"?func\", \"?global\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionName\", \"s:GlobalVarName\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_272_signature_return_aliases_global);
} catch (std::exception& e) {std::cerr << "Error loading signature_return_aliases_global data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_164(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","?func\t?global"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","signature_return_points_to_global.csv.gz"},{"name","signature_return_points_to_global"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"?func\", \"?global\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:FunctionName\", \"s:GlobalVarName\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_273_signature_return_points_to_global);
} catch (std::exception& e) {std::cerr << "Error loading signature_return_points_to_global data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_165(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","cexpr\tsize"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","getelementptr_constant_expression_nindices.csv.gz"},{"name","getelementptr_constant_expression_nindices"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"cexpr\", \"size\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:GetElementPtrConstantExpression\", \"i:number\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_274_getelementptr_constant_expression_nindices);
} catch (std::exception& e) {std::cerr << "Error loading getelementptr_constant_expression_nindices data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_166(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
if (performIO) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"attributeNames","cexpr\tval"},{"auxArity","0"},{"delimiter","\t"},{"fact-dir","."},{"filename","ptrtoint_constant_expression_from.csv.gz"},{"name","ptrtoint_constant_expression_from"},{"operation","input"},{"params","{\"records\": {\"Context\": {\"arity\": 2, \"params\": [\"head\", \"tail\"]}}, \"relation\": {\"arity\": 2, \"params\": [\"cexpr\", \"val\"]}}"},{"types","{\"ADTs\": {}, \"records\": {\"r:Context\": {\"arity\": 2, \"types\": [\"s:ContextItem\", \"r:Context\"]}}, \"relation\": {\"arity\": 2, \"types\": [\"s:IntToPtrConstantExpression\", \"s:Constant\"]}}"}});
if (!inputDirectory.empty()) {directiveMap["fact-dir"] = inputDirectory;}
IOSystem::getInstance().getReader(directiveMap, symTable, recordTable)->readAll(*rel_275_ptrtoint_constant_expression_from);
} catch (std::exception& e) {std::cerr << "Error loading ptrtoint_constant_expression_from data: " << e.what() << '\n';}
}
}
#ifdef _MSC_VER
#pragma warning(default: 4100)
#endif // _MSC_VER
#ifdef _MSC_VER
#pragma warning(disable: 4100)
#endif // _MSC_VER
void subroutine_167(const std::vector<RamDomain>& args, std::vector<RamDomain>& ret) {
signalHandler->setMsg(R"_(basic_allocation(argvAlloc) :- 
   argv_alloc(argvAlloc).
in file entry-points.dl [24:1-24:54])_");
if(!(rel_146_argv_alloc->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_146_argv_alloc_op_ctxt,rel_146_argv_alloc->createContext());
CREATE_OP_CONTEXT(rel_300_basic_allocation_op_ctxt,rel_300_basic_allocation->createContext());
for(const auto& env0 : *rel_146_argv_alloc) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_300_basic_allocation->insert(tuple,READ_OP_CONTEXT(rel_300_basic_allocation_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(basic_allocation(?alloc) :- 
   global_allocation(?alloc).
in file allocations-decl.dl [26:1-30:32])_");
if(!(rel_168_global_allocation->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_168_global_allocation_op_ctxt,rel_168_global_allocation->createContext());
CREATE_OP_CONTEXT(rel_300_basic_allocation_op_ctxt,rel_300_basic_allocation->createContext());
for(const auto& env0 : *rel_168_global_allocation) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_300_basic_allocation->insert(tuple,READ_OP_CONTEXT(rel_300_basic_allocation_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(ptr_compatible_allocation(?alloc) :- 
   global_allocation_by_variable(?globalVar,?alloc),
   !global_var_constant(?globalVar).
in file allocations-decl.dl [88:1-90:38])_");
if(!(rel_166_global_allocation_by_variable->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_126_global_var_constant_op_ctxt,rel_126_global_var_constant->createContext());
CREATE_OP_CONTEXT(rel_166_global_allocation_by_variable_op_ctxt,rel_166_global_allocation_by_variable->createContext());
CREATE_OP_CONTEXT(rel_318_ptr_compatible_allocation_op_ctxt,rel_318_ptr_compatible_allocation->createContext());
for(const auto& env0 : *rel_166_global_allocation_by_variable) {
if( !(rel_126_global_var_constant->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_126_global_var_constant_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[1])}};
rel_318_ptr_compatible_allocation->insert(tuple,READ_OP_CONTEXT(rel_318_ptr_compatible_allocation_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(static_allocation_type(argvAlloc,i8PtrPtrType) :- 
   int8_type(i8),
   argv_alloc(argvAlloc),
   pointer_type_has_component(i8PtrType,i8),
   pointer_type_has_component(i8PtrPtrType,i8PtrType).
in file entry-points.dl [29:1-33:55])_");
if(!(rel_1_int8_type->empty()) && !(rel_146_argv_alloc->empty()) && !(rel_2_pointer_type_has_component->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_1_int8_type_op_ctxt,rel_1_int8_type->createContext());
CREATE_OP_CONTEXT(rel_146_argv_alloc_op_ctxt,rel_146_argv_alloc->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
for(const auto& env0 : *rel_1_int8_type) {
for(const auto& env1 : *rel_146_argv_alloc) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env2[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env2[0])}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(env3[0])}};
rel_321_static_allocation_type->insert(tuple,READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(static_allocation_type(?alloc,?type) :- 
   global_allocation_by_func(?func,?alloc),
   func_ty(?func,?type).
in file allocations-globals.dl [35:1-37:26])_");
if(!(rel_154_global_allocation_by_func->empty()) && !(rel_158_func_ty->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_154_global_allocation_by_func_op_ctxt,rel_154_global_allocation_by_func->createContext());
CREATE_OP_CONTEXT(rel_158_func_ty_op_ctxt,rel_158_func_ty->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
for(const auto& env0 : *rel_154_global_allocation_by_func) {
auto range = rel_158_func_ty->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_158_func_ty_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[1]),ramBitCast(env1[1])}};
rel_321_static_allocation_type->insert(tuple,READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(static_allocation_type(?alloc,?type) :- 
   global_allocation_by_variable(?gVar,?alloc),
   global_var_type(?gVar,?type).
in file allocations-globals.dl [39:1-41:34])_");
if(!(rel_166_global_allocation_by_variable->empty()) && !(rel_169_global_var_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_166_global_allocation_by_variable_op_ctxt,rel_166_global_allocation_by_variable->createContext());
CREATE_OP_CONTEXT(rel_169_global_var_type_op_ctxt,rel_169_global_var_type->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
for(const auto& env0 : *rel_166_global_allocation_by_variable) {
auto range = rel_169_global_var_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_169_global_var_type_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[1]),ramBitCast(env1[1])}};
rel_321_static_allocation_type->insert(tuple,READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(dynamically_sized_alloc(argvAlloc) :- 
   argv_alloc(argvAlloc).
in file entry-points.dl [25:1-25:61])_");
if(!(rel_146_argv_alloc->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_146_argv_alloc_op_ctxt,rel_146_argv_alloc->createContext());
CREATE_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt,rel_327_dynamically_sized_alloc->createContext());
for(const auto& env0 : *rel_146_argv_alloc) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_327_dynamically_sized_alloc->insert(tuple,READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(dynamically_sized_alloc(?alloc) :- 
   external_linkage_type(?externalLinkage),
   global_var_linkage(?globalVar,?externalLinkage),
   global_allocation_by_variable(?globalVar,?alloc).
in file allocations-sizes.dl [24:1-27:53])_");
if(!(rel_225_global_var_linkage->empty()) && !(rel_166_global_allocation_by_variable->empty()) && !(rel_224_external_linkage_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_166_global_allocation_by_variable_op_ctxt,rel_166_global_allocation_by_variable->createContext());
CREATE_OP_CONTEXT(rel_224_external_linkage_type_op_ctxt,rel_224_external_linkage_type->createContext());
CREATE_OP_CONTEXT(rel_225_global_var_linkage_op_ctxt,rel_225_global_var_linkage->createContext());
CREATE_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt,rel_327_dynamically_sized_alloc->createContext());
for(const auto& env0 : *rel_224_external_linkage_type) {
auto range = rel_225_global_var_linkage->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_225_global_var_linkage_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_166_global_allocation_by_variable->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_166_global_allocation_by_variable_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,1> tuple{{ramBitCast(env2[1])}};
rel_327_dynamically_sized_alloc->insert(tuple,READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(path_component(?component) :- 
   empty_path_component(?component).
in file allocations-subobjects.dl [165:1-165:64])_");
if(!(rel_221_empty_path_component->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_221_empty_path_component_op_ctxt,rel_221_empty_path_component->createContext());
CREATE_OP_CONTEXT(rel_330_path_component_op_ctxt,rel_330_path_component->createContext());
for(const auto& env0 : *rel_221_empty_path_component) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_330_path_component->insert(tuple,READ_OP_CONTEXT(rel_330_path_component_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(path_component(?component) :- 
   path_component_at_any_index(?component).
in file allocations-subobjects.dl [168:1-168:71])_");
if(!(rel_222_path_component_at_any_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_222_path_component_at_any_index_op_ctxt,rel_222_path_component_at_any_index->createContext());
CREATE_OP_CONTEXT(rel_330_path_component_op_ctxt,rel_330_path_component->createContext());
for(const auto& env0 : *rel_222_path_component_at_any_index) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_330_path_component->insert(tuple,READ_OP_CONTEXT(rel_330_path_component_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(initialized_by_constant(?baseAlloc,?init) :- 
   global_var_initializer(?var,?init),
   global_allocation_by_variable(?var,?baseAlloc).
in file constant-init.dl [5:1-7:52])_");
if(!(rel_252_global_var_initializer->empty()) && !(rel_166_global_allocation_by_variable->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_166_global_allocation_by_variable_op_ctxt,rel_166_global_allocation_by_variable->createContext());
CREATE_OP_CONTEXT(rel_252_global_var_initializer_op_ctxt,rel_252_global_var_initializer->createContext());
CREATE_OP_CONTEXT(rel_342_initialized_by_constant_op_ctxt,rel_342_initialized_by_constant->createContext());
for(const auto& env0 : *rel_252_global_var_initializer) {
auto range = rel_166_global_allocation_by_variable->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_166_global_allocation_by_variable_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[1]),ramBitCast(env0[1])}};
rel_342_initialized_by_constant->insert(tuple,READ_OP_CONTEXT(rel_342_initialized_by_constant_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(constant_points_to(?constant,?unknown) :- 
   inttoptr_constant_expression(?constant),
   unknown_location(?unknown).
in file constant-exprs.dl [18:1-20:31])_");
if(!(rel_120_inttoptr_constant_expression->empty()) && !(rel_265_unknown_location->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_120_inttoptr_constant_expression_op_ctxt,rel_120_inttoptr_constant_expression->createContext());
CREATE_OP_CONTEXT(rel_265_unknown_location_op_ctxt,rel_265_unknown_location->createContext());
CREATE_OP_CONTEXT(rel_357_constant_points_to_op_ctxt,rel_357_constant_points_to->createContext());
for(const auto& env0 : *rel_120_inttoptr_constant_expression) {
for(const auto& env1 : *rel_265_unknown_location) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[0])}};
rel_357_constant_points_to->insert(tuple,READ_OP_CONTEXT(rel_357_constant_points_to_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(constant_points_to(?constant,?null) :- 
   nullptr_constant(?constant),
   null_location(?null).
in file constant-points-to.dl [15:1-17:25])_");
if(!(rel_129_nullptr_constant->empty()) && !(rel_267_null_location->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_129_nullptr_constant_op_ctxt,rel_129_nullptr_constant->createContext());
CREATE_OP_CONTEXT(rel_267_null_location_op_ctxt,rel_267_null_location->createContext());
CREATE_OP_CONTEXT(rel_357_constant_points_to_op_ctxt,rel_357_constant_points_to->createContext());
for(const auto& env0 : *rel_129_nullptr_constant) {
for(const auto& env1 : *rel_267_null_location) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[0])}};
rel_357_constant_points_to->insert(tuple,READ_OP_CONTEXT(rel_357_constant_points_to_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(constant_points_to(?constant,?alloc) :- 
   global_var_constant_name(?constant,?name),
   global_var_name(?gVar,?name),
   global_allocation_by_variable(?gVar,?alloc).
in file constant-points-to.dl [23:1-26:49])_");
if(!(rel_165_global_var_name->empty()) && !(rel_166_global_allocation_by_variable->empty()) && !(rel_197_global_var_constant_name->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_165_global_var_name_op_ctxt,rel_165_global_var_name->createContext());
CREATE_OP_CONTEXT(rel_166_global_allocation_by_variable_op_ctxt,rel_166_global_allocation_by_variable->createContext());
CREATE_OP_CONTEXT(rel_197_global_var_constant_name_op_ctxt,rel_197_global_var_constant_name->createContext());
CREATE_OP_CONTEXT(rel_357_constant_points_to_op_ctxt,rel_357_constant_points_to->createContext());
for(const auto& env0 : *rel_197_global_var_constant_name) {
auto range = rel_165_global_var_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[1])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_165_global_var_name_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_166_global_allocation_by_variable->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_166_global_allocation_by_variable_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_357_constant_points_to->insert(tuple,READ_OP_CONTEXT(rel_357_constant_points_to_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(constant_points_to(?constant,?alloc) :- 
   func_constant_fn_name(?constant,?fName),
   func_name(?func,?fName),
   global_allocation_by_func(?func,?alloc).
in file constant-points-to.dl [28:1-31:45])_");
if(!(rel_138_func_name->empty()) && !(rel_154_global_allocation_by_func->empty()) && !(rel_137_func_constant_fn_name->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_137_func_constant_fn_name_op_ctxt,rel_137_func_constant_fn_name->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_154_global_allocation_by_func_op_ctxt,rel_154_global_allocation_by_func->createContext());
CREATE_OP_CONTEXT(rel_357_constant_points_to_op_ctxt,rel_357_constant_points_to->createContext());
for(const auto& env0 : *rel_137_func_constant_fn_name) {
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[1])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_154_global_allocation_by_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_154_global_allocation_by_func_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1])}};
rel_357_constant_points_to->insert(tuple,READ_OP_CONTEXT(rel_357_constant_points_to_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(constant_points_to(?constant,?alloc) :- 
   constant_references_variable(?constant,?gVar),
   global_allocation_by_variable(?gVar,?alloc).
in file constant-points-to.dl [33:1-35:49])_");
if(!(rel_198_constant_references_variable->empty()) && !(rel_166_global_allocation_by_variable->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_166_global_allocation_by_variable_op_ctxt,rel_166_global_allocation_by_variable->createContext());
CREATE_OP_CONTEXT(rel_198_constant_references_variable_op_ctxt,rel_198_constant_references_variable->createContext());
CREATE_OP_CONTEXT(rel_357_constant_points_to_op_ctxt,rel_357_constant_points_to->createContext());
for(const auto& env0 : *rel_198_constant_references_variable) {
auto range = rel_166_global_allocation_by_variable->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_166_global_allocation_by_variable_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[1])}};
rel_357_constant_points_to->insert(tuple,READ_OP_CONTEXT(rel_357_constant_points_to_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(constant_points_to(?constant,?alloc) :- 
   constant_references_func(?constant,?func),
   global_allocation_by_func(?func,?alloc).
in file constant-points-to.dl [37:1-39:45])_");
if(!(rel_139_constant_references_func->empty()) && !(rel_154_global_allocation_by_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_139_constant_references_func_op_ctxt,rel_139_constant_references_func->createContext());
CREATE_OP_CONTEXT(rel_154_global_allocation_by_func_op_ctxt,rel_154_global_allocation_by_func->createContext());
CREATE_OP_CONTEXT(rel_357_constant_points_to_op_ctxt,rel_357_constant_points_to->createContext());
for(const auto& env0 : *rel_139_constant_references_func) {
auto range = rel_154_global_allocation_by_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_154_global_allocation_by_func_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[1])}};
rel_357_constant_points_to->insert(tuple,READ_OP_CONTEXT(rel_357_constant_points_to_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(alloc_region(?alloc,"null") :- 
   null_location(?alloc).
in file region.dl [21:1-21:55])_");
if(!(rel_267_null_location->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_267_null_location_op_ctxt,rel_267_null_location->createContext());
CREATE_OP_CONTEXT(rel_363_alloc_region_op_ctxt,rel_363_alloc_region->createContext());
for(const auto& env0 : *rel_267_null_location) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(RamSigned(55))}};
rel_363_alloc_region->insert(tuple,READ_OP_CONTEXT(rel_363_alloc_region_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(alloc_region(?alloc,"unknown") :- 
   unknown_location(?alloc).
in file region.dl [22:1-22:61])_");
if(!(rel_265_unknown_location->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_265_unknown_location_op_ctxt,rel_265_unknown_location->createContext());
CREATE_OP_CONTEXT(rel_363_alloc_region_op_ctxt,rel_363_alloc_region->createContext());
for(const auto& env0 : *rel_265_unknown_location) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(RamSigned(56))}};
rel_363_alloc_region->insert(tuple,READ_OP_CONTEXT(rel_363_alloc_region_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(alloc_region(?alloc,"heap") :- 
   argv_alloc(?alloc).
in file region.dl [23:1-23:52])_");
if(!(rel_146_argv_alloc->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_146_argv_alloc_op_ctxt,rel_146_argv_alloc->createContext());
CREATE_OP_CONTEXT(rel_363_alloc_region_op_ctxt,rel_363_alloc_region->createContext());
for(const auto& env0 : *rel_146_argv_alloc) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(RamSigned(57))}};
rel_363_alloc_region->insert(tuple,READ_OP_CONTEXT(rel_363_alloc_region_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(alloc_region(?alloc,"global") :- 
   global_allocation_by_variable(_,?alloc).
in file region.dl [28:1-28:76])_");
if(!(rel_166_global_allocation_by_variable->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_166_global_allocation_by_variable_op_ctxt,rel_166_global_allocation_by_variable->createContext());
CREATE_OP_CONTEXT(rel_363_alloc_region_op_ctxt,rel_363_alloc_region->createContext());
for(const auto& env0 : *rel_166_global_allocation_by_variable) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[1]),ramBitCast(RamSigned(58))}};
rel_363_alloc_region->insert(tuple,READ_OP_CONTEXT(rel_363_alloc_region_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(alloc_region(?alloc,as(?func, Region)) :- 
   global_allocation_by_func(?func,?alloc).
in file region.dl [32:1-35:44])_");
if(!(rel_154_global_allocation_by_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_154_global_allocation_by_func_op_ctxt,rel_154_global_allocation_by_func->createContext());
CREATE_OP_CONTEXT(rel_363_alloc_region_op_ctxt,rel_363_alloc_region->createContext());
for(const auto& env0 : *rel_154_global_allocation_by_func) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[1]),ramBitCast(env0[0])}};
rel_363_alloc_region->insert(tuple,READ_OP_CONTEXT(rel_363_alloc_region_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(context(nil).
in file interface.dl [213:1-213:14])_");
[&](){
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
Tuple<RamDomain,1> tuple{{ramBitCast(RamSigned(0))}};
rel_366_context->insert(tuple,READ_OP_CONTEXT(rel_366_context_op_ctxt));
}
();signalHandler->setMsg(R"_(context(["<<main-context>>",nil]).
in file interface.dl [216:1-219:36])_");
[&](){
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
Tuple<RamDomain,1> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(RamSigned(23))),ramBitCast(ramBitCast(RamSigned(0)))}}
))}};
rel_366_context->insert(tuple,READ_OP_CONTEXT(rel_366_context_op_ctxt));
}
();signalHandler->setMsg(R"_(context(["<<startup-context>>",nil]).
in file interface.dl [221:1-224:39])_");
[&](){
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
Tuple<RamDomain,1> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(RamSigned(24))),ramBitCast(ramBitCast(RamSigned(0)))}}
))}};
rel_366_context->insert(tuple,READ_OP_CONTEXT(rel_366_context_op_ctxt));
}
();signalHandler->setMsg(R"_(context(["<<exit_context>>",nil]).
in file interface.dl [226:1-229:36])_");
[&](){
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
Tuple<RamDomain,1> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(RamSigned(22))),ramBitCast(ramBitCast(RamSigned(0)))}}
))}};
rel_366_context->insert(tuple,READ_OP_CONTEXT(rel_366_context_op_ctxt));
}
();signalHandler->setMsg(R"_(context_depth(0,nil).
in file interface.dl [37:1-37:23])_");
[&](){
CREATE_OP_CONTEXT(rel_369_context_depth_op_ctxt,rel_369_context_depth->createContext());
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(0)),ramBitCast(RamSigned(0))}};
rel_369_context_depth->insert(tuple,READ_OP_CONTEXT(rel_369_context_depth_op_ctxt));
}
();signalHandler->setMsg(R"_(subset.callgraph.reachable_context(?ctx,?func) :- 
   !insensitive(),
   main_func(?func),
   main_context(?ctx).
in file interprocedural.dl [47:3-55:7])_");
if(!(rel_184_main_context->empty()) && rel_25_insensitive->empty() && !(rel_157_main_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_157_main_func_op_ctxt,rel_157_main_func->createContext());
CREATE_OP_CONTEXT(rel_184_main_context_op_ctxt,rel_184_main_context->createContext());
CREATE_OP_CONTEXT(rel_411_subset_callgraph_reachable_context_op_ctxt,rel_411_subset_callgraph_reachable_context->createContext());
for(const auto& env0 : *rel_157_main_func) {
for(const auto& env1 : *rel_184_main_context) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(env0[0])}};
rel_411_subset_callgraph_reachable_context->insert(tuple,READ_OP_CONTEXT(rel_411_subset_callgraph_reachable_context_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(subset.callgraph.reachable_context(?ctx,?func) :- 
   !insensitive(),
   called_at_startup(?func),
   startup_context(?ctx).
in file interprocedural.dl [47:3-55:7])_");
if(!(rel_185_startup_context->empty()) && rel_25_insensitive->empty() && !(rel_181_called_at_startup->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_181_called_at_startup_op_ctxt,rel_181_called_at_startup->createContext());
CREATE_OP_CONTEXT(rel_185_startup_context_op_ctxt,rel_185_startup_context->createContext());
CREATE_OP_CONTEXT(rel_411_subset_callgraph_reachable_context_op_ctxt,rel_411_subset_callgraph_reachable_context->createContext());
for(const auto& env0 : *rel_181_called_at_startup) {
for(const auto& env1 : *rel_185_startup_context) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(env0[0])}};
rel_411_subset_callgraph_reachable_context->insert(tuple,READ_OP_CONTEXT(rel_411_subset_callgraph_reachable_context_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(subset.callgraph.reachable_context(?ctx,?func) :- 
   insensitive(),
   empty_alloc_context(?ctx),
   main_func(?func).
in file interprocedural.dl [57:3-63:7])_");
if(!(rel_182_empty_alloc_context->empty()) && !(rel_25_insensitive->empty()) && !(rel_157_main_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_157_main_func_op_ctxt,rel_157_main_func->createContext());
CREATE_OP_CONTEXT(rel_182_empty_alloc_context_op_ctxt,rel_182_empty_alloc_context->createContext());
CREATE_OP_CONTEXT(rel_411_subset_callgraph_reachable_context_op_ctxt,rel_411_subset_callgraph_reachable_context->createContext());
for(const auto& env0 : *rel_182_empty_alloc_context) {
for(const auto& env1 : *rel_157_main_func) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[0])}};
rel_411_subset_callgraph_reachable_context->insert(tuple,READ_OP_CONTEXT(rel_411_subset_callgraph_reachable_context_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(subset.callgraph.reachable_context(?ctx,?func) :- 
   insensitive(),
   empty_alloc_context(?ctx),
   called_at_startup(?func).
in file interprocedural.dl [57:3-63:7])_");
if(!(rel_182_empty_alloc_context->empty()) && !(rel_25_insensitive->empty()) && !(rel_181_called_at_startup->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_181_called_at_startup_op_ctxt,rel_181_called_at_startup->createContext());
CREATE_OP_CONTEXT(rel_182_empty_alloc_context_op_ctxt,rel_182_empty_alloc_context->createContext());
CREATE_OP_CONTEXT(rel_411_subset_callgraph_reachable_context_op_ctxt,rel_411_subset_callgraph_reachable_context->createContext());
for(const auto& env0 : *rel_182_empty_alloc_context) {
for(const auto& env1 : *rel_181_called_at_startup) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[0])}};
rel_411_subset_callgraph_reachable_context->insert(tuple,READ_OP_CONTEXT(rel_411_subset_callgraph_reachable_context_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(subset.callgraph.reachable_context(?ctx,?func) :- 
   user_option_value("entrypoints","library"),
   empty_alloc_context(?ctx),
   func(?func).
in file core.dl [100:3-103:17])_");
if(!(rel_190_user_option_value->empty()) && !(rel_182_empty_alloc_context->empty()) && !(rel_150_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_150_func_op_ctxt,rel_150_func->createContext());
CREATE_OP_CONTEXT(rel_182_empty_alloc_context_op_ctxt,rel_182_empty_alloc_context->createContext());
CREATE_OP_CONTEXT(rel_190_user_option_value_op_ctxt,rel_190_user_option_value->createContext());
CREATE_OP_CONTEXT(rel_411_subset_callgraph_reachable_context_op_ctxt,rel_411_subset_callgraph_reachable_context->createContext());
if(rel_190_user_option_value->contains(Tuple<RamDomain,2>{{ramBitCast(RamSigned(29)),ramBitCast(RamSigned(45))}},READ_OP_CONTEXT(rel_190_user_option_value_op_ctxt))) {
for(const auto& env0 : *rel_182_empty_alloc_context) {
for(const auto& env1 : *rel_150_func) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[0])}};
rel_411_subset_callgraph_reachable_context->insert(tuple,READ_OP_CONTEXT(rel_411_subset_callgraph_reachable_context_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(subset.var_points_to(aCtx,argvAlloc,mainCtx,argvVar) :- 
   argv_var_points_to(aCtx,argvAlloc,mainCtx,argvVar).
in file core.dl [29:3-30:59])_");
if(!(rel_235_argv_var_points_to->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_235_argv_var_points_to_op_ctxt,rel_235_argv_var_points_to->createContext());
CREATE_OP_CONTEXT(rel_438_subset_var_points_to_op_ctxt,rel_438_subset_var_points_to->createContext());
for(const auto& env0 : *rel_235_argv_var_points_to) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_438_subset_var_points_to->insert(tuple,READ_OP_CONTEXT(rel_438_subset_var_points_to_op_ctxt));
}
}
();}
signalHandler->setMsg(R"_(subset.ptr_points_to(?aCtx,?unknown,?aCtx,?unknown) :- 
   empty_alloc_context(?aCtx),
   unknown_location(?unknown).
in file core.dl [74:3-76:32])_");
if(!(rel_182_empty_alloc_context->empty()) && !(rel_265_unknown_location->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_265_unknown_location_op_ctxt,rel_265_unknown_location->createContext());
CREATE_OP_CONTEXT(rel_182_empty_alloc_context_op_ctxt,rel_182_empty_alloc_context->createContext());
CREATE_OP_CONTEXT(rel_441_subset_ptr_points_to_op_ctxt,rel_441_subset_ptr_points_to->createContext());
for(const auto& env0 : *rel_182_empty_alloc_context) {
for(const auto& env1 : *rel_265_unknown_location) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env1[0]),ramBitCast(env0[0]),ramBitCast(env1[0])}};
rel_441_subset_ptr_points_to->insert(tuple,READ_OP_CONTEXT(rel_441_subset_ptr_points_to_op_ctxt));
}
}
}
();}
[&](){
CREATE_OP_CONTEXT(rel_276_subset_merge_reachable_call_op_ctxt,rel_276_subset_merge_reachable_call->createContext());
CREATE_OP_CONTEXT(rel_277_delta_subset_merge_reachable_call_op_ctxt,rel_277_delta_subset_merge_reachable_call->createContext());
for(const auto& env0 : *rel_276_subset_merge_reachable_call) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_277_delta_subset_merge_reachable_call->insert(tuple,READ_OP_CONTEXT(rel_277_delta_subset_merge_reachable_call_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_279_subset_type_indication_stack_type_indication_op_ctxt,rel_279_subset_type_indication_stack_type_indication->createContext());
CREATE_OP_CONTEXT(rel_280_delta_subset_type_indication_stack_type_indication_op_ctxt,rel_280_delta_subset_type_indication_stack_type_indication->createContext());
for(const auto& env0 : *rel_279_subset_type_indication_stack_type_indication) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_280_delta_subset_type_indication_stack_type_indication->insert(tuple,READ_OP_CONTEXT(rel_280_delta_subset_type_indication_stack_type_indication_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt,rel_282_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_283_delta_subset_merge_merge_op_ctxt,rel_283_delta_subset_merge_merge->createContext());
for(const auto& env0 : *rel_282_subset_merge_merge) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_283_delta_subset_merge_merge->insert(tuple,READ_OP_CONTEXT(rel_283_delta_subset_merge_merge_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_285_subset_stripctx_stripctx_operand_points_to_op_ctxt,rel_285_subset_stripctx_stripctx_operand_points_to->createContext());
CREATE_OP_CONTEXT(rel_286_delta_subset_stripctx_stripctx_operand_points_to_op_ctxt,rel_286_delta_subset_stripctx_stripctx_operand_points_to->createContext());
for(const auto& env0 : *rel_285_subset_stripctx_stripctx_operand_points_to) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_286_delta_subset_stripctx_stripctx_operand_points_to->insert(tuple,READ_OP_CONTEXT(rel_286_delta_subset_stripctx_stripctx_operand_points_to_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_288_subset_exception_object_exception_object_op_ctxt,rel_288_subset_exception_object_exception_object->createContext());
CREATE_OP_CONTEXT(rel_289_delta_subset_exception_object_exception_object_op_ctxt,rel_289_delta_subset_exception_object_exception_object->createContext());
for(const auto& env0 : *rel_288_subset_exception_object_exception_object) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_289_delta_subset_exception_object_exception_object->insert(tuple,READ_OP_CONTEXT(rel_289_delta_subset_exception_object_exception_object_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_291_subset_exception_object_heap_allocation_by_alloc_exc_op_ctxt,rel_291_subset_exception_object_heap_allocation_by_alloc_exc->createContext());
CREATE_OP_CONTEXT(rel_292_delta_subset_exception_object_heap_allocation_by_alloc_exc_op_ctxt,rel_292_delta_subset_exception_object_heap_allocation_by_alloc_exc->createContext());
for(const auto& env0 : *rel_291_subset_exception_object_heap_allocation_by_alloc_exc) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_292_delta_subset_exception_object_heap_allocation_by_alloc_exc->insert(tuple,READ_OP_CONTEXT(rel_292_delta_subset_exception_object_heap_allocation_by_alloc_exc_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_294_argv_ptr_points_to_op_ctxt,rel_294_argv_ptr_points_to->createContext());
CREATE_OP_CONTEXT(rel_295_delta_argv_ptr_points_to_op_ctxt,rel_295_delta_argv_ptr_points_to->createContext());
for(const auto& env0 : *rel_294_argv_ptr_points_to) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_295_delta_argv_ptr_points_to->insert(tuple,READ_OP_CONTEXT(rel_295_delta_argv_ptr_points_to_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_297_allocation_op_ctxt,rel_297_allocation->createContext());
CREATE_OP_CONTEXT(rel_298_delta_allocation_op_ctxt,rel_298_delta_allocation->createContext());
for(const auto& env0 : *rel_297_allocation) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_298_delta_allocation->insert(tuple,READ_OP_CONTEXT(rel_298_delta_allocation_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_300_basic_allocation_op_ctxt,rel_300_basic_allocation->createContext());
CREATE_OP_CONTEXT(rel_301_delta_basic_allocation_op_ctxt,rel_301_delta_basic_allocation->createContext());
for(const auto& env0 : *rel_300_basic_allocation) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_301_delta_basic_allocation->insert(tuple,READ_OP_CONTEXT(rel_301_delta_basic_allocation_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_303_stack_allocation_op_ctxt,rel_303_stack_allocation->createContext());
CREATE_OP_CONTEXT(rel_304_delta_stack_allocation_op_ctxt,rel_304_delta_stack_allocation->createContext());
for(const auto& env0 : *rel_303_stack_allocation) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_304_delta_stack_allocation->insert(tuple,READ_OP_CONTEXT(rel_304_delta_stack_allocation_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_306_heap_allocation_op_ctxt,rel_306_heap_allocation->createContext());
CREATE_OP_CONTEXT(rel_307_delta_heap_allocation_op_ctxt,rel_307_delta_heap_allocation->createContext());
for(const auto& env0 : *rel_306_heap_allocation) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_307_delta_heap_allocation->insert(tuple,READ_OP_CONTEXT(rel_307_delta_heap_allocation_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_309_signature_allocation_op_ctxt,rel_309_signature_allocation->createContext());
CREATE_OP_CONTEXT(rel_310_delta_signature_allocation_op_ctxt,rel_310_delta_signature_allocation->createContext());
for(const auto& env0 : *rel_309_signature_allocation) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_310_delta_signature_allocation->insert(tuple,READ_OP_CONTEXT(rel_310_delta_signature_allocation_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_312_stack_allocation_by_instr_op_ctxt,rel_312_stack_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_313_delta_stack_allocation_by_instr_op_ctxt,rel_313_delta_stack_allocation_by_instr->createContext());
for(const auto& env0 : *rel_312_stack_allocation_by_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_313_delta_stack_allocation_by_instr->insert(tuple,READ_OP_CONTEXT(rel_313_delta_stack_allocation_by_instr_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_315_heap_allocation_by_instr_op_ctxt,rel_315_heap_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt,rel_316_delta_heap_allocation_by_instr->createContext());
for(const auto& env0 : *rel_315_heap_allocation_by_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_316_delta_heap_allocation_by_instr->insert(tuple,READ_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_318_ptr_compatible_allocation_op_ctxt,rel_318_ptr_compatible_allocation->createContext());
CREATE_OP_CONTEXT(rel_319_delta_ptr_compatible_allocation_op_ctxt,rel_319_delta_ptr_compatible_allocation->createContext());
for(const auto& env0 : *rel_318_ptr_compatible_allocation) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_319_delta_ptr_compatible_allocation->insert(tuple,READ_OP_CONTEXT(rel_319_delta_ptr_compatible_allocation_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
for(const auto& env0 : *rel_321_static_allocation_type) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_322_delta_static_allocation_type->insert(tuple,READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt,rel_325_delta_allocation_size->createContext());
for(const auto& env0 : *rel_324_allocation_size) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_325_delta_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt,rel_327_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt,rel_328_delta_dynamically_sized_alloc->createContext());
for(const auto& env0 : *rel_327_dynamically_sized_alloc) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_328_delta_dynamically_sized_alloc->insert(tuple,READ_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_330_path_component_op_ctxt,rel_330_path_component->createContext());
CREATE_OP_CONTEXT(rel_331_delta_path_component_op_ctxt,rel_331_delta_path_component->createContext());
for(const auto& env0 : *rel_330_path_component) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_331_delta_path_component->insert(tuple,READ_OP_CONTEXT(rel_331_delta_path_component_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_333_path_component_at_field_op_ctxt,rel_333_path_component_at_field->createContext());
CREATE_OP_CONTEXT(rel_334_delta_path_component_at_field_op_ctxt,rel_334_delta_path_component_at_field->createContext());
for(const auto& env0 : *rel_333_path_component_at_field) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_334_delta_path_component_at_field->insert(tuple,READ_OP_CONTEXT(rel_334_delta_path_component_at_field_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_336_path_component_at_index_op_ctxt,rel_336_path_component_at_index->createContext());
CREATE_OP_CONTEXT(rel_337_delta_path_component_at_index_op_ctxt,rel_337_delta_path_component_at_index->createContext());
for(const auto& env0 : *rel_336_path_component_at_index) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_337_delta_path_component_at_index->insert(tuple,READ_OP_CONTEXT(rel_337_delta_path_component_at_index_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_339_assign_instr_op_ctxt,rel_339_assign_instr->createContext());
CREATE_OP_CONTEXT(rel_340_delta_assign_instr_op_ctxt,rel_340_delta_assign_instr->createContext());
for(const auto& env0 : *rel_339_assign_instr) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_340_delta_assign_instr->insert(tuple,READ_OP_CONTEXT(rel_340_delta_assign_instr_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_342_initialized_by_constant_op_ctxt,rel_342_initialized_by_constant->createContext());
CREATE_OP_CONTEXT(rel_343_delta_initialized_by_constant_op_ctxt,rel_343_delta_initialized_by_constant->createContext());
for(const auto& env0 : *rel_342_initialized_by_constant) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_343_delta_initialized_by_constant->insert(tuple,READ_OP_CONTEXT(rel_343_delta_initialized_by_constant_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_345_constant_ptr_points_to_op_ctxt,rel_345_constant_ptr_points_to->createContext());
CREATE_OP_CONTEXT(rel_346_delta_constant_ptr_points_to_op_ctxt,rel_346_delta_constant_ptr_points_to->createContext());
for(const auto& env0 : *rel_345_constant_ptr_points_to) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_346_delta_constant_ptr_points_to->insert(tuple,READ_OP_CONTEXT(rel_346_delta_constant_ptr_points_to_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_349_delta_gep_constant_expr_indexes_from_op_ctxt,rel_349_delta_gep_constant_expr_indexes_from->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_349_delta_gep_constant_expr_indexes_from->insert(tuple,READ_OP_CONTEXT(rel_349_delta_gep_constant_expr_indexes_from_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_352_delta_gep_constant_expr_points_to_op_ctxt,rel_352_delta_gep_constant_expr_points_to->createContext());
for(const auto& env0 : *rel_351_gep_constant_expr_points_to) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_352_delta_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_352_delta_gep_constant_expr_points_to_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
for(const auto& env0 : *rel_354_gep_constant_expr_index_offset) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_355_delta_gep_constant_expr_index_offset->insert(tuple,READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_357_constant_points_to_op_ctxt,rel_357_constant_points_to->createContext());
CREATE_OP_CONTEXT(rel_358_delta_constant_points_to_op_ctxt,rel_358_delta_constant_points_to->createContext());
for(const auto& env0 : *rel_357_constant_points_to) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_358_delta_constant_points_to->insert(tuple,READ_OP_CONTEXT(rel_358_delta_constant_points_to_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_360_heap_allocation_by_new_op_ctxt,rel_360_heap_allocation_by_new->createContext());
CREATE_OP_CONTEXT(rel_361_delta_heap_allocation_by_new_op_ctxt,rel_361_delta_heap_allocation_by_new->createContext());
for(const auto& env0 : *rel_360_heap_allocation_by_new) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_361_delta_heap_allocation_by_new->insert(tuple,READ_OP_CONTEXT(rel_361_delta_heap_allocation_by_new_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_363_alloc_region_op_ctxt,rel_363_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_364_delta_alloc_region_op_ctxt,rel_364_delta_alloc_region->createContext());
for(const auto& env0 : *rel_363_alloc_region) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_364_delta_alloc_region->insert(tuple,READ_OP_CONTEXT(rel_364_delta_alloc_region_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
CREATE_OP_CONTEXT(rel_367_delta_context_op_ctxt,rel_367_delta_context->createContext());
for(const auto& env0 : *rel_366_context) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_367_delta_context->insert(tuple,READ_OP_CONTEXT(rel_367_delta_context_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_369_context_depth_op_ctxt,rel_369_context_depth->createContext());
CREATE_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt,rel_370_delta_context_depth->createContext());
for(const auto& env0 : *rel_369_context_depth) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_370_delta_context_depth->insert(tuple,READ_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_372_drop_last_op_ctxt,rel_372_drop_last->createContext());
CREATE_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt,rel_373_delta_drop_last->createContext());
for(const auto& env0 : *rel_372_drop_last) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_373_delta_drop_last->insert(tuple,READ_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
for(const auto& env0 : *rel_375_static_subobjects_alloc_subregion) {
Tuple<RamDomain,6> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3]),ramBitCast(env0[4]),ramBitCast(env0[5])}};
rel_376_delta_static_subobjects_alloc_subregion->insert(tuple,READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_378_static_subobjects_non_func_basic_allocation_op_ctxt,rel_378_static_subobjects_non_func_basic_allocation->createContext());
CREATE_OP_CONTEXT(rel_379_delta_static_subobjects_non_func_basic_allocation_op_ctxt,rel_379_delta_static_subobjects_non_func_basic_allocation->createContext());
for(const auto& env0 : *rel_378_static_subobjects_non_func_basic_allocation) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_379_delta_static_subobjects_non_func_basic_allocation->insert(tuple,READ_OP_CONTEXT(rel_379_delta_static_subobjects_non_func_basic_allocation_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_381_static_subobjects_alloc_subregion_at_field->createContext());
CREATE_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_382_delta_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_381_static_subobjects_alloc_subregion_at_field) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_382_delta_static_subobjects_alloc_subregion_at_field->insert(tuple,READ_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_384_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
for(const auto& env0 : *rel_384_static_subobjects_alloc_subregion_at_any_array_index) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->insert(tuple,READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_387_static_subobjects_index_in_bounds_op_ctxt,rel_387_static_subobjects_index_in_bounds->createContext());
CREATE_OP_CONTEXT(rel_388_delta_static_subobjects_index_in_bounds_op_ctxt,rel_388_delta_static_subobjects_index_in_bounds->createContext());
for(const auto& env0 : *rel_387_static_subobjects_index_in_bounds) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_388_delta_static_subobjects_index_in_bounds->insert(tuple,READ_OP_CONTEXT(rel_388_delta_static_subobjects_index_in_bounds_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_390_static_subobjects_alloc_subregion_at_array_index) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_391_delta_static_subobjects_alloc_subregion_at_array_index->insert(tuple,READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_393_subset_interp_assignment_interp_assignment_op_ctxt,rel_393_subset_interp_assignment_interp_assignment->createContext());
CREATE_OP_CONTEXT(rel_394_delta_subset_interp_assignment_interp_assignment_op_ctxt,rel_394_delta_subset_interp_assignment_interp_assignment->createContext());
for(const auto& env0 : *rel_393_subset_interp_assignment_interp_assignment) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_394_delta_subset_interp_assignment_interp_assignment->insert(tuple,READ_OP_CONTEXT(rel_394_delta_subset_interp_assignment_interp_assignment_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_396_subset_type_indication_heap_allocation_by_instr_op_ctxt,rel_396_subset_type_indication_heap_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_397_delta_subset_type_indication_heap_allocation_by_instr_op_ctxt,rel_397_delta_subset_type_indication_heap_allocation_by_instr->createContext());
for(const auto& env0 : *rel_396_subset_type_indication_heap_allocation_by_instr) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_397_delta_subset_type_indication_heap_allocation_by_instr->insert(tuple,READ_OP_CONTEXT(rel_397_delta_subset_type_indication_heap_allocation_by_instr_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_399_subset_type_indication_heap_allocation_by_type_instr_op_ctxt,rel_399_subset_type_indication_heap_allocation_by_type_instr->createContext());
CREATE_OP_CONTEXT(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr_op_ctxt,rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->createContext());
for(const auto& env0 : *rel_399_subset_type_indication_heap_allocation_by_type_instr) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->insert(tuple,READ_OP_CONTEXT(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_402_subset_type_indication_assign_rebase_alloc_op_ctxt,rel_402_subset_type_indication_assign_rebase_alloc->createContext());
CREATE_OP_CONTEXT(rel_403_delta_subset_type_indication_assign_rebase_alloc_op_ctxt,rel_403_delta_subset_type_indication_assign_rebase_alloc->createContext());
for(const auto& env0 : *rel_402_subset_type_indication_assign_rebase_alloc) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_403_delta_subset_type_indication_assign_rebase_alloc->insert(tuple,READ_OP_CONTEXT(rel_403_delta_subset_type_indication_assign_rebase_alloc_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_405_subset_type_indication_stack_allocation_by_type_instr_op_ctxt,rel_405_subset_type_indication_stack_allocation_by_type_instr->createContext());
CREATE_OP_CONTEXT(rel_406_delta_subset_type_indication_stack_allocation_by_type_instr_op_ctxt,rel_406_delta_subset_type_indication_stack_allocation_by_type_instr->createContext());
for(const auto& env0 : *rel_405_subset_type_indication_stack_allocation_by_type_instr) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_406_delta_subset_type_indication_stack_allocation_by_type_instr->insert(tuple,READ_OP_CONTEXT(rel_406_delta_subset_type_indication_stack_allocation_by_type_instr_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_408_subset_type_indication_ty_indication_op_ctxt,rel_408_subset_type_indication_ty_indication->createContext());
CREATE_OP_CONTEXT(rel_409_delta_subset_type_indication_ty_indication_op_ctxt,rel_409_delta_subset_type_indication_ty_indication->createContext());
for(const auto& env0 : *rel_408_subset_type_indication_ty_indication) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_409_delta_subset_type_indication_ty_indication->insert(tuple,READ_OP_CONTEXT(rel_409_delta_subset_type_indication_ty_indication_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_411_subset_callgraph_reachable_context_op_ctxt,rel_411_subset_callgraph_reachable_context->createContext());
CREATE_OP_CONTEXT(rel_412_delta_subset_callgraph_reachable_context_op_ctxt,rel_412_delta_subset_callgraph_reachable_context->createContext());
for(const auto& env0 : *rel_411_subset_callgraph_reachable_context) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_412_delta_subset_callgraph_reachable_context->insert(tuple,READ_OP_CONTEXT(rel_412_delta_subset_callgraph_reachable_context_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_414_subset_callgraph_reachable_func_op_ctxt,rel_414_subset_callgraph_reachable_func->createContext());
CREATE_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt,rel_415_delta_subset_callgraph_reachable_func->createContext());
for(const auto& env0 : *rel_414_subset_callgraph_reachable_func) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_415_delta_subset_callgraph_reachable_func->insert(tuple,READ_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_417_subset_callgraph_reachable_store_op_ctxt,rel_417_subset_callgraph_reachable_store->createContext());
CREATE_OP_CONTEXT(rel_418_delta_subset_callgraph_reachable_store_op_ctxt,rel_418_delta_subset_callgraph_reachable_store->createContext());
for(const auto& env0 : *rel_417_subset_callgraph_reachable_store) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_418_delta_subset_callgraph_reachable_store->insert(tuple,READ_OP_CONTEXT(rel_418_delta_subset_callgraph_reachable_store_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_420_subset_callgraph_reachable_load_op_ctxt,rel_420_subset_callgraph_reachable_load->createContext());
CREATE_OP_CONTEXT(rel_421_delta_subset_callgraph_reachable_load_op_ctxt,rel_421_delta_subset_callgraph_reachable_load->createContext());
for(const auto& env0 : *rel_420_subset_callgraph_reachable_load) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_421_delta_subset_callgraph_reachable_load->insert(tuple,READ_OP_CONTEXT(rel_421_delta_subset_callgraph_reachable_load_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_424_delta_subset_callgraph_callgraph_edge_op_ctxt,rel_424_delta_subset_callgraph_callgraph_edge->createContext());
CREATE_OP_CONTEXT(rel_423_subset_callgraph_callgraph_edge_op_ctxt,rel_423_subset_callgraph_callgraph_edge->createContext());
for(const auto& env0 : *rel_423_subset_callgraph_callgraph_edge) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_424_delta_subset_callgraph_callgraph_edge->insert(tuple,READ_OP_CONTEXT(rel_424_delta_subset_callgraph_callgraph_edge_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_427_delta_subset_callgraph_callgraph_edge_interim_direct_call_op_ctxt,rel_427_delta_subset_callgraph_callgraph_edge_interim_direct_call->createContext());
CREATE_OP_CONTEXT(rel_426_subset_callgraph_callgraph_edge_interim_direct_call_op_ctxt,rel_426_subset_callgraph_callgraph_edge_interim_direct_call->createContext());
for(const auto& env0 : *rel_426_subset_callgraph_callgraph_edge_interim_direct_call) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_427_delta_subset_callgraph_callgraph_edge_interim_direct_call->insert(tuple,READ_OP_CONTEXT(rel_427_delta_subset_callgraph_callgraph_edge_interim_direct_call_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_429_subset_callgraph_callgraph_edge_interim_direct_invoke_op_ctxt,rel_429_subset_callgraph_callgraph_edge_interim_direct_invoke->createContext());
CREATE_OP_CONTEXT(rel_430_delta_subset_callgraph_callgraph_edge_interim_direct_invoke_op_ctxt,rel_430_delta_subset_callgraph_callgraph_edge_interim_direct_invoke->createContext());
for(const auto& env0 : *rel_429_subset_callgraph_callgraph_edge_interim_direct_invoke) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_430_delta_subset_callgraph_callgraph_edge_interim_direct_invoke->insert(tuple,READ_OP_CONTEXT(rel_430_delta_subset_callgraph_callgraph_edge_interim_direct_invoke_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_432_subset_callgraph_callgraph_edge_interim_indirect_call_op_ctxt,rel_432_subset_callgraph_callgraph_edge_interim_indirect_call->createContext());
CREATE_OP_CONTEXT(rel_433_delta_subset_callgraph_callgraph_edge_interim_indirect_call_op_ctxt,rel_433_delta_subset_callgraph_callgraph_edge_interim_indirect_call->createContext());
for(const auto& env0 : *rel_432_subset_callgraph_callgraph_edge_interim_indirect_call) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_433_delta_subset_callgraph_callgraph_edge_interim_indirect_call->insert(tuple,READ_OP_CONTEXT(rel_433_delta_subset_callgraph_callgraph_edge_interim_indirect_call_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_435_subset_callgraph_callgraph_edge_interim_indirect_invoke_op_ctxt,rel_435_subset_callgraph_callgraph_edge_interim_indirect_invoke->createContext());
CREATE_OP_CONTEXT(rel_436_delta_subset_callgraph_callgraph_edge_interim_indirect_invoke_op_ctxt,rel_436_delta_subset_callgraph_callgraph_edge_interim_indirect_invoke->createContext());
for(const auto& env0 : *rel_435_subset_callgraph_callgraph_edge_interim_indirect_invoke) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_436_delta_subset_callgraph_callgraph_edge_interim_indirect_invoke->insert(tuple,READ_OP_CONTEXT(rel_436_delta_subset_callgraph_callgraph_edge_interim_indirect_invoke_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_438_subset_var_points_to_op_ctxt,rel_438_subset_var_points_to->createContext());
CREATE_OP_CONTEXT(rel_439_delta_subset_var_points_to_op_ctxt,rel_439_delta_subset_var_points_to->createContext());
for(const auto& env0 : *rel_438_subset_var_points_to) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_439_delta_subset_var_points_to->insert(tuple,READ_OP_CONTEXT(rel_439_delta_subset_var_points_to_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_441_subset_ptr_points_to_op_ctxt,rel_441_subset_ptr_points_to->createContext());
CREATE_OP_CONTEXT(rel_442_delta_subset_ptr_points_to_op_ctxt,rel_442_delta_subset_ptr_points_to->createContext());
for(const auto& env0 : *rel_441_subset_ptr_points_to) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_442_delta_subset_ptr_points_to->insert(tuple,READ_OP_CONTEXT(rel_442_delta_subset_ptr_points_to_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_444_subset_operand_points_to_op_ctxt,rel_444_subset_operand_points_to->createContext());
CREATE_OP_CONTEXT(rel_445_delta_subset_operand_points_to_op_ctxt,rel_445_delta_subset_operand_points_to->createContext());
for(const auto& env0 : *rel_444_subset_operand_points_to) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_445_delta_subset_operand_points_to->insert(tuple,READ_OP_CONTEXT(rel_445_delta_subset_operand_points_to_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_447_subset_signatures_sig_ptr_points_to_op_ctxt,rel_447_subset_signatures_sig_ptr_points_to->createContext());
CREATE_OP_CONTEXT(rel_448_delta_subset_signatures_sig_ptr_points_to_op_ctxt,rel_448_delta_subset_signatures_sig_ptr_points_to->createContext());
for(const auto& env0 : *rel_447_subset_signatures_sig_ptr_points_to) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_448_delta_subset_signatures_sig_ptr_points_to->insert(tuple,READ_OP_CONTEXT(rel_448_delta_subset_signatures_sig_ptr_points_to_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_450_subset_signatures_sig_var_alloc_op_ctxt,rel_450_subset_signatures_sig_var_alloc->createContext());
CREATE_OP_CONTEXT(rel_451_delta_subset_signatures_sig_var_alloc_op_ctxt,rel_451_delta_subset_signatures_sig_var_alloc->createContext());
for(const auto& env0 : *rel_450_subset_signatures_sig_var_alloc) {
Tuple<RamDomain,5> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3]),ramBitCast(env0[4])}};
rel_451_delta_subset_signatures_sig_var_alloc->insert(tuple,READ_OP_CONTEXT(rel_451_delta_subset_signatures_sig_var_alloc_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_453_subset_signatures_sig_ptr_alloc_op_ctxt,rel_453_subset_signatures_sig_ptr_alloc->createContext());
CREATE_OP_CONTEXT(rel_454_delta_subset_signatures_sig_ptr_alloc_op_ctxt,rel_454_delta_subset_signatures_sig_ptr_alloc->createContext());
for(const auto& env0 : *rel_453_subset_signatures_sig_ptr_alloc) {
Tuple<RamDomain,5> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3]),ramBitCast(env0[4])}};
rel_454_delta_subset_signatures_sig_ptr_alloc->insert(tuple,READ_OP_CONTEXT(rel_454_delta_subset_signatures_sig_ptr_alloc_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_456_subset_signatures_signature_var_points_to_base_op_ctxt,rel_456_subset_signatures_signature_var_points_to_base->createContext());
CREATE_OP_CONTEXT(rel_457_delta_subset_signatures_signature_var_points_to_base_op_ctxt,rel_457_delta_subset_signatures_signature_var_points_to_base->createContext());
for(const auto& env0 : *rel_456_subset_signatures_signature_var_points_to_base) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_457_delta_subset_signatures_signature_var_points_to_base->insert(tuple,READ_OP_CONTEXT(rel_457_delta_subset_signatures_signature_var_points_to_base_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_459_subset_signatures_signature_ptr_points_to_base_op_ctxt,rel_459_subset_signatures_signature_ptr_points_to_base->createContext());
CREATE_OP_CONTEXT(rel_460_delta_subset_signatures_signature_ptr_points_to_base_op_ctxt,rel_460_delta_subset_signatures_signature_ptr_points_to_base->createContext());
for(const auto& env0 : *rel_459_subset_signatures_signature_ptr_points_to_base) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_460_delta_subset_signatures_signature_ptr_points_to_base->insert(tuple,READ_OP_CONTEXT(rel_460_delta_subset_signatures_signature_ptr_points_to_base_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_462_subset_signatures_memcpy_sig_op_ctxt,rel_462_subset_signatures_memcpy_sig->createContext());
CREATE_OP_CONTEXT(rel_463_delta_subset_signatures_memcpy_sig_op_ctxt,rel_463_delta_subset_signatures_memcpy_sig->createContext());
for(const auto& env0 : *rel_462_subset_signatures_memcpy_sig) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_463_delta_subset_signatures_memcpy_sig->insert(tuple,READ_OP_CONTEXT(rel_463_delta_subset_signatures_memcpy_sig_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_465_subset_signatures_ptr_reaches_to_request_op_ctxt,rel_465_subset_signatures_ptr_reaches_to_request->createContext());
CREATE_OP_CONTEXT(rel_466_delta_subset_signatures_ptr_reaches_to_request_op_ctxt,rel_466_delta_subset_signatures_ptr_reaches_to_request->createContext());
for(const auto& env0 : *rel_465_subset_signatures_ptr_reaches_to_request) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_466_delta_subset_signatures_ptr_reaches_to_request->insert(tuple,READ_OP_CONTEXT(rel_466_delta_subset_signatures_ptr_reaches_to_request_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_468_subset_signatures_ptr_reaches_to_op_ctxt,rel_468_subset_signatures_ptr_reaches_to->createContext());
CREATE_OP_CONTEXT(rel_469_delta_subset_signatures_ptr_reaches_to_op_ctxt,rel_469_delta_subset_signatures_ptr_reaches_to->createContext());
for(const auto& env0 : *rel_468_subset_signatures_ptr_reaches_to) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_469_delta_subset_signatures_ptr_reaches_to->insert(tuple,READ_OP_CONTEXT(rel_469_delta_subset_signatures_ptr_reaches_to_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_471_subset_memcpy_memcpy_call_op_ctxt,rel_471_subset_memcpy_memcpy_call->createContext());
CREATE_OP_CONTEXT(rel_472_delta_subset_memcpy_memcpy_call_op_ctxt,rel_472_delta_subset_memcpy_memcpy_call->createContext());
for(const auto& env0 : *rel_471_subset_memcpy_memcpy_call) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_472_delta_subset_memcpy_memcpy_call->insert(tuple,READ_OP_CONTEXT(rel_472_delta_subset_memcpy_memcpy_call_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_474_subset_memcpy_try_memcpy_op_ctxt,rel_474_subset_memcpy_try_memcpy->createContext());
CREATE_OP_CONTEXT(rel_475_delta_subset_memcpy_try_memcpy_op_ctxt,rel_475_delta_subset_memcpy_try_memcpy->createContext());
for(const auto& env0 : *rel_474_subset_memcpy_try_memcpy) {
Tuple<RamDomain,5> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3]),ramBitCast(env0[4])}};
rel_475_delta_subset_memcpy_try_memcpy->insert(tuple,READ_OP_CONTEXT(rel_475_delta_subset_memcpy_try_memcpy_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_477_subset_memcpy_stripctx_memcpy_op_ctxt,rel_477_subset_memcpy_stripctx_memcpy->createContext());
CREATE_OP_CONTEXT(rel_478_delta_subset_memcpy_stripctx_memcpy_op_ctxt,rel_478_delta_subset_memcpy_stripctx_memcpy->createContext());
for(const auto& env0 : *rel_477_subset_memcpy_stripctx_memcpy) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_478_delta_subset_memcpy_stripctx_memcpy->insert(tuple,READ_OP_CONTEXT(rel_478_delta_subset_memcpy_stripctx_memcpy_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_480_subset_memcpy_type_compatible_memcpy_op_ctxt,rel_480_subset_memcpy_type_compatible_memcpy->createContext());
CREATE_OP_CONTEXT(rel_481_delta_subset_memcpy_type_compatible_memcpy_op_ctxt,rel_481_delta_subset_memcpy_type_compatible_memcpy->createContext());
for(const auto& env0 : *rel_480_subset_memcpy_type_compatible_memcpy) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_481_delta_subset_memcpy_type_compatible_memcpy->insert(tuple,READ_OP_CONTEXT(rel_481_delta_subset_memcpy_type_compatible_memcpy_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_483_subset_memcpy_well_typed_and_sized_memcpy_op_ctxt,rel_483_subset_memcpy_well_typed_and_sized_memcpy->createContext());
CREATE_OP_CONTEXT(rel_484_delta_subset_memcpy_well_typed_and_sized_memcpy_op_ctxt,rel_484_delta_subset_memcpy_well_typed_and_sized_memcpy->createContext());
for(const auto& env0 : *rel_483_subset_memcpy_well_typed_and_sized_memcpy) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_484_delta_subset_memcpy_well_typed_and_sized_memcpy->insert(tuple,READ_OP_CONTEXT(rel_484_delta_subset_memcpy_well_typed_and_sized_memcpy_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_486_subset_memcpy_do_memcpy_op_ctxt,rel_486_subset_memcpy_do_memcpy->createContext());
CREATE_OP_CONTEXT(rel_487_delta_subset_memcpy_do_memcpy_op_ctxt,rel_487_delta_subset_memcpy_do_memcpy->createContext());
for(const auto& env0 : *rel_486_subset_memcpy_do_memcpy) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_487_delta_subset_memcpy_do_memcpy->insert(tuple,READ_OP_CONTEXT(rel_487_delta_subset_memcpy_do_memcpy_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_489_subset_memcpy_rec_memcpy_op_ctxt,rel_489_subset_memcpy_rec_memcpy->createContext());
CREATE_OP_CONTEXT(rel_490_delta_subset_memcpy_rec_memcpy_op_ctxt,rel_490_delta_subset_memcpy_rec_memcpy->createContext());
for(const auto& env0 : *rel_489_subset_memcpy_rec_memcpy) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_490_delta_subset_memcpy_rec_memcpy->insert(tuple,READ_OP_CONTEXT(rel_490_delta_subset_memcpy_rec_memcpy_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_492_subset_gep_alloc_type_and_path_op_ctxt,rel_492_subset_gep_alloc_type_and_path->createContext());
CREATE_OP_CONTEXT(rel_493_delta_subset_gep_alloc_type_and_path_op_ctxt,rel_493_delta_subset_gep_alloc_type_and_path->createContext());
for(const auto& env0 : *rel_492_subset_gep_alloc_type_and_path) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_493_delta_subset_gep_alloc_type_and_path->insert(tuple,READ_OP_CONTEXT(rel_493_delta_subset_gep_alloc_type_and_path_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_495_subset_gep_some_alloc_type_and_path_op_ctxt,rel_495_subset_gep_some_alloc_type_and_path->createContext());
CREATE_OP_CONTEXT(rel_496_delta_subset_gep_some_alloc_type_and_path_op_ctxt,rel_496_delta_subset_gep_some_alloc_type_and_path->createContext());
for(const auto& env0 : *rel_495_subset_gep_some_alloc_type_and_path) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_496_delta_subset_gep_some_alloc_type_and_path->insert(tuple,READ_OP_CONTEXT(rel_496_delta_subset_gep_some_alloc_type_and_path_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_498_subset_gep_gep_type_compatible_op_ctxt,rel_498_subset_gep_gep_type_compatible->createContext());
CREATE_OP_CONTEXT(rel_499_delta_subset_gep_gep_type_compatible_op_ctxt,rel_499_delta_subset_gep_gep_type_compatible->createContext());
for(const auto& env0 : *rel_498_subset_gep_gep_type_compatible) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_499_delta_subset_gep_gep_type_compatible->insert(tuple,READ_OP_CONTEXT(rel_499_delta_subset_gep_gep_type_compatible_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_501_subset_gep_gep_indexes_from_op_ctxt,rel_501_subset_gep_gep_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_502_delta_subset_gep_gep_indexes_from_op_ctxt,rel_502_delta_subset_gep_gep_indexes_from->createContext());
for(const auto& env0 : *rel_501_subset_gep_gep_indexes_from) {
Tuple<RamDomain,5> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3]),ramBitCast(env0[4])}};
rel_502_delta_subset_gep_gep_indexes_from->insert(tuple,READ_OP_CONTEXT(rel_502_delta_subset_gep_gep_indexes_from_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_504_subset_gep_gep_points_to_op_ctxt,rel_504_subset_gep_gep_points_to->createContext());
CREATE_OP_CONTEXT(rel_505_delta_subset_gep_gep_points_to_op_ctxt,rel_505_delta_subset_gep_gep_points_to->createContext());
for(const auto& env0 : *rel_504_subset_gep_gep_points_to) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_505_delta_subset_gep_gep_points_to->insert(tuple,READ_OP_CONTEXT(rel_505_delta_subset_gep_gep_points_to_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_507_subset_gep_gep_last_index_points_to_op_ctxt,rel_507_subset_gep_gep_last_index_points_to->createContext());
CREATE_OP_CONTEXT(rel_508_delta_subset_gep_gep_last_index_points_to_op_ctxt,rel_508_delta_subset_gep_gep_last_index_points_to->createContext());
for(const auto& env0 : *rel_507_subset_gep_gep_last_index_points_to) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_508_delta_subset_gep_gep_last_index_points_to->insert(tuple,READ_OP_CONTEXT(rel_508_delta_subset_gep_gep_last_index_points_to_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_510_subset_gep_gep_address_ctx_points_to_op_ctxt,rel_510_subset_gep_gep_address_ctx_points_to->createContext());
CREATE_OP_CONTEXT(rel_511_delta_subset_gep_gep_address_ctx_points_to_op_ctxt,rel_511_delta_subset_gep_gep_address_ctx_points_to->createContext());
for(const auto& env0 : *rel_510_subset_gep_gep_address_ctx_points_to) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_511_delta_subset_gep_gep_address_ctx_points_to->insert(tuple,READ_OP_CONTEXT(rel_511_delta_subset_gep_gep_address_ctx_points_to_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_514_delta_subset_cplusplus_is_init_by_ctor_op_ctxt,rel_514_delta_subset_cplusplus_is_init_by_ctor->createContext());
CREATE_OP_CONTEXT(rel_513_subset_cplusplus_is_init_by_ctor_op_ctxt,rel_513_subset_cplusplus_is_init_by_ctor->createContext());
for(const auto& env0 : *rel_513_subset_cplusplus_is_init_by_ctor) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_514_delta_subset_cplusplus_is_init_by_ctor->insert(tuple,READ_OP_CONTEXT(rel_514_delta_subset_cplusplus_is_init_by_ctor_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_516_subset_at_exit_registers_dtor_atexit_op_ctxt,rel_516_subset_at_exit_registers_dtor_atexit->createContext());
CREATE_OP_CONTEXT(rel_517_delta_subset_at_exit_registers_dtor_atexit_op_ctxt,rel_517_delta_subset_at_exit_registers_dtor_atexit->createContext());
for(const auto& env0 : *rel_516_subset_at_exit_registers_dtor_atexit) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_517_delta_subset_at_exit_registers_dtor_atexit->insert(tuple,READ_OP_CONTEXT(rel_517_delta_subset_at_exit_registers_dtor_atexit_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_519_subset_at_exit_registers_atexit_op_ctxt,rel_519_subset_at_exit_registers_atexit->createContext());
CREATE_OP_CONTEXT(rel_520_delta_subset_at_exit_registers_atexit_op_ctxt,rel_520_delta_subset_at_exit_registers_atexit->createContext());
for(const auto& env0 : *rel_519_subset_at_exit_registers_atexit) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_520_delta_subset_at_exit_registers_atexit->insert(tuple,READ_OP_CONTEXT(rel_520_delta_subset_at_exit_registers_atexit_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_522_subset_at_exit_called_at_exit_op_ctxt,rel_522_subset_at_exit_called_at_exit->createContext());
CREATE_OP_CONTEXT(rel_523_delta_subset_at_exit_called_at_exit_op_ctxt,rel_523_delta_subset_at_exit_called_at_exit->createContext());
for(const auto& env0 : *rel_522_subset_at_exit_called_at_exit) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_523_delta_subset_at_exit_called_at_exit->insert(tuple,READ_OP_CONTEXT(rel_523_delta_subset_at_exit_called_at_exit_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_525_subset_at_exit_dtor_accepts_recv_op_ctxt,rel_525_subset_at_exit_dtor_accepts_recv->createContext());
CREATE_OP_CONTEXT(rel_526_delta_subset_at_exit_dtor_accepts_recv_op_ctxt,rel_526_delta_subset_at_exit_dtor_accepts_recv->createContext());
for(const auto& env0 : *rel_525_subset_at_exit_dtor_accepts_recv) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_526_delta_subset_at_exit_dtor_accepts_recv->insert(tuple,READ_OP_CONTEXT(rel_526_delta_subset_at_exit_dtor_accepts_recv_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_528_subset_at_exit_at_exit_var_points_to_op_ctxt,rel_528_subset_at_exit_at_exit_var_points_to->createContext());
CREATE_OP_CONTEXT(rel_529_delta_subset_at_exit_at_exit_var_points_to_op_ctxt,rel_529_delta_subset_at_exit_at_exit_var_points_to->createContext());
for(const auto& env0 : *rel_528_subset_at_exit_at_exit_var_points_to) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_529_delta_subset_at_exit_at_exit_var_points_to->insert(tuple,READ_OP_CONTEXT(rel_529_delta_subset_at_exit_at_exit_var_points_to_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_531_subset_allocations_allocated_at_op_ctxt,rel_531_subset_allocations_allocated_at->createContext());
CREATE_OP_CONTEXT(rel_532_delta_subset_allocations_allocated_at_op_ctxt,rel_532_delta_subset_allocations_allocated_at->createContext());
for(const auto& env0 : *rel_531_subset_allocations_allocated_at) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3])}};
rel_532_delta_subset_allocations_allocated_at->insert(tuple,READ_OP_CONTEXT(rel_532_delta_subset_allocations_allocated_at_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_534_subset_allocation_type_allocation_type_op_ctxt,rel_534_subset_allocation_type_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt,rel_535_delta_subset_allocation_type_allocation_type->createContext());
for(const auto& env0 : *rel_534_subset_allocation_type_allocation_type) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_535_delta_subset_allocation_type_allocation_type->insert(tuple,READ_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_537_subset_subobjects_alloc_subregion_op_ctxt,rel_537_subset_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_538_delta_subset_subobjects_alloc_subregion_op_ctxt,rel_538_delta_subset_subobjects_alloc_subregion->createContext());
for(const auto& env0 : *rel_537_subset_subobjects_alloc_subregion) {
Tuple<RamDomain,6> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env0[3]),ramBitCast(env0[4]),ramBitCast(env0[5])}};
rel_538_delta_subset_subobjects_alloc_subregion->insert(tuple,READ_OP_CONTEXT(rel_538_delta_subset_subobjects_alloc_subregion_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_540_subset_subobjects_non_func_basic_allocation_op_ctxt,rel_540_subset_subobjects_non_func_basic_allocation->createContext());
CREATE_OP_CONTEXT(rel_541_delta_subset_subobjects_non_func_basic_allocation_op_ctxt,rel_541_delta_subset_subobjects_non_func_basic_allocation->createContext());
for(const auto& env0 : *rel_540_subset_subobjects_non_func_basic_allocation) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_541_delta_subset_subobjects_non_func_basic_allocation->insert(tuple,READ_OP_CONTEXT(rel_541_delta_subset_subobjects_non_func_basic_allocation_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_543_subset_subobjects_alloc_subregion_at_field_op_ctxt,rel_543_subset_subobjects_alloc_subregion_at_field->createContext());
CREATE_OP_CONTEXT(rel_544_delta_subset_subobjects_alloc_subregion_at_field_op_ctxt,rel_544_delta_subset_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_543_subset_subobjects_alloc_subregion_at_field) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_544_delta_subset_subobjects_alloc_subregion_at_field->insert(tuple,READ_OP_CONTEXT(rel_544_delta_subset_subobjects_alloc_subregion_at_field_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_546_subset_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_546_subset_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_547_delta_subset_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_547_delta_subset_subobjects_alloc_subregion_at_any_array_index->createContext());
for(const auto& env0 : *rel_546_subset_subobjects_alloc_subregion_at_any_array_index) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_547_delta_subset_subobjects_alloc_subregion_at_any_array_index->insert(tuple,READ_OP_CONTEXT(rel_547_delta_subset_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_549_subset_subobjects_index_in_bounds_op_ctxt,rel_549_subset_subobjects_index_in_bounds->createContext());
CREATE_OP_CONTEXT(rel_550_delta_subset_subobjects_index_in_bounds_op_ctxt,rel_550_delta_subset_subobjects_index_in_bounds->createContext());
for(const auto& env0 : *rel_549_subset_subobjects_index_in_bounds) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_550_delta_subset_subobjects_index_in_bounds->insert(tuple,READ_OP_CONTEXT(rel_550_delta_subset_subobjects_index_in_bounds_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_552_subset_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_552_subset_subobjects_alloc_subregion_at_array_index->createContext());
CREATE_OP_CONTEXT(rel_553_delta_subset_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_553_delta_subset_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_552_subset_subobjects_alloc_subregion_at_array_index) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_553_delta_subset_subobjects_alloc_subregion_at_array_index->insert(tuple,READ_OP_CONTEXT(rel_553_delta_subset_subobjects_alloc_subregion_at_array_index_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_555_subset_subobjects_alloc_subregion_offset_op_ctxt,rel_555_subset_subobjects_alloc_subregion_offset->createContext());
CREATE_OP_CONTEXT(rel_556_delta_subset_subobjects_alloc_subregion_offset_op_ctxt,rel_556_delta_subset_subobjects_alloc_subregion_offset->createContext());
for(const auto& env0 : *rel_555_subset_subobjects_alloc_subregion_offset) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2])}};
rel_556_delta_subset_subobjects_alloc_subregion_offset->insert(tuple,READ_OP_CONTEXT(rel_556_delta_subset_subobjects_alloc_subregion_offset_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_558_subset_aliases_alloc_aliases_op_ctxt,rel_558_subset_aliases_alloc_aliases->createContext());
CREATE_OP_CONTEXT(rel_559_delta_subset_aliases_alloc_aliases_op_ctxt,rel_559_delta_subset_aliases_alloc_aliases->createContext());
for(const auto& env0 : *rel_558_subset_aliases_alloc_aliases) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_559_delta_subset_aliases_alloc_aliases->insert(tuple,READ_OP_CONTEXT(rel_559_delta_subset_aliases_alloc_aliases_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_561_subset_aliases_alloc_matches_op_ctxt,rel_561_subset_aliases_alloc_matches->createContext());
CREATE_OP_CONTEXT(rel_562_delta_subset_aliases_alloc_matches_op_ctxt,rel_562_delta_subset_aliases_alloc_matches->createContext());
for(const auto& env0 : *rel_561_subset_aliases_alloc_matches) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_562_delta_subset_aliases_alloc_matches->insert(tuple,READ_OP_CONTEXT(rel_562_delta_subset_aliases_alloc_matches_op_ctxt));
}
}
();[&](){
CREATE_OP_CONTEXT(rel_564_subset_aliases_alloc_may_alias_op_ctxt,rel_564_subset_aliases_alloc_may_alias->createContext());
CREATE_OP_CONTEXT(rel_565_delta_subset_aliases_alloc_may_alias_op_ctxt,rel_565_delta_subset_aliases_alloc_may_alias->createContext());
for(const auto& env0 : *rel_564_subset_aliases_alloc_may_alias) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1])}};
rel_565_delta_subset_aliases_alloc_may_alias->insert(tuple,READ_OP_CONTEXT(rel_565_delta_subset_aliases_alloc_may_alias_op_ctxt));
}
}
();iter = 0;
for(;;) {
signalHandler->setMsg(R"_(subset._merge._reachable_call(?ctx,?instr) :- 
   call_instr(?instr),
   instr_func(?instr,?func),
   subset.callgraph.reachable_context(?ctx,?func).
in file interface.dl [84:3-87:36])_");
if(!(rel_175_instr_func->empty()) && !(rel_412_delta_subset_callgraph_reachable_context->empty()) && !(rel_149_call_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_149_call_instr_op_ctxt,rel_149_call_instr->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_276_subset_merge_reachable_call_op_ctxt,rel_276_subset_merge_reachable_call->createContext());
CREATE_OP_CONTEXT(rel_278_new_subset_merge_reachable_call_op_ctxt,rel_278_new_subset_merge_reachable_call->createContext());
CREATE_OP_CONTEXT(rel_412_delta_subset_callgraph_reachable_context_op_ctxt,rel_412_delta_subset_callgraph_reachable_context->createContext());
for(const auto& env0 : *rel_149_call_instr) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_412_delta_subset_callgraph_reachable_context->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env1[1])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_412_delta_subset_callgraph_reachable_context_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_276_subset_merge_reachable_call->contains(Tuple<RamDomain,2>{{ramBitCast(env2[0]),ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_276_subset_merge_reachable_call_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env2[0]),ramBitCast(env0[0])}};
rel_278_new_subset_merge_reachable_call->insert(tuple,READ_OP_CONTEXT(rel_278_new_subset_merge_reachable_call_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(subset._merge._reachable_call(?ctx,?instr) :- 
   invoke_instr(?instr),
   instr_func(?instr,?func),
   subset.callgraph.reachable_context(?ctx,?func).
in file interface.dl [84:3-87:36])_");
if(!(rel_175_instr_func->empty()) && !(rel_412_delta_subset_callgraph_reachable_context->empty()) && !(rel_176_invoke_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_176_invoke_instr_op_ctxt,rel_176_invoke_instr->createContext());
CREATE_OP_CONTEXT(rel_276_subset_merge_reachable_call_op_ctxt,rel_276_subset_merge_reachable_call->createContext());
CREATE_OP_CONTEXT(rel_278_new_subset_merge_reachable_call_op_ctxt,rel_278_new_subset_merge_reachable_call->createContext());
CREATE_OP_CONTEXT(rel_412_delta_subset_callgraph_reachable_context_op_ctxt,rel_412_delta_subset_callgraph_reachable_context->createContext());
for(const auto& env0 : *rel_176_invoke_instr) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_412_delta_subset_callgraph_reachable_context->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env1[1])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_412_delta_subset_callgraph_reachable_context_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_276_subset_merge_reachable_call->contains(Tuple<RamDomain,2>{{ramBitCast(env2[0]),ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_276_subset_merge_reachable_call_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env2[0]),ramBitCast(env0[0])}};
rel_278_new_subset_merge_reachable_call->insert(tuple,READ_OP_CONTEXT(rel_278_new_subset_merge_reachable_call_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(subset.type_indication.stack_type_indication(?type,?aCtx,?alloc) :- 
   bitcast_instr_to_type(?instr,?ptrType),
   bitcast_instr_from_operand(?instr,?fromOperand),
   subset.operand_points_to(?aCtx,?alloc,_,?fromOperand),
   stack_allocation_by_instr(?allocInstr,?alloc),
   alloca_instr_type(?allocInstr,?allocaType),
   integer_type(?allocaType),
   pointer_type_has_component(?ptrType,?type).
in file type-back-propagation.dl [143:3-150:49])_");
if(!(rel_228_bitcast_instr_from_operand->empty()) && !(rel_64_integer_type->empty()) && !(rel_445_delta_subset_operand_points_to->empty()) && !(rel_148_alloca_instr_type->empty()) && !(rel_312_stack_allocation_by_instr->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_229_bitcast_instr_to_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_64_integer_type_op_ctxt,rel_64_integer_type->createContext());
CREATE_OP_CONTEXT(rel_148_alloca_instr_type_op_ctxt,rel_148_alloca_instr_type->createContext());
CREATE_OP_CONTEXT(rel_228_bitcast_instr_from_operand_op_ctxt,rel_228_bitcast_instr_from_operand->createContext());
CREATE_OP_CONTEXT(rel_229_bitcast_instr_to_type_op_ctxt,rel_229_bitcast_instr_to_type->createContext());
CREATE_OP_CONTEXT(rel_279_subset_type_indication_stack_type_indication_op_ctxt,rel_279_subset_type_indication_stack_type_indication->createContext());
CREATE_OP_CONTEXT(rel_281_new_subset_type_indication_stack_type_indication_op_ctxt,rel_281_new_subset_type_indication_stack_type_indication->createContext());
CREATE_OP_CONTEXT(rel_312_stack_allocation_by_instr_op_ctxt,rel_312_stack_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_313_delta_stack_allocation_by_instr_op_ctxt,rel_313_delta_stack_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_445_delta_subset_operand_points_to_op_ctxt,rel_445_delta_subset_operand_points_to->createContext());
for(const auto& env0 : *rel_229_bitcast_instr_to_type) {
auto range = rel_228_bitcast_instr_from_operand->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_228_bitcast_instr_from_operand_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_445_delta_subset_operand_points_to->lowerUpperRange_0001(Tuple<RamDomain,4>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env1[1])}},Tuple<RamDomain,4>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_445_delta_subset_operand_points_to_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_312_stack_allocation_by_instr->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env2[1])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_312_stack_allocation_by_instr_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_313_delta_stack_allocation_by_instr->contains(Tuple<RamDomain,2>{{ramBitCast(env3[0]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_313_delta_stack_allocation_by_instr_op_ctxt)))) {
auto range = rel_148_alloca_instr_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env3[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env3[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_148_alloca_instr_type_op_ctxt));
for(const auto& env4 : range) {
if( rel_64_integer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_64_integer_type_op_ctxt))) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env5 : range) {
if( !(rel_279_subset_type_indication_stack_type_indication->contains(Tuple<RamDomain,3>{{ramBitCast(env5[1]),ramBitCast(env2[0]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_279_subset_type_indication_stack_type_indication_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env5[1]),ramBitCast(env2[0]),ramBitCast(env2[1])}};
rel_281_new_subset_type_indication_stack_type_indication->insert(tuple,READ_OP_CONTEXT(rel_281_new_subset_type_indication_stack_type_indication_op_ctxt));
}
}
break;
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(subset.type_indication.stack_type_indication(?type,?aCtx,?alloc) :- 
   bitcast_instr_to_type(?instr,?ptrType),
   bitcast_instr_from_operand(?instr,?fromOperand),
   subset.operand_points_to(?aCtx,?alloc,_,?fromOperand),
   stack_allocation_by_instr(?allocInstr,?alloc),
   alloca_instr_type(?allocInstr,?allocaType),
   integer_type(?allocaType),
   pointer_type_has_component(?ptrType,?type).
in file type-back-propagation.dl [143:3-150:49])_");
if(!(rel_228_bitcast_instr_from_operand->empty()) && !(rel_64_integer_type->empty()) && !(rel_444_subset_operand_points_to->empty()) && !(rel_148_alloca_instr_type->empty()) && !(rel_313_delta_stack_allocation_by_instr->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_229_bitcast_instr_to_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_64_integer_type_op_ctxt,rel_64_integer_type->createContext());
CREATE_OP_CONTEXT(rel_148_alloca_instr_type_op_ctxt,rel_148_alloca_instr_type->createContext());
CREATE_OP_CONTEXT(rel_228_bitcast_instr_from_operand_op_ctxt,rel_228_bitcast_instr_from_operand->createContext());
CREATE_OP_CONTEXT(rel_229_bitcast_instr_to_type_op_ctxt,rel_229_bitcast_instr_to_type->createContext());
CREATE_OP_CONTEXT(rel_279_subset_type_indication_stack_type_indication_op_ctxt,rel_279_subset_type_indication_stack_type_indication->createContext());
CREATE_OP_CONTEXT(rel_281_new_subset_type_indication_stack_type_indication_op_ctxt,rel_281_new_subset_type_indication_stack_type_indication->createContext());
CREATE_OP_CONTEXT(rel_313_delta_stack_allocation_by_instr_op_ctxt,rel_313_delta_stack_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_444_subset_operand_points_to_op_ctxt,rel_444_subset_operand_points_to->createContext());
for(const auto& env0 : *rel_229_bitcast_instr_to_type) {
auto range = rel_228_bitcast_instr_from_operand->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_228_bitcast_instr_from_operand_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_444_subset_operand_points_to->lowerUpperRange_0001(Tuple<RamDomain,4>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env1[1])}},Tuple<RamDomain,4>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_444_subset_operand_points_to_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_313_delta_stack_allocation_by_instr->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env2[1])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_313_delta_stack_allocation_by_instr_op_ctxt));
for(const auto& env3 : range) {
auto range = rel_148_alloca_instr_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env3[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env3[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_148_alloca_instr_type_op_ctxt));
for(const auto& env4 : range) {
if( rel_64_integer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_64_integer_type_op_ctxt))) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env5 : range) {
if( !(rel_279_subset_type_indication_stack_type_indication->contains(Tuple<RamDomain,3>{{ramBitCast(env5[1]),ramBitCast(env2[0]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_279_subset_type_indication_stack_type_indication_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env5[1]),ramBitCast(env2[0]),ramBitCast(env2[1])}};
rel_281_new_subset_type_indication_stack_type_indication->insert(tuple,READ_OP_CONTEXT(rel_281_new_subset_type_indication_stack_type_indication_op_ctxt));
}
}
break;
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(subset._merge.merge(?oldCtx,?callerInstr,?oldCtx) :- 
   !insensitive(),
   subset._merge._reachable_call(?oldCtx,?callerInstr),
   drop_context_item_by_invoc(?callerInstr),
   !drop_context_by_invoc(?callerInstr).
in file interface.dl [100:3-107:43])_");
if(!(rel_192_drop_context_item_by_invoc->empty()) && rel_25_insensitive->empty() && !(rel_277_delta_subset_merge_reachable_call->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_191_drop_context_by_invoc_op_ctxt,rel_191_drop_context_by_invoc->createContext());
CREATE_OP_CONTEXT(rel_192_drop_context_item_by_invoc_op_ctxt,rel_192_drop_context_item_by_invoc->createContext());
CREATE_OP_CONTEXT(rel_277_delta_subset_merge_reachable_call_op_ctxt,rel_277_delta_subset_merge_reachable_call->createContext());
CREATE_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt,rel_282_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_284_new_subset_merge_merge_op_ctxt,rel_284_new_subset_merge_merge->createContext());
for(const auto& env0 : *rel_277_delta_subset_merge_reachable_call) {
if( rel_192_drop_context_item_by_invoc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_192_drop_context_item_by_invoc_op_ctxt)) && !(rel_282_subset_merge_merge->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt))) && !(rel_191_drop_context_by_invoc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_191_drop_context_by_invoc_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[0])}};
rel_284_new_subset_merge_merge->insert(tuple,READ_OP_CONTEXT(rel_284_new_subset_merge_merge_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(subset._merge.merge(nil,?callerInstr,?oldCtx) :- 
   !insensitive(),
   subset._merge._reachable_call(?oldCtx,?callerInstr),
   drop_context_by_invoc(?callerInstr).
in file interface.dl [110:3-116:41])_");
if(!(rel_191_drop_context_by_invoc->empty()) && rel_25_insensitive->empty() && !(rel_277_delta_subset_merge_reachable_call->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_191_drop_context_by_invoc_op_ctxt,rel_191_drop_context_by_invoc->createContext());
CREATE_OP_CONTEXT(rel_277_delta_subset_merge_reachable_call_op_ctxt,rel_277_delta_subset_merge_reachable_call->createContext());
CREATE_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt,rel_282_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_284_new_subset_merge_merge_op_ctxt,rel_284_new_subset_merge_merge->createContext());
for(const auto& env0 : *rel_277_delta_subset_merge_reachable_call) {
if( rel_191_drop_context_by_invoc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_191_drop_context_by_invoc_op_ctxt)) && !(rel_282_subset_merge_merge->contains(Tuple<RamDomain,3>{{ramBitCast(RamSigned(0)),ramBitCast(env0[1]),ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(RamSigned(0)),ramBitCast(env0[1]),ramBitCast(env0[0])}};
rel_284_new_subset_merge_merge->insert(tuple,READ_OP_CONTEXT(rel_284_new_subset_merge_merge_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(subset._merge.merge(?oldCtx,?callerInstr,?oldCtx) :- 
   subset._merge._reachable_call(?oldCtx,?callerInstr),
   insensitive().
in file interface.dl [119:3-124:19])_");
if(!(rel_25_insensitive->empty()) && !(rel_277_delta_subset_merge_reachable_call->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_277_delta_subset_merge_reachable_call_op_ctxt,rel_277_delta_subset_merge_reachable_call->createContext());
CREATE_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt,rel_282_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_284_new_subset_merge_merge_op_ctxt,rel_284_new_subset_merge_merge->createContext());
for(const auto& env0 : *rel_277_delta_subset_merge_reachable_call) {
if( !(rel_282_subset_merge_merge->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[0])}};
rel_284_new_subset_merge_merge->insert(tuple,READ_OP_CONTEXT(rel_284_new_subset_merge_merge_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(subset._merge.merge([?newItem,?callerCtx],?callerInstr,?callerCtx) :- 
   !insensitive(),
   subset._merge._reachable_call(?callerCtx,?callerInstr),
   context_depth(?callerCtxDepth,?callerCtx),
   max_context_depth(?maxDepth),
   ?callerCtxDepth < ?maxDepth,
   context_item_by_invoc(?callerInstr,?newItem).
in file interface.dl [127:3-138:38])_");
if(!(rel_369_context_depth->empty()) && !(rel_193_context_item_by_invoc->empty()) && !(rel_277_delta_subset_merge_reachable_call->empty()) && rel_25_insensitive->empty() && !(rel_26_max_context_depth->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_26_max_context_depth_op_ctxt,rel_26_max_context_depth->createContext());
CREATE_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt,rel_193_context_item_by_invoc->createContext());
CREATE_OP_CONTEXT(rel_277_delta_subset_merge_reachable_call_op_ctxt,rel_277_delta_subset_merge_reachable_call->createContext());
CREATE_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt,rel_282_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_284_new_subset_merge_merge_op_ctxt,rel_284_new_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_369_context_depth_op_ctxt,rel_369_context_depth->createContext());
CREATE_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt,rel_370_delta_context_depth->createContext());
for(const auto& env0 : *rel_277_delta_subset_merge_reachable_call) {
auto range = rel_369_context_depth->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_369_context_depth_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_370_delta_context_depth->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt)))) {
auto range = rel_26_max_context_depth->lowerUpperRange_2(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},Tuple<RamDomain,1>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_26_max_context_depth_op_ctxt));
for(const auto& env2 : range) {
if( (ramBitCast<RamDomain>(env1[0]) != ramBitCast<RamDomain>(env2[0]))) {
auto range = rel_193_context_item_by_invoc->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_282_subset_merge_merge->contains(Tuple<RamDomain,3>{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env3[1])),ramBitCast(ramBitCast(env0[0]))}}
)),ramBitCast(env0[1]),ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env3[1])),ramBitCast(ramBitCast(env0[0]))}}
)),ramBitCast(env0[1]),ramBitCast(env0[0])}};
rel_284_new_subset_merge_merge->insert(tuple,READ_OP_CONTEXT(rel_284_new_subset_merge_merge_op_ctxt));
}
}
break;
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(subset._merge.merge([?newItem,?callerCtx],?callerInstr,?callerCtx) :- 
   !insensitive(),
   subset._merge._reachable_call(?callerCtx,?callerInstr),
   context_depth(?callerCtxDepth,?callerCtx),
   max_context_depth(?maxDepth),
   ?callerCtxDepth < ?maxDepth,
   context_item_by_invoc(?callerInstr,?newItem).
in file interface.dl [127:3-138:38])_");
if(!(rel_370_delta_context_depth->empty()) && !(rel_193_context_item_by_invoc->empty()) && !(rel_276_subset_merge_reachable_call->empty()) && rel_25_insensitive->empty() && !(rel_26_max_context_depth->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_26_max_context_depth_op_ctxt,rel_26_max_context_depth->createContext());
CREATE_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt,rel_193_context_item_by_invoc->createContext());
CREATE_OP_CONTEXT(rel_276_subset_merge_reachable_call_op_ctxt,rel_276_subset_merge_reachable_call->createContext());
CREATE_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt,rel_282_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_284_new_subset_merge_merge_op_ctxt,rel_284_new_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt,rel_370_delta_context_depth->createContext());
for(const auto& env0 : *rel_276_subset_merge_reachable_call) {
auto range = rel_370_delta_context_depth->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_26_max_context_depth->lowerUpperRange_2(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},Tuple<RamDomain,1>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_26_max_context_depth_op_ctxt));
for(const auto& env2 : range) {
if( (ramBitCast<RamDomain>(env1[0]) != ramBitCast<RamDomain>(env2[0]))) {
auto range = rel_193_context_item_by_invoc->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_282_subset_merge_merge->contains(Tuple<RamDomain,3>{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env3[1])),ramBitCast(ramBitCast(env0[0]))}}
)),ramBitCast(env0[1]),ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env3[1])),ramBitCast(ramBitCast(env0[0]))}}
)),ramBitCast(env0[1]),ramBitCast(env0[0])}};
rel_284_new_subset_merge_merge->insert(tuple,READ_OP_CONTEXT(rel_284_new_subset_merge_merge_op_ctxt));
}
}
break;
}
}
}
}
}
();}
signalHandler->setMsg(R"_(subset._merge.merge([?newItem,?droppedCallerCtx],?callerInstr,?callerCtx) :- 
   !insensitive(),
   subset._merge._reachable_call(?callerCtx,?callerInstr),
   context_depth(?maxDepth,?callerCtx),
   max_context_depth(?maxDepth),
   drop_last(?droppedCallerCtx,?callerCtx),
   context_item_by_invoc(?callerInstr,?newItem).
in file interface.dl [141:3-153:45])_");
if(!(rel_369_context_depth->empty()) && !(rel_193_context_item_by_invoc->empty()) && !(rel_277_delta_subset_merge_reachable_call->empty()) && !(rel_372_drop_last->empty()) && rel_25_insensitive->empty() && !(rel_26_max_context_depth->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_26_max_context_depth_op_ctxt,rel_26_max_context_depth->createContext());
CREATE_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt,rel_193_context_item_by_invoc->createContext());
CREATE_OP_CONTEXT(rel_277_delta_subset_merge_reachable_call_op_ctxt,rel_277_delta_subset_merge_reachable_call->createContext());
CREATE_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt,rel_282_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_284_new_subset_merge_merge_op_ctxt,rel_284_new_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_369_context_depth_op_ctxt,rel_369_context_depth->createContext());
CREATE_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt,rel_370_delta_context_depth->createContext());
CREATE_OP_CONTEXT(rel_372_drop_last_op_ctxt,rel_372_drop_last->createContext());
CREATE_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt,rel_373_delta_drop_last->createContext());
for(const auto& env0 : *rel_277_delta_subset_merge_reachable_call) {
auto range = rel_369_context_depth->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_369_context_depth_op_ctxt));
for(const auto& env1 : range) {
if( rel_26_max_context_depth->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_26_max_context_depth_op_ctxt)) && !(rel_370_delta_context_depth->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt)))) {
auto range = rel_372_drop_last->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_372_drop_last_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_373_delta_drop_last->contains(Tuple<RamDomain,2>{{ramBitCast(env2[0]),ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt)))) {
auto range = rel_193_context_item_by_invoc->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_282_subset_merge_merge->contains(Tuple<RamDomain,3>{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env3[1])),ramBitCast(ramBitCast(env2[0]))}}
)),ramBitCast(env0[1]),ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env3[1])),ramBitCast(ramBitCast(env2[0]))}}
)),ramBitCast(env0[1]),ramBitCast(env0[0])}};
rel_284_new_subset_merge_merge->insert(tuple,READ_OP_CONTEXT(rel_284_new_subset_merge_merge_op_ctxt));
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(subset._merge.merge([?newItem,?droppedCallerCtx],?callerInstr,?callerCtx) :- 
   !insensitive(),
   subset._merge._reachable_call(?callerCtx,?callerInstr),
   context_depth(?maxDepth,?callerCtx),
   max_context_depth(?maxDepth),
   drop_last(?droppedCallerCtx,?callerCtx),
   context_item_by_invoc(?callerInstr,?newItem).
in file interface.dl [141:3-153:45])_");
if(!(rel_370_delta_context_depth->empty()) && !(rel_193_context_item_by_invoc->empty()) && !(rel_276_subset_merge_reachable_call->empty()) && !(rel_372_drop_last->empty()) && rel_25_insensitive->empty() && !(rel_26_max_context_depth->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_26_max_context_depth_op_ctxt,rel_26_max_context_depth->createContext());
CREATE_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt,rel_193_context_item_by_invoc->createContext());
CREATE_OP_CONTEXT(rel_276_subset_merge_reachable_call_op_ctxt,rel_276_subset_merge_reachable_call->createContext());
CREATE_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt,rel_282_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_284_new_subset_merge_merge_op_ctxt,rel_284_new_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt,rel_370_delta_context_depth->createContext());
CREATE_OP_CONTEXT(rel_372_drop_last_op_ctxt,rel_372_drop_last->createContext());
CREATE_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt,rel_373_delta_drop_last->createContext());
for(const auto& env0 : *rel_276_subset_merge_reachable_call) {
auto range = rel_370_delta_context_depth->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt));
for(const auto& env1 : range) {
if( rel_26_max_context_depth->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_26_max_context_depth_op_ctxt))) {
auto range = rel_372_drop_last->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_372_drop_last_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_373_delta_drop_last->contains(Tuple<RamDomain,2>{{ramBitCast(env2[0]),ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt)))) {
auto range = rel_193_context_item_by_invoc->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_282_subset_merge_merge->contains(Tuple<RamDomain,3>{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env3[1])),ramBitCast(ramBitCast(env2[0]))}}
)),ramBitCast(env0[1]),ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env3[1])),ramBitCast(ramBitCast(env2[0]))}}
)),ramBitCast(env0[1]),ramBitCast(env0[0])}};
rel_284_new_subset_merge_merge->insert(tuple,READ_OP_CONTEXT(rel_284_new_subset_merge_merge_op_ctxt));
}
}
}
}
break;
}
}
}
}
();}
signalHandler->setMsg(R"_(subset._merge.merge([?newItem,?droppedCallerCtx],?callerInstr,?callerCtx) :- 
   !insensitive(),
   subset._merge._reachable_call(?callerCtx,?callerInstr),
   context_depth(?maxDepth,?callerCtx),
   max_context_depth(?maxDepth),
   drop_last(?droppedCallerCtx,?callerCtx),
   context_item_by_invoc(?callerInstr,?newItem).
in file interface.dl [141:3-153:45])_");
if(!(rel_369_context_depth->empty()) && !(rel_193_context_item_by_invoc->empty()) && !(rel_276_subset_merge_reachable_call->empty()) && !(rel_373_delta_drop_last->empty()) && rel_25_insensitive->empty() && !(rel_26_max_context_depth->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_26_max_context_depth_op_ctxt,rel_26_max_context_depth->createContext());
CREATE_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt,rel_193_context_item_by_invoc->createContext());
CREATE_OP_CONTEXT(rel_276_subset_merge_reachable_call_op_ctxt,rel_276_subset_merge_reachable_call->createContext());
CREATE_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt,rel_282_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_284_new_subset_merge_merge_op_ctxt,rel_284_new_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_369_context_depth_op_ctxt,rel_369_context_depth->createContext());
CREATE_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt,rel_373_delta_drop_last->createContext());
for(const auto& env0 : *rel_276_subset_merge_reachable_call) {
auto range = rel_369_context_depth->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_369_context_depth_op_ctxt));
for(const auto& env1 : range) {
if( rel_26_max_context_depth->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_26_max_context_depth_op_ctxt))) {
auto range = rel_373_delta_drop_last->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_193_context_item_by_invoc->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_282_subset_merge_merge->contains(Tuple<RamDomain,3>{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env3[1])),ramBitCast(ramBitCast(env2[0]))}}
)),ramBitCast(env0[1]),ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env3[1])),ramBitCast(ramBitCast(env2[0]))}}
)),ramBitCast(env0[1]),ramBitCast(env0[0])}};
rel_284_new_subset_merge_merge->insert(tuple,READ_OP_CONTEXT(rel_284_new_subset_merge_merge_op_ctxt));
}
}
}
break;
}
}
}
}
();}
signalHandler->setMsg(R"_(subset.stripctx.stripctx_operand_points_to(?to,?from) :- 
   subset.operand_points_to(_,?to,_,?from).
in file strip-context-projections.dl [34:3-35:41])_");
if(!(rel_445_delta_subset_operand_points_to->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_285_subset_stripctx_stripctx_operand_points_to_op_ctxt,rel_285_subset_stripctx_stripctx_operand_points_to->createContext());
CREATE_OP_CONTEXT(rel_287_new_subset_stripctx_stripctx_operand_points_to_op_ctxt,rel_287_new_subset_stripctx_stripctx_operand_points_to->createContext());
CREATE_OP_CONTEXT(rel_445_delta_subset_operand_points_to_op_ctxt,rel_445_delta_subset_operand_points_to->createContext());
for(const auto& env0 : *rel_445_delta_subset_operand_points_to) {
if( !(rel_285_subset_stripctx_stripctx_operand_points_to->contains(Tuple<RamDomain,2>{{ramBitCast(env0[1]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_285_subset_stripctx_stripctx_operand_points_to_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[1]),ramBitCast(env0[3])}};
rel_287_new_subset_stripctx_stripctx_operand_points_to->insert(tuple,READ_OP_CONTEXT(rel_287_new_subset_stripctx_stripctx_operand_points_to_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(subset.exception_object._exception_object(?heapAlloc) :- 
   cxx_alloc_exception(?func),
   call_instr_fn_target(?insn,?func),
   heap_allocation_by_instr(?insn,?heapAlloc).
in file cplusplus-exceptions.dl [76:3-81:49])_");
if(!(rel_152_call_instr_fn_target->empty()) && !(rel_316_delta_heap_allocation_by_instr->empty()) && !(rel_161_cxx_alloc_exception->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt,rel_152_call_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_161_cxx_alloc_exception_op_ctxt,rel_161_cxx_alloc_exception->createContext());
CREATE_OP_CONTEXT(rel_288_subset_exception_object_exception_object_op_ctxt,rel_288_subset_exception_object_exception_object->createContext());
CREATE_OP_CONTEXT(rel_290_new_subset_exception_object_exception_object_op_ctxt,rel_290_new_subset_exception_object_exception_object->createContext());
CREATE_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt,rel_316_delta_heap_allocation_by_instr->createContext());
for(const auto& env0 : *rel_161_cxx_alloc_exception) {
auto range = rel_152_call_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_316_delta_heap_allocation_by_instr->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_288_subset_exception_object_exception_object->contains(Tuple<RamDomain,1>{{ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_288_subset_exception_object_exception_object_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env2[1])}};
rel_290_new_subset_exception_object_exception_object->insert(tuple,READ_OP_CONTEXT(rel_290_new_subset_exception_object_exception_object_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(subset.exception_object._exception_object(?heapAlloc) :- 
   cxx_alloc_exception(?func),
   invoke_instr_fn_target(?insn,?func),
   heap_allocation_by_instr(?insn,?heapAlloc).
in file cplusplus-exceptions.dl [83:3-88:49])_");
if(!(rel_177_invoke_instr_fn_target->empty()) && !(rel_316_delta_heap_allocation_by_instr->empty()) && !(rel_161_cxx_alloc_exception->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_161_cxx_alloc_exception_op_ctxt,rel_161_cxx_alloc_exception->createContext());
CREATE_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt,rel_177_invoke_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_288_subset_exception_object_exception_object_op_ctxt,rel_288_subset_exception_object_exception_object->createContext());
CREATE_OP_CONTEXT(rel_290_new_subset_exception_object_exception_object_op_ctxt,rel_290_new_subset_exception_object_exception_object->createContext());
CREATE_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt,rel_316_delta_heap_allocation_by_instr->createContext());
for(const auto& env0 : *rel_161_cxx_alloc_exception) {
auto range = rel_177_invoke_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_316_delta_heap_allocation_by_instr->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_288_subset_exception_object_exception_object->contains(Tuple<RamDomain,1>{{ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_288_subset_exception_object_exception_object_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env2[1])}};
rel_290_new_subset_exception_object_exception_object->insert(tuple,READ_OP_CONTEXT(rel_290_new_subset_exception_object_exception_object_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(subset.exception_object._exception_object(?typedExcObj) :- 
   inlined_constructors(),
   subset.exception_object.heap_allocation_by_alloc_exc(?insn,_),
   subset.type_indication.heap_allocation_by_type_instr(_,?insn,?typedExcObj).
in file cplusplus-exceptions.dl [99:3-103:59])_");
if(!(rel_292_delta_subset_exception_object_heap_allocation_by_alloc_exc->empty()) && !(rel_194_inlined_constructors->empty()) && !(rel_399_subset_type_indication_heap_allocation_by_type_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_288_subset_exception_object_exception_object_op_ctxt,rel_288_subset_exception_object_exception_object->createContext());
CREATE_OP_CONTEXT(rel_290_new_subset_exception_object_exception_object_op_ctxt,rel_290_new_subset_exception_object_exception_object->createContext());
CREATE_OP_CONTEXT(rel_292_delta_subset_exception_object_heap_allocation_by_alloc_exc_op_ctxt,rel_292_delta_subset_exception_object_heap_allocation_by_alloc_exc->createContext());
CREATE_OP_CONTEXT(rel_399_subset_type_indication_heap_allocation_by_type_instr_op_ctxt,rel_399_subset_type_indication_heap_allocation_by_type_instr->createContext());
CREATE_OP_CONTEXT(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr_op_ctxt,rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->createContext());
for(const auto& env0 : *rel_292_delta_subset_exception_object_heap_allocation_by_alloc_exc) {
auto range = rel_399_subset_type_indication_heap_allocation_by_type_instr->lowerUpperRange_010(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_399_subset_type_indication_heap_allocation_by_type_instr_op_ctxt));
for(const auto& env1 : range) {
if( !(!rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->lowerUpperRange_011(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast(env1[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr_op_ctxt)).empty()) && !(rel_288_subset_exception_object_exception_object->contains(Tuple<RamDomain,1>{{ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_288_subset_exception_object_exception_object_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env1[2])}};
rel_290_new_subset_exception_object_exception_object->insert(tuple,READ_OP_CONTEXT(rel_290_new_subset_exception_object_exception_object_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(subset.exception_object._exception_object(?typedExcObj) :- 
   inlined_constructors(),
   subset.exception_object.heap_allocation_by_alloc_exc(?insn,_),
   subset.type_indication.heap_allocation_by_type_instr(_,?insn,?typedExcObj).
in file cplusplus-exceptions.dl [99:3-103:59])_");
if(!(rel_291_subset_exception_object_heap_allocation_by_alloc_exc->empty()) && !(rel_194_inlined_constructors->empty()) && !(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_288_subset_exception_object_exception_object_op_ctxt,rel_288_subset_exception_object_exception_object->createContext());
CREATE_OP_CONTEXT(rel_290_new_subset_exception_object_exception_object_op_ctxt,rel_290_new_subset_exception_object_exception_object->createContext());
CREATE_OP_CONTEXT(rel_291_subset_exception_object_heap_allocation_by_alloc_exc_op_ctxt,rel_291_subset_exception_object_heap_allocation_by_alloc_exc->createContext());
CREATE_OP_CONTEXT(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr_op_ctxt,rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->createContext());
for(const auto& env0 : *rel_291_subset_exception_object_heap_allocation_by_alloc_exc) {
auto range = rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->lowerUpperRange_010(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_288_subset_exception_object_exception_object->contains(Tuple<RamDomain,1>{{ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_288_subset_exception_object_exception_object_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env1[2])}};
rel_290_new_subset_exception_object_exception_object->insert(tuple,READ_OP_CONTEXT(rel_290_new_subset_exception_object_exception_object_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(subset.exception_object.heap_allocation_by_alloc_exc(?insn,?heapAlloc) :- 
   cxx_alloc_exception(?func),
   call_instr_fn_target(?insn,?func),
   heap_allocation_by_instr(?insn,?heapAlloc).
in file cplusplus-exceptions.dl [76:3-81:49])_");
if(!(rel_152_call_instr_fn_target->empty()) && !(rel_316_delta_heap_allocation_by_instr->empty()) && !(rel_161_cxx_alloc_exception->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt,rel_152_call_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_161_cxx_alloc_exception_op_ctxt,rel_161_cxx_alloc_exception->createContext());
CREATE_OP_CONTEXT(rel_291_subset_exception_object_heap_allocation_by_alloc_exc_op_ctxt,rel_291_subset_exception_object_heap_allocation_by_alloc_exc->createContext());
CREATE_OP_CONTEXT(rel_293_new_subset_exception_object_heap_allocation_by_alloc_exc_op_ctxt,rel_293_new_subset_exception_object_heap_allocation_by_alloc_exc->createContext());
CREATE_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt,rel_316_delta_heap_allocation_by_instr->createContext());
for(const auto& env0 : *rel_161_cxx_alloc_exception) {
auto range = rel_152_call_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_316_delta_heap_allocation_by_instr->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_291_subset_exception_object_heap_allocation_by_alloc_exc->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_291_subset_exception_object_heap_allocation_by_alloc_exc_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(env2[1])}};
rel_293_new_subset_exception_object_heap_allocation_by_alloc_exc->insert(tuple,READ_OP_CONTEXT(rel_293_new_subset_exception_object_heap_allocation_by_alloc_exc_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(subset.exception_object.heap_allocation_by_alloc_exc(?insn,?heapAlloc) :- 
   cxx_alloc_exception(?func),
   invoke_instr_fn_target(?insn,?func),
   heap_allocation_by_instr(?insn,?heapAlloc).
in file cplusplus-exceptions.dl [83:3-88:49])_");
if(!(rel_177_invoke_instr_fn_target->empty()) && !(rel_316_delta_heap_allocation_by_instr->empty()) && !(rel_161_cxx_alloc_exception->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_161_cxx_alloc_exception_op_ctxt,rel_161_cxx_alloc_exception->createContext());
CREATE_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt,rel_177_invoke_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_291_subset_exception_object_heap_allocation_by_alloc_exc_op_ctxt,rel_291_subset_exception_object_heap_allocation_by_alloc_exc->createContext());
CREATE_OP_CONTEXT(rel_293_new_subset_exception_object_heap_allocation_by_alloc_exc_op_ctxt,rel_293_new_subset_exception_object_heap_allocation_by_alloc_exc->createContext());
CREATE_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt,rel_316_delta_heap_allocation_by_instr->createContext());
for(const auto& env0 : *rel_161_cxx_alloc_exception) {
auto range = rel_177_invoke_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_316_delta_heap_allocation_by_instr->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_291_subset_exception_object_heap_allocation_by_alloc_exc->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_291_subset_exception_object_heap_allocation_by_alloc_exc_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(env2[1])}};
rel_293_new_subset_exception_object_heap_allocation_by_alloc_exc->insert(tuple,READ_OP_CONTEXT(rel_293_new_subset_exception_object_heap_allocation_by_alloc_exc_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(argv_ptr_points_to(subAlloc,cat(cat("*argv[",to_string(index)),"]-alloc")) :- 
   +disconnected0(),
   argv_alloc(argvAlloc),
   static_subobjects.alloc_subregion_at_array_index(argvAlloc,index,subAlloc).
in file entry-points.dl [38:1-47:62])_");
if(!(rel_146_argv_alloc->empty()) && !(rel_3_disconnected0->empty()) && !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_146_argv_alloc_op_ctxt,rel_146_argv_alloc->createContext());
CREATE_OP_CONTEXT(rel_294_argv_ptr_points_to_op_ctxt,rel_294_argv_ptr_points_to->createContext());
CREATE_OP_CONTEXT(rel_296_new_argv_ptr_points_to_op_ctxt,rel_296_new_argv_ptr_points_to->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_146_argv_alloc) {
auto range = rel_391_delta_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_100(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_294_argv_ptr_points_to->contains(Tuple<RamDomain,2>{{ramBitCast(env1[2]),ramBitCast(symTable.encode(symTable.decode(symTable.encode(symTable.decode(RamSigned(59)) + symTable.decode(symTable.encode(std::to_string(env1[1]))))) + symTable.decode(RamSigned(60))))}},READ_OP_CONTEXT(rel_294_argv_ptr_points_to_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[2]),ramBitCast(symTable.encode(symTable.decode(symTable.encode(symTable.decode(RamSigned(59)) + symTable.decode(symTable.encode(std::to_string(env1[1]))))) + symTable.decode(RamSigned(60))))}};
rel_296_new_argv_ptr_points_to->insert(tuple,READ_OP_CONTEXT(rel_296_new_argv_ptr_points_to_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation(?alloc) :- 
   basic_allocation(?alloc).
in file allocations-decl.dl [23:1-24:28])_");
if(!(rel_301_delta_basic_allocation->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_297_allocation_op_ctxt,rel_297_allocation->createContext());
CREATE_OP_CONTEXT(rel_299_new_allocation_op_ctxt,rel_299_new_allocation->createContext());
CREATE_OP_CONTEXT(rel_301_delta_basic_allocation_op_ctxt,rel_301_delta_basic_allocation->createContext());
for(const auto& env0 : *rel_301_delta_basic_allocation) {
if( !(rel_297_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_297_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_299_new_allocation->insert(tuple,READ_OP_CONTEXT(rel_299_new_allocation_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(allocation(?alloc) :- 
   subset.exception_object._exception_object(?alloc).
in file cplusplus-exceptions.dl [69:3-70:31])_");
if(!(rel_289_delta_subset_exception_object_exception_object->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_289_delta_subset_exception_object_exception_object_op_ctxt,rel_289_delta_subset_exception_object_exception_object->createContext());
CREATE_OP_CONTEXT(rel_297_allocation_op_ctxt,rel_297_allocation->createContext());
CREATE_OP_CONTEXT(rel_299_new_allocation_op_ctxt,rel_299_new_allocation->createContext());
for(const auto& env0 : *rel_289_delta_subset_exception_object_exception_object) {
if( !(rel_297_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_297_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_299_new_allocation->insert(tuple,READ_OP_CONTEXT(rel_299_new_allocation_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(allocation(?region) :- 
   static_subobjects._alloc_subregion(?region,_,_,_,_,_).
in file allocations-subobjects.dl [287:3-287:51])_");
if(!(rel_376_delta_static_subobjects_alloc_subregion->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_297_allocation_op_ctxt,rel_297_allocation->createContext());
CREATE_OP_CONTEXT(rel_299_new_allocation_op_ctxt,rel_299_new_allocation->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
for(const auto& env0 : *rel_376_delta_static_subobjects_alloc_subregion) {
if( !(rel_297_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_297_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_299_new_allocation->insert(tuple,READ_OP_CONTEXT(rel_299_new_allocation_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(allocation(?region) :- 
   subset_subobjects._alloc_subregion(?region,_,_,_,_,_).
in file allocations-subobjects.dl [287:3-287:51])_");
if(!(rel_538_delta_subset_subobjects_alloc_subregion->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_297_allocation_op_ctxt,rel_297_allocation->createContext());
CREATE_OP_CONTEXT(rel_299_new_allocation_op_ctxt,rel_299_new_allocation->createContext());
CREATE_OP_CONTEXT(rel_538_delta_subset_subobjects_alloc_subregion_op_ctxt,rel_538_delta_subset_subobjects_alloc_subregion->createContext());
for(const auto& env0 : *rel_538_delta_subset_subobjects_alloc_subregion) {
if( !(rel_297_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_297_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_299_new_allocation->insert(tuple,READ_OP_CONTEXT(rel_299_new_allocation_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(basic_allocation(?alloc) :- 
   stack_allocation(?alloc).
in file allocations-decl.dl [26:1-30:32])_");
if(!(rel_304_delta_stack_allocation->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_300_basic_allocation_op_ctxt,rel_300_basic_allocation->createContext());
CREATE_OP_CONTEXT(rel_302_new_basic_allocation_op_ctxt,rel_302_new_basic_allocation->createContext());
CREATE_OP_CONTEXT(rel_304_delta_stack_allocation_op_ctxt,rel_304_delta_stack_allocation->createContext());
for(const auto& env0 : *rel_304_delta_stack_allocation) {
if( !(rel_300_basic_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_300_basic_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_302_new_basic_allocation->insert(tuple,READ_OP_CONTEXT(rel_302_new_basic_allocation_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(basic_allocation(?alloc) :- 
   heap_allocation(?alloc).
in file allocations-decl.dl [26:1-30:32])_");
if(!(rel_307_delta_heap_allocation->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_300_basic_allocation_op_ctxt,rel_300_basic_allocation->createContext());
CREATE_OP_CONTEXT(rel_302_new_basic_allocation_op_ctxt,rel_302_new_basic_allocation->createContext());
CREATE_OP_CONTEXT(rel_307_delta_heap_allocation_op_ctxt,rel_307_delta_heap_allocation->createContext());
for(const auto& env0 : *rel_307_delta_heap_allocation) {
if( !(rel_300_basic_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_300_basic_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_302_new_basic_allocation->insert(tuple,READ_OP_CONTEXT(rel_302_new_basic_allocation_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(basic_allocation(?alloc) :- 
   signature_allocation(?alloc).
in file allocations-decl.dl [26:1-30:32])_");
if(!(rel_310_delta_signature_allocation->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_300_basic_allocation_op_ctxt,rel_300_basic_allocation->createContext());
CREATE_OP_CONTEXT(rel_302_new_basic_allocation_op_ctxt,rel_302_new_basic_allocation->createContext());
CREATE_OP_CONTEXT(rel_310_delta_signature_allocation_op_ctxt,rel_310_delta_signature_allocation->createContext());
for(const auto& env0 : *rel_310_delta_signature_allocation) {
if( !(rel_300_basic_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_300_basic_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_302_new_basic_allocation->insert(tuple,READ_OP_CONTEXT(rel_302_new_basic_allocation_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(basic_allocation(cat(cat("*argv[",to_string(index)),"]-alloc")) :- 
   +disconnected0(),
   argv_alloc(argvAlloc),
   static_subobjects.alloc_subregion_at_array_index(argvAlloc,index,_).
in file entry-points.dl [38:1-47:62])_");
if(!(rel_146_argv_alloc->empty()) && !(rel_3_disconnected0->empty()) && !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_146_argv_alloc_op_ctxt,rel_146_argv_alloc->createContext());
CREATE_OP_CONTEXT(rel_300_basic_allocation_op_ctxt,rel_300_basic_allocation->createContext());
CREATE_OP_CONTEXT(rel_302_new_basic_allocation_op_ctxt,rel_302_new_basic_allocation->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_146_argv_alloc) {
auto range = rel_391_delta_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_100(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_300_basic_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(symTable.encode(symTable.decode(symTable.encode(symTable.decode(RamSigned(59)) + symTable.decode(symTable.encode(std::to_string(env1[1]))))) + symTable.decode(RamSigned(60))))}},READ_OP_CONTEXT(rel_300_basic_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(symTable.encode(symTable.decode(symTable.encode(symTable.decode(RamSigned(59)) + symTable.decode(symTable.encode(std::to_string(env1[1]))))) + symTable.decode(RamSigned(60))))}};
rel_302_new_basic_allocation->insert(tuple,READ_OP_CONTEXT(rel_302_new_basic_allocation_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(stack_allocation(cat("*typed_stack_alloc",?funcName,"[",?ptrType," ",?name,"]")) :- 
   stack_allocation_by_instr(?allocInstr,?alloc),
   subset.type_indication.stack_type_indication(?type,_,?alloc),
   instr_assigns_to(?allocInstr,?var),
   variable_in_func(?var,?func),
   variable_has_name(?var,?name),
   func_name(?func,?funcName),
   pointer_type_has_component(?ptrType,?type).
in file type-back-propagation.dl [152:3-165:88])_");
if(!(rel_279_subset_type_indication_stack_type_indication->empty()) && !(rel_138_func_name->empty()) && !(rel_173_instr_assigns_to->empty()) && !(rel_227_variable_has_name->empty()) && !(rel_231_variable_in_func->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_313_delta_stack_allocation_by_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt,rel_173_instr_assigns_to->createContext());
CREATE_OP_CONTEXT(rel_227_variable_has_name_op_ctxt,rel_227_variable_has_name->createContext());
CREATE_OP_CONTEXT(rel_231_variable_in_func_op_ctxt,rel_231_variable_in_func->createContext());
CREATE_OP_CONTEXT(rel_279_subset_type_indication_stack_type_indication_op_ctxt,rel_279_subset_type_indication_stack_type_indication->createContext());
CREATE_OP_CONTEXT(rel_280_delta_subset_type_indication_stack_type_indication_op_ctxt,rel_280_delta_subset_type_indication_stack_type_indication->createContext());
CREATE_OP_CONTEXT(rel_303_stack_allocation_op_ctxt,rel_303_stack_allocation->createContext());
CREATE_OP_CONTEXT(rel_305_new_stack_allocation_op_ctxt,rel_305_new_stack_allocation->createContext());
CREATE_OP_CONTEXT(rel_313_delta_stack_allocation_by_instr_op_ctxt,rel_313_delta_stack_allocation_by_instr->createContext());
for(const auto& env0 : *rel_313_delta_stack_allocation_by_instr) {
auto range = rel_279_subset_type_indication_stack_type_indication->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[1])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_279_subset_type_indication_stack_type_indication_op_ctxt));
for(const auto& env1 : range) {
if( !(!rel_280_delta_subset_type_indication_stack_type_indication->lowerUpperRange_101(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[1])}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_280_delta_subset_type_indication_stack_type_indication_op_ctxt)).empty())) {
auto range = rel_173_instr_assigns_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_231_variable_in_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_231_variable_in_func_op_ctxt));
for(const auto& env3 : range) {
auto range = rel_227_variable_has_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_227_variable_has_name_op_ctxt));
for(const auto& env4 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env5 : range) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env1[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env6 : range) {
if( !(rel_303_stack_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(symTable.encode(symTable.decode(RamSigned(61)) + symTable.decode(env5[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env6[0]) + symTable.decode(RamSigned(63)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(64))))}},READ_OP_CONTEXT(rel_303_stack_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(symTable.encode(symTable.decode(RamSigned(61)) + symTable.decode(env5[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env6[0]) + symTable.decode(RamSigned(63)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(64))))}};
rel_305_new_stack_allocation->insert(tuple,READ_OP_CONTEXT(rel_305_new_stack_allocation_op_ctxt));
}
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(stack_allocation(cat("*typed_stack_alloc",?funcName,"[",?ptrType," ",?name,"]")) :- 
   stack_allocation_by_instr(?allocInstr,?alloc),
   subset.type_indication.stack_type_indication(?type,_,?alloc),
   instr_assigns_to(?allocInstr,?var),
   variable_in_func(?var,?func),
   variable_has_name(?var,?name),
   func_name(?func,?funcName),
   pointer_type_has_component(?ptrType,?type).
in file type-back-propagation.dl [152:3-165:88])_");
if(!(rel_280_delta_subset_type_indication_stack_type_indication->empty()) && !(rel_138_func_name->empty()) && !(rel_173_instr_assigns_to->empty()) && !(rel_227_variable_has_name->empty()) && !(rel_231_variable_in_func->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_312_stack_allocation_by_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt,rel_173_instr_assigns_to->createContext());
CREATE_OP_CONTEXT(rel_227_variable_has_name_op_ctxt,rel_227_variable_has_name->createContext());
CREATE_OP_CONTEXT(rel_231_variable_in_func_op_ctxt,rel_231_variable_in_func->createContext());
CREATE_OP_CONTEXT(rel_280_delta_subset_type_indication_stack_type_indication_op_ctxt,rel_280_delta_subset_type_indication_stack_type_indication->createContext());
CREATE_OP_CONTEXT(rel_303_stack_allocation_op_ctxt,rel_303_stack_allocation->createContext());
CREATE_OP_CONTEXT(rel_305_new_stack_allocation_op_ctxt,rel_305_new_stack_allocation->createContext());
CREATE_OP_CONTEXT(rel_312_stack_allocation_by_instr_op_ctxt,rel_312_stack_allocation_by_instr->createContext());
for(const auto& env0 : *rel_312_stack_allocation_by_instr) {
auto range = rel_280_delta_subset_type_indication_stack_type_indication->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[1])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_280_delta_subset_type_indication_stack_type_indication_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_173_instr_assigns_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_231_variable_in_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_231_variable_in_func_op_ctxt));
for(const auto& env3 : range) {
auto range = rel_227_variable_has_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_227_variable_has_name_op_ctxt));
for(const auto& env4 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env5 : range) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env1[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env6 : range) {
if( !(rel_303_stack_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(symTable.encode(symTable.decode(RamSigned(61)) + symTable.decode(env5[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env6[0]) + symTable.decode(RamSigned(63)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(64))))}},READ_OP_CONTEXT(rel_303_stack_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(symTable.encode(symTable.decode(RamSigned(61)) + symTable.decode(env5[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env6[0]) + symTable.decode(RamSigned(63)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(64))))}};
rel_305_new_stack_allocation->insert(tuple,READ_OP_CONTEXT(rel_305_new_stack_allocation_op_ctxt));
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(stack_allocation(cat("*stack_alloc",<inlined_funcName_262>,"[",?type," ",<inlined_varName_262>,"]")) :- 
   alloca_instr(?instr),
   instr_assigns_to(?instr,?var),
   instr_func(?instr,?instrFunc),
   variable_has_type(?var,?type),
   subset.callgraph.reachable_func(?instrFunc),
   func_name(?instrFunc,<inlined_funcName_262>),
   variable_has_name(?var,<inlined_varName_262>).
in file allocations.dl [26:1-34:65])_");
if(!(rel_173_instr_assigns_to->empty()) && !(rel_138_func_name->empty()) && !(rel_175_instr_func->empty()) && !(rel_30_variable_has_type->empty()) && !(rel_415_delta_subset_callgraph_reachable_func->empty()) && !(rel_227_variable_has_name->empty()) && !(rel_147_alloca_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_30_variable_has_type_op_ctxt,rel_30_variable_has_type->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_147_alloca_instr_op_ctxt,rel_147_alloca_instr->createContext());
CREATE_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt,rel_173_instr_assigns_to->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_227_variable_has_name_op_ctxt,rel_227_variable_has_name->createContext());
CREATE_OP_CONTEXT(rel_303_stack_allocation_op_ctxt,rel_303_stack_allocation->createContext());
CREATE_OP_CONTEXT(rel_305_new_stack_allocation_op_ctxt,rel_305_new_stack_allocation->createContext());
CREATE_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt,rel_415_delta_subset_callgraph_reachable_func->createContext());
for(const auto& env0 : *rel_147_alloca_instr) {
auto range = rel_173_instr_assigns_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env2 : range) {
if( rel_415_delta_subset_callgraph_reachable_func->contains(Tuple<RamDomain,1>{{ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt))) {
auto range = rel_30_variable_has_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_30_variable_has_type_op_ctxt));
for(const auto& env3 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env4 : range) {
auto range = rel_227_variable_has_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_227_variable_has_name_op_ctxt));
for(const auto& env5 : range) {
if( !(rel_303_stack_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(symTable.encode(symTable.decode(RamSigned(65)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env3[1]) + symTable.decode(RamSigned(63)) + symTable.decode(env5[1]) + symTable.decode(RamSigned(64))))}},READ_OP_CONTEXT(rel_303_stack_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(symTable.encode(symTable.decode(RamSigned(65)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env3[1]) + symTable.decode(RamSigned(63)) + symTable.decode(env5[1]) + symTable.decode(RamSigned(64))))}};
rel_305_new_stack_allocation->insert(tuple,READ_OP_CONTEXT(rel_305_new_stack_allocation_op_ctxt));
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(heap_allocation(?heapAlloc) :- 
   func_name(?func,"@malloc"),
   call_instr_fn_target(?insn,?func),
   heap_allocation_by_instr(?insn,?heapAlloc).
in file allocations.dl [64:1-68:47])_");
if(!(rel_152_call_instr_fn_target->empty()) && !(rel_316_delta_heap_allocation_by_instr->empty()) && !(rel_138_func_name->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt,rel_152_call_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_306_heap_allocation_op_ctxt,rel_306_heap_allocation->createContext());
CREATE_OP_CONTEXT(rel_308_new_heap_allocation_op_ctxt,rel_308_new_heap_allocation->createContext());
CREATE_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt,rel_316_delta_heap_allocation_by_instr->createContext());
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(14))}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(14))}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env0 : range) {
auto range = rel_152_call_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_316_delta_heap_allocation_by_instr->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_306_heap_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_306_heap_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env2[1])}};
rel_308_new_heap_allocation->insert(tuple,READ_OP_CONTEXT(rel_308_new_heap_allocation_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(heap_allocation(?heapAlloc) :- 
   func_name(?func,"@calloc"),
   call_instr_fn_target(?insn,?func),
   heap_allocation_by_instr(?insn,?heapAlloc).
in file allocations.dl [70:1-74:47])_");
if(!(rel_152_call_instr_fn_target->empty()) && !(rel_316_delta_heap_allocation_by_instr->empty()) && !(rel_138_func_name->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt,rel_152_call_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_306_heap_allocation_op_ctxt,rel_306_heap_allocation->createContext());
CREATE_OP_CONTEXT(rel_308_new_heap_allocation_op_ctxt,rel_308_new_heap_allocation->createContext());
CREATE_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt,rel_316_delta_heap_allocation_by_instr->createContext());
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(15))}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(15))}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env0 : range) {
auto range = rel_152_call_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_316_delta_heap_allocation_by_instr->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_306_heap_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_306_heap_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env2[1])}};
rel_308_new_heap_allocation->insert(tuple,READ_OP_CONTEXT(rel_308_new_heap_allocation_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(heap_allocation(?heapAlloc) :- 
   func_name(?func,"@realloc"),
   call_instr_fn_target(?insn,?func),
   heap_allocation_by_instr(?insn,?heapAlloc).
in file allocations.dl [76:1-80:47])_");
if(!(rel_152_call_instr_fn_target->empty()) && !(rel_316_delta_heap_allocation_by_instr->empty()) && !(rel_138_func_name->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt,rel_152_call_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_306_heap_allocation_op_ctxt,rel_306_heap_allocation->createContext());
CREATE_OP_CONTEXT(rel_308_new_heap_allocation_op_ctxt,rel_308_new_heap_allocation->createContext());
CREATE_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt,rel_316_delta_heap_allocation_by_instr->createContext());
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(16))}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(16))}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env0 : range) {
auto range = rel_152_call_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_316_delta_heap_allocation_by_instr->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_306_heap_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_306_heap_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env2[1])}};
rel_308_new_heap_allocation->insert(tuple,READ_OP_CONTEXT(rel_308_new_heap_allocation_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(heap_allocation(?heapAlloc) :- 
   func_name(?func,"@mmap"),
   call_instr_fn_target(?insn,?func),
   heap_allocation_by_instr(?insn,?heapAlloc).
in file allocations.dl [82:1-86:47])_");
if(!(rel_152_call_instr_fn_target->empty()) && !(rel_316_delta_heap_allocation_by_instr->empty()) && !(rel_138_func_name->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt,rel_152_call_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_306_heap_allocation_op_ctxt,rel_306_heap_allocation->createContext());
CREATE_OP_CONTEXT(rel_308_new_heap_allocation_op_ctxt,rel_308_new_heap_allocation->createContext());
CREATE_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt,rel_316_delta_heap_allocation_by_instr->createContext());
auto range = rel_138_func_name->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(17))}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(17))}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env0 : range) {
auto range = rel_152_call_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_316_delta_heap_allocation_by_instr->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_306_heap_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_306_heap_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env2[1])}};
rel_308_new_heap_allocation->insert(tuple,READ_OP_CONTEXT(rel_308_new_heap_allocation_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(heap_allocation(cat("*typed_heap_alloc",?funcName,"[",?ptrType," ",?name,"]")) :- 
   heap_allocation_by_instr(?allocInstr,?alloc),
   subset.type_indication.ty_indication(?type,_,?alloc),
   instr_assigns_to(?allocInstr,?var),
   variable_in_func(?var,?func),
   variable_has_name(?var,?name),
   func_name(?func,?funcName),
   pointer_type_has_component(?ptrType,?type).
in file type-back-propagation.dl [78:3-91:89])_");
if(!(rel_408_subset_type_indication_ty_indication->empty()) && !(rel_138_func_name->empty()) && !(rel_173_instr_assigns_to->empty()) && !(rel_227_variable_has_name->empty()) && !(rel_231_variable_in_func->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_316_delta_heap_allocation_by_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt,rel_173_instr_assigns_to->createContext());
CREATE_OP_CONTEXT(rel_227_variable_has_name_op_ctxt,rel_227_variable_has_name->createContext());
CREATE_OP_CONTEXT(rel_231_variable_in_func_op_ctxt,rel_231_variable_in_func->createContext());
CREATE_OP_CONTEXT(rel_306_heap_allocation_op_ctxt,rel_306_heap_allocation->createContext());
CREATE_OP_CONTEXT(rel_308_new_heap_allocation_op_ctxt,rel_308_new_heap_allocation->createContext());
CREATE_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt,rel_316_delta_heap_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_408_subset_type_indication_ty_indication_op_ctxt,rel_408_subset_type_indication_ty_indication->createContext());
CREATE_OP_CONTEXT(rel_409_delta_subset_type_indication_ty_indication_op_ctxt,rel_409_delta_subset_type_indication_ty_indication->createContext());
for(const auto& env0 : *rel_316_delta_heap_allocation_by_instr) {
auto range = rel_408_subset_type_indication_ty_indication->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[1])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_408_subset_type_indication_ty_indication_op_ctxt));
for(const auto& env1 : range) {
if( !(!rel_409_delta_subset_type_indication_ty_indication->lowerUpperRange_101(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[1])}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_409_delta_subset_type_indication_ty_indication_op_ctxt)).empty())) {
auto range = rel_173_instr_assigns_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_231_variable_in_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_231_variable_in_func_op_ctxt));
for(const auto& env3 : range) {
auto range = rel_227_variable_has_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_227_variable_has_name_op_ctxt));
for(const auto& env4 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env5 : range) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env1[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env6 : range) {
if( !(rel_306_heap_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(symTable.encode(symTable.decode(RamSigned(66)) + symTable.decode(env5[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env6[0]) + symTable.decode(RamSigned(63)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(64))))}},READ_OP_CONTEXT(rel_306_heap_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(symTable.encode(symTable.decode(RamSigned(66)) + symTable.decode(env5[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env6[0]) + symTable.decode(RamSigned(63)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(64))))}};
rel_308_new_heap_allocation->insert(tuple,READ_OP_CONTEXT(rel_308_new_heap_allocation_op_ctxt));
}
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(heap_allocation(cat("*typed_heap_alloc",?funcName,"[",?ptrType," ",?name,"]")) :- 
   heap_allocation_by_instr(?allocInstr,?alloc),
   subset.type_indication.ty_indication(?type,_,?alloc),
   instr_assigns_to(?allocInstr,?var),
   variable_in_func(?var,?func),
   variable_has_name(?var,?name),
   func_name(?func,?funcName),
   pointer_type_has_component(?ptrType,?type).
in file type-back-propagation.dl [78:3-91:89])_");
if(!(rel_409_delta_subset_type_indication_ty_indication->empty()) && !(rel_138_func_name->empty()) && !(rel_173_instr_assigns_to->empty()) && !(rel_227_variable_has_name->empty()) && !(rel_231_variable_in_func->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_315_heap_allocation_by_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt,rel_173_instr_assigns_to->createContext());
CREATE_OP_CONTEXT(rel_227_variable_has_name_op_ctxt,rel_227_variable_has_name->createContext());
CREATE_OP_CONTEXT(rel_231_variable_in_func_op_ctxt,rel_231_variable_in_func->createContext());
CREATE_OP_CONTEXT(rel_306_heap_allocation_op_ctxt,rel_306_heap_allocation->createContext());
CREATE_OP_CONTEXT(rel_308_new_heap_allocation_op_ctxt,rel_308_new_heap_allocation->createContext());
CREATE_OP_CONTEXT(rel_315_heap_allocation_by_instr_op_ctxt,rel_315_heap_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_409_delta_subset_type_indication_ty_indication_op_ctxt,rel_409_delta_subset_type_indication_ty_indication->createContext());
for(const auto& env0 : *rel_315_heap_allocation_by_instr) {
auto range = rel_409_delta_subset_type_indication_ty_indication->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[1])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_409_delta_subset_type_indication_ty_indication_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_173_instr_assigns_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_231_variable_in_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_231_variable_in_func_op_ctxt));
for(const auto& env3 : range) {
auto range = rel_227_variable_has_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_227_variable_has_name_op_ctxt));
for(const auto& env4 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env5 : range) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env1[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env6 : range) {
if( !(rel_306_heap_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(symTable.encode(symTable.decode(RamSigned(66)) + symTable.decode(env5[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env6[0]) + symTable.decode(RamSigned(63)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(64))))}},READ_OP_CONTEXT(rel_306_heap_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(symTable.encode(symTable.decode(RamSigned(66)) + symTable.decode(env5[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env6[0]) + symTable.decode(RamSigned(63)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(64))))}};
rel_308_new_heap_allocation->insert(tuple,READ_OP_CONTEXT(rel_308_new_heap_allocation_op_ctxt));
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(heap_allocation(cat("*heap_alloc",<inlined_funcName_257>,"[",?type," ",<inlined_varName_257>,"]")) :- 
   heap_alloc_func(?func),
   call_instr_fn_target(?instr,?func),
   instr_assigns_to(?instr,?var),
   instr_func(?instr,?instrFunc),
   variable_has_type(?var,?type),
   pointer_type_has_component(?type,_),
   subset.callgraph.reachable_func(?instrFunc),
   func_name(?instrFunc,<inlined_funcName_257>),
   variable_has_name(?var,<inlined_varName_257>).
in file allocations.dl [48:1-62:63])_");
if(!(rel_152_call_instr_fn_target->empty()) && !(rel_138_func_name->empty()) && !(rel_173_instr_assigns_to->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_175_instr_func->empty()) && !(rel_30_variable_has_type->empty()) && !(rel_415_delta_subset_callgraph_reachable_func->empty()) && !(rel_227_variable_has_name->empty()) && !(rel_171_heap_alloc_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_30_variable_has_type_op_ctxt,rel_30_variable_has_type->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt,rel_152_call_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_171_heap_alloc_func_op_ctxt,rel_171_heap_alloc_func->createContext());
CREATE_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt,rel_173_instr_assigns_to->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_227_variable_has_name_op_ctxt,rel_227_variable_has_name->createContext());
CREATE_OP_CONTEXT(rel_306_heap_allocation_op_ctxt,rel_306_heap_allocation->createContext());
CREATE_OP_CONTEXT(rel_308_new_heap_allocation_op_ctxt,rel_308_new_heap_allocation->createContext());
CREATE_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt,rel_415_delta_subset_callgraph_reachable_func->createContext());
for(const auto& env0 : *rel_171_heap_alloc_func) {
auto range = rel_152_call_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_173_instr_assigns_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env3 : range) {
if( rel_415_delta_subset_callgraph_reachable_func->contains(Tuple<RamDomain,1>{{ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt))) {
auto range = rel_30_variable_has_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_30_variable_has_type_op_ctxt));
for(const auto& env4 : range) {
if( !rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env4[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env4[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt)).empty()) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env5 : range) {
auto range = rel_227_variable_has_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_227_variable_has_name_op_ctxt));
for(const auto& env6 : range) {
if( !(rel_306_heap_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(symTable.encode(symTable.decode(RamSigned(67)) + symTable.decode(env5[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(63)) + symTable.decode(env6[1]) + symTable.decode(RamSigned(64))))}},READ_OP_CONTEXT(rel_306_heap_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(symTable.encode(symTable.decode(RamSigned(67)) + symTable.decode(env5[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(63)) + symTable.decode(env6[1]) + symTable.decode(RamSigned(64))))}};
rel_308_new_heap_allocation->insert(tuple,READ_OP_CONTEXT(rel_308_new_heap_allocation_op_ctxt));
}
}
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(heap_allocation(cat("*heap_alloc",<inlined_funcName_258>,"[",?type," ",<inlined_varName_258>,"]")) :- 
   heap_alloc_func(?func),
   invoke_instr_fn_target(?instr,?func),
   instr_assigns_to(?instr,?var),
   instr_func(?instr,?instrFunc),
   variable_has_type(?var,?type),
   pointer_type_has_component(?type,_),
   subset.callgraph.reachable_func(?instrFunc),
   func_name(?instrFunc,<inlined_funcName_258>),
   variable_has_name(?var,<inlined_varName_258>).
in file allocations.dl [48:1-62:63])_");
if(!(rel_177_invoke_instr_fn_target->empty()) && !(rel_138_func_name->empty()) && !(rel_173_instr_assigns_to->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_175_instr_func->empty()) && !(rel_30_variable_has_type->empty()) && !(rel_415_delta_subset_callgraph_reachable_func->empty()) && !(rel_227_variable_has_name->empty()) && !(rel_171_heap_alloc_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_30_variable_has_type_op_ctxt,rel_30_variable_has_type->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_171_heap_alloc_func_op_ctxt,rel_171_heap_alloc_func->createContext());
CREATE_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt,rel_173_instr_assigns_to->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt,rel_177_invoke_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_227_variable_has_name_op_ctxt,rel_227_variable_has_name->createContext());
CREATE_OP_CONTEXT(rel_306_heap_allocation_op_ctxt,rel_306_heap_allocation->createContext());
CREATE_OP_CONTEXT(rel_308_new_heap_allocation_op_ctxt,rel_308_new_heap_allocation->createContext());
CREATE_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt,rel_415_delta_subset_callgraph_reachable_func->createContext());
for(const auto& env0 : *rel_171_heap_alloc_func) {
auto range = rel_177_invoke_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_173_instr_assigns_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env3 : range) {
if( rel_415_delta_subset_callgraph_reachable_func->contains(Tuple<RamDomain,1>{{ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt))) {
auto range = rel_30_variable_has_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_30_variable_has_type_op_ctxt));
for(const auto& env4 : range) {
if( !rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env4[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env4[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt)).empty()) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env5 : range) {
auto range = rel_227_variable_has_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_227_variable_has_name_op_ctxt));
for(const auto& env6 : range) {
if( !(rel_306_heap_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(symTable.encode(symTable.decode(RamSigned(67)) + symTable.decode(env5[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(63)) + symTable.decode(env6[1]) + symTable.decode(RamSigned(64))))}},READ_OP_CONTEXT(rel_306_heap_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(symTable.encode(symTable.decode(RamSigned(67)) + symTable.decode(env5[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(63)) + symTable.decode(env6[1]) + symTable.decode(RamSigned(64))))}};
rel_308_new_heap_allocation->insert(tuple,READ_OP_CONTEXT(rel_308_new_heap_allocation_op_ctxt));
}
}
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(signature_allocation(?sigAlloc) :- 
   subset_signatures._sig_var_alloc(_,?sigAlloc,_,_,_).
in file signatures.dl [148:3-149:36])_");
if(!(rel_451_delta_subset_signatures_sig_var_alloc->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_309_signature_allocation_op_ctxt,rel_309_signature_allocation->createContext());
CREATE_OP_CONTEXT(rel_311_new_signature_allocation_op_ctxt,rel_311_new_signature_allocation->createContext());
CREATE_OP_CONTEXT(rel_451_delta_subset_signatures_sig_var_alloc_op_ctxt,rel_451_delta_subset_signatures_sig_var_alloc->createContext());
for(const auto& env0 : *rel_451_delta_subset_signatures_sig_var_alloc) {
if( !(rel_309_signature_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_309_signature_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[1])}};
rel_311_new_signature_allocation->insert(tuple,READ_OP_CONTEXT(rel_311_new_signature_allocation_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(signature_allocation(?sigAlloc) :- 
   subset_signatures._sig_ptr_alloc(_,?sigAlloc,_,_,_).
in file signatures.dl [148:3-149:36])_");
if(!(rel_454_delta_subset_signatures_sig_ptr_alloc->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_309_signature_allocation_op_ctxt,rel_309_signature_allocation->createContext());
CREATE_OP_CONTEXT(rel_311_new_signature_allocation_op_ctxt,rel_311_new_signature_allocation->createContext());
CREATE_OP_CONTEXT(rel_454_delta_subset_signatures_sig_ptr_alloc_op_ctxt,rel_454_delta_subset_signatures_sig_ptr_alloc->createContext());
for(const auto& env0 : *rel_454_delta_subset_signatures_sig_ptr_alloc) {
if( !(rel_309_signature_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_309_signature_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[1])}};
rel_311_new_signature_allocation->insert(tuple,READ_OP_CONTEXT(rel_311_new_signature_allocation_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(stack_allocation_by_instr(?instr,cat("*stack_alloc",<inlined_funcName_263>,"[",?type," ",<inlined_varName_263>,"]")) :- 
   alloca_instr(?instr),
   instr_assigns_to(?instr,?var),
   instr_func(?instr,?instrFunc),
   variable_has_type(?var,?type),
   subset.callgraph.reachable_func(?instrFunc),
   func_name(?instrFunc,<inlined_funcName_263>),
   variable_has_name(?var,<inlined_varName_263>).
in file allocations.dl [26:1-34:65])_");
if(!(rel_173_instr_assigns_to->empty()) && !(rel_138_func_name->empty()) && !(rel_175_instr_func->empty()) && !(rel_30_variable_has_type->empty()) && !(rel_415_delta_subset_callgraph_reachable_func->empty()) && !(rel_227_variable_has_name->empty()) && !(rel_147_alloca_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_30_variable_has_type_op_ctxt,rel_30_variable_has_type->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_147_alloca_instr_op_ctxt,rel_147_alloca_instr->createContext());
CREATE_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt,rel_173_instr_assigns_to->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_227_variable_has_name_op_ctxt,rel_227_variable_has_name->createContext());
CREATE_OP_CONTEXT(rel_312_stack_allocation_by_instr_op_ctxt,rel_312_stack_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_314_new_stack_allocation_by_instr_op_ctxt,rel_314_new_stack_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt,rel_415_delta_subset_callgraph_reachable_func->createContext());
for(const auto& env0 : *rel_147_alloca_instr) {
auto range = rel_173_instr_assigns_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env2 : range) {
if( rel_415_delta_subset_callgraph_reachable_func->contains(Tuple<RamDomain,1>{{ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt))) {
auto range = rel_30_variable_has_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_30_variable_has_type_op_ctxt));
for(const auto& env3 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env4 : range) {
auto range = rel_227_variable_has_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_227_variable_has_name_op_ctxt));
for(const auto& env5 : range) {
if( !(rel_312_stack_allocation_by_instr->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(65)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env3[1]) + symTable.decode(RamSigned(63)) + symTable.decode(env5[1]) + symTable.decode(RamSigned(64))))}},READ_OP_CONTEXT(rel_312_stack_allocation_by_instr_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(65)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env3[1]) + symTable.decode(RamSigned(63)) + symTable.decode(env5[1]) + symTable.decode(RamSigned(64))))}};
rel_314_new_stack_allocation_by_instr->insert(tuple,READ_OP_CONTEXT(rel_314_new_stack_allocation_by_instr_op_ctxt));
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(heap_allocation_by_instr(?instr,cat("*heap_alloc",<inlined_funcName_259>,"[",?type," ",<inlined_varName_259>,"]")) :- 
   heap_alloc_func(?func),
   call_instr_fn_target(?instr,?func),
   instr_assigns_to(?instr,?var),
   instr_func(?instr,?instrFunc),
   variable_has_type(?var,?type),
   pointer_type_has_component(?type,_),
   subset.callgraph.reachable_func(?instrFunc),
   func_name(?instrFunc,<inlined_funcName_259>),
   variable_has_name(?var,<inlined_varName_259>).
in file allocations.dl [48:1-62:63])_");
if(!(rel_152_call_instr_fn_target->empty()) && !(rel_138_func_name->empty()) && !(rel_173_instr_assigns_to->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_175_instr_func->empty()) && !(rel_30_variable_has_type->empty()) && !(rel_415_delta_subset_callgraph_reachable_func->empty()) && !(rel_227_variable_has_name->empty()) && !(rel_171_heap_alloc_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_30_variable_has_type_op_ctxt,rel_30_variable_has_type->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt,rel_152_call_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_171_heap_alloc_func_op_ctxt,rel_171_heap_alloc_func->createContext());
CREATE_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt,rel_173_instr_assigns_to->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_227_variable_has_name_op_ctxt,rel_227_variable_has_name->createContext());
CREATE_OP_CONTEXT(rel_315_heap_allocation_by_instr_op_ctxt,rel_315_heap_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_317_new_heap_allocation_by_instr_op_ctxt,rel_317_new_heap_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt,rel_415_delta_subset_callgraph_reachable_func->createContext());
for(const auto& env0 : *rel_171_heap_alloc_func) {
auto range = rel_152_call_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_173_instr_assigns_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env3 : range) {
if( rel_415_delta_subset_callgraph_reachable_func->contains(Tuple<RamDomain,1>{{ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt))) {
auto range = rel_30_variable_has_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_30_variable_has_type_op_ctxt));
for(const auto& env4 : range) {
if( !rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env4[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env4[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt)).empty()) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env5 : range) {
auto range = rel_227_variable_has_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_227_variable_has_name_op_ctxt));
for(const auto& env6 : range) {
if( !(rel_315_heap_allocation_by_instr->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(67)) + symTable.decode(env5[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(63)) + symTable.decode(env6[1]) + symTable.decode(RamSigned(64))))}},READ_OP_CONTEXT(rel_315_heap_allocation_by_instr_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(67)) + symTable.decode(env5[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(63)) + symTable.decode(env6[1]) + symTable.decode(RamSigned(64))))}};
rel_317_new_heap_allocation_by_instr->insert(tuple,READ_OP_CONTEXT(rel_317_new_heap_allocation_by_instr_op_ctxt));
}
}
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(heap_allocation_by_instr(?instr,cat("*heap_alloc",<inlined_funcName_260>,"[",?type," ",<inlined_varName_260>,"]")) :- 
   heap_alloc_func(?func),
   invoke_instr_fn_target(?instr,?func),
   instr_assigns_to(?instr,?var),
   instr_func(?instr,?instrFunc),
   variable_has_type(?var,?type),
   pointer_type_has_component(?type,_),
   subset.callgraph.reachable_func(?instrFunc),
   func_name(?instrFunc,<inlined_funcName_260>),
   variable_has_name(?var,<inlined_varName_260>).
in file allocations.dl [48:1-62:63])_");
if(!(rel_177_invoke_instr_fn_target->empty()) && !(rel_138_func_name->empty()) && !(rel_173_instr_assigns_to->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_175_instr_func->empty()) && !(rel_30_variable_has_type->empty()) && !(rel_415_delta_subset_callgraph_reachable_func->empty()) && !(rel_227_variable_has_name->empty()) && !(rel_171_heap_alloc_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_30_variable_has_type_op_ctxt,rel_30_variable_has_type->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_171_heap_alloc_func_op_ctxt,rel_171_heap_alloc_func->createContext());
CREATE_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt,rel_173_instr_assigns_to->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt,rel_177_invoke_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_227_variable_has_name_op_ctxt,rel_227_variable_has_name->createContext());
CREATE_OP_CONTEXT(rel_315_heap_allocation_by_instr_op_ctxt,rel_315_heap_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_317_new_heap_allocation_by_instr_op_ctxt,rel_317_new_heap_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt,rel_415_delta_subset_callgraph_reachable_func->createContext());
for(const auto& env0 : *rel_171_heap_alloc_func) {
auto range = rel_177_invoke_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_173_instr_assigns_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env3 : range) {
if( rel_415_delta_subset_callgraph_reachable_func->contains(Tuple<RamDomain,1>{{ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt))) {
auto range = rel_30_variable_has_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_30_variable_has_type_op_ctxt));
for(const auto& env4 : range) {
if( !rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env4[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env4[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt)).empty()) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env5 : range) {
auto range = rel_227_variable_has_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_227_variable_has_name_op_ctxt));
for(const auto& env6 : range) {
if( !(rel_315_heap_allocation_by_instr->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(67)) + symTable.decode(env5[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(63)) + symTable.decode(env6[1]) + symTable.decode(RamSigned(64))))}},READ_OP_CONTEXT(rel_315_heap_allocation_by_instr_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(67)) + symTable.decode(env5[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(63)) + symTable.decode(env6[1]) + symTable.decode(RamSigned(64))))}};
rel_317_new_heap_allocation_by_instr->insert(tuple,READ_OP_CONTEXT(rel_317_new_heap_allocation_by_instr_op_ctxt));
}
}
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(ptr_compatible_allocation(?alloc) :- 
   stack_allocation(?alloc).
in file allocations-decl.dl [80:1-83:33])_");
if(!(rel_304_delta_stack_allocation->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_304_delta_stack_allocation_op_ctxt,rel_304_delta_stack_allocation->createContext());
CREATE_OP_CONTEXT(rel_318_ptr_compatible_allocation_op_ctxt,rel_318_ptr_compatible_allocation->createContext());
CREATE_OP_CONTEXT(rel_320_new_ptr_compatible_allocation_op_ctxt,rel_320_new_ptr_compatible_allocation->createContext());
for(const auto& env0 : *rel_304_delta_stack_allocation) {
if( !(rel_318_ptr_compatible_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_318_ptr_compatible_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_320_new_ptr_compatible_allocation->insert(tuple,READ_OP_CONTEXT(rel_320_new_ptr_compatible_allocation_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(ptr_compatible_allocation(?alloc) :- 
   heap_allocation(?alloc).
in file allocations-decl.dl [80:1-83:33])_");
if(!(rel_307_delta_heap_allocation->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_307_delta_heap_allocation_op_ctxt,rel_307_delta_heap_allocation->createContext());
CREATE_OP_CONTEXT(rel_318_ptr_compatible_allocation_op_ctxt,rel_318_ptr_compatible_allocation->createContext());
CREATE_OP_CONTEXT(rel_320_new_ptr_compatible_allocation_op_ctxt,rel_320_new_ptr_compatible_allocation->createContext());
for(const auto& env0 : *rel_307_delta_heap_allocation) {
if( !(rel_318_ptr_compatible_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_318_ptr_compatible_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_320_new_ptr_compatible_allocation->insert(tuple,READ_OP_CONTEXT(rel_320_new_ptr_compatible_allocation_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(ptr_compatible_allocation(?alloc) :- 
   signature_allocation(?alloc).
in file allocations-decl.dl [80:1-83:33])_");
if(!(rel_310_delta_signature_allocation->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_310_delta_signature_allocation_op_ctxt,rel_310_delta_signature_allocation->createContext());
CREATE_OP_CONTEXT(rel_318_ptr_compatible_allocation_op_ctxt,rel_318_ptr_compatible_allocation->createContext());
CREATE_OP_CONTEXT(rel_320_new_ptr_compatible_allocation_op_ctxt,rel_320_new_ptr_compatible_allocation->createContext());
for(const auto& env0 : *rel_310_delta_signature_allocation) {
if( !(rel_318_ptr_compatible_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_318_ptr_compatible_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_320_new_ptr_compatible_allocation->insert(tuple,READ_OP_CONTEXT(rel_320_new_ptr_compatible_allocation_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(ptr_compatible_allocation(?alloc) :- 
   ptr_compatible_allocation(?baseAlloc),
   static_subobjects._alloc_subregion(?alloc,?baseAlloc,_,_,_,_).
in file allocations-subobjects.dl [289:3-291:46])_");
if(!(rel_319_delta_ptr_compatible_allocation->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_318_ptr_compatible_allocation_op_ctxt,rel_318_ptr_compatible_allocation->createContext());
CREATE_OP_CONTEXT(rel_319_delta_ptr_compatible_allocation_op_ctxt,rel_319_delta_ptr_compatible_allocation->createContext());
CREATE_OP_CONTEXT(rel_320_new_ptr_compatible_allocation_op_ctxt,rel_320_new_ptr_compatible_allocation->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
for(const auto& env0 : *rel_319_delta_ptr_compatible_allocation) {
auto range = rel_375_static_subobjects_alloc_subregion->lowerUpperRange_010000(Tuple<RamDomain,6>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_318_ptr_compatible_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_318_ptr_compatible_allocation_op_ctxt))) && !(!rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_110000(Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt)).empty())) {
Tuple<RamDomain,1> tuple{{ramBitCast(env1[0])}};
rel_320_new_ptr_compatible_allocation->insert(tuple,READ_OP_CONTEXT(rel_320_new_ptr_compatible_allocation_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(ptr_compatible_allocation(?alloc) :- 
   ptr_compatible_allocation(?baseAlloc),
   static_subobjects._alloc_subregion(?alloc,?baseAlloc,_,_,_,_).
in file allocations-subobjects.dl [289:3-291:46])_");
if(!(rel_318_ptr_compatible_allocation->empty()) && !(rel_376_delta_static_subobjects_alloc_subregion->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_318_ptr_compatible_allocation_op_ctxt,rel_318_ptr_compatible_allocation->createContext());
CREATE_OP_CONTEXT(rel_320_new_ptr_compatible_allocation_op_ctxt,rel_320_new_ptr_compatible_allocation->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
for(const auto& env0 : *rel_318_ptr_compatible_allocation) {
auto range = rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_010000(Tuple<RamDomain,6>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_318_ptr_compatible_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_318_ptr_compatible_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env1[0])}};
rel_320_new_ptr_compatible_allocation->insert(tuple,READ_OP_CONTEXT(rel_320_new_ptr_compatible_allocation_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(ptr_compatible_allocation(?alloc) :- 
   ptr_compatible_allocation(?baseAlloc),
   subset_subobjects._alloc_subregion(?alloc,?baseAlloc,_,_,_,_).
in file allocations-subobjects.dl [289:3-291:46])_");
if(!(rel_319_delta_ptr_compatible_allocation->empty()) && !(rel_537_subset_subobjects_alloc_subregion->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_318_ptr_compatible_allocation_op_ctxt,rel_318_ptr_compatible_allocation->createContext());
CREATE_OP_CONTEXT(rel_319_delta_ptr_compatible_allocation_op_ctxt,rel_319_delta_ptr_compatible_allocation->createContext());
CREATE_OP_CONTEXT(rel_320_new_ptr_compatible_allocation_op_ctxt,rel_320_new_ptr_compatible_allocation->createContext());
CREATE_OP_CONTEXT(rel_537_subset_subobjects_alloc_subregion_op_ctxt,rel_537_subset_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_538_delta_subset_subobjects_alloc_subregion_op_ctxt,rel_538_delta_subset_subobjects_alloc_subregion->createContext());
for(const auto& env0 : *rel_319_delta_ptr_compatible_allocation) {
auto range = rel_537_subset_subobjects_alloc_subregion->lowerUpperRange_010000(Tuple<RamDomain,6>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_537_subset_subobjects_alloc_subregion_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_318_ptr_compatible_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_318_ptr_compatible_allocation_op_ctxt))) && !(!rel_538_delta_subset_subobjects_alloc_subregion->lowerUpperRange_110000(Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_538_delta_subset_subobjects_alloc_subregion_op_ctxt)).empty())) {
Tuple<RamDomain,1> tuple{{ramBitCast(env1[0])}};
rel_320_new_ptr_compatible_allocation->insert(tuple,READ_OP_CONTEXT(rel_320_new_ptr_compatible_allocation_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(ptr_compatible_allocation(?alloc) :- 
   ptr_compatible_allocation(?baseAlloc),
   subset_subobjects._alloc_subregion(?alloc,?baseAlloc,_,_,_,_).
in file allocations-subobjects.dl [289:3-291:46])_");
if(!(rel_318_ptr_compatible_allocation->empty()) && !(rel_538_delta_subset_subobjects_alloc_subregion->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_318_ptr_compatible_allocation_op_ctxt,rel_318_ptr_compatible_allocation->createContext());
CREATE_OP_CONTEXT(rel_320_new_ptr_compatible_allocation_op_ctxt,rel_320_new_ptr_compatible_allocation->createContext());
CREATE_OP_CONTEXT(rel_538_delta_subset_subobjects_alloc_subregion_op_ctxt,rel_538_delta_subset_subobjects_alloc_subregion->createContext());
for(const auto& env0 : *rel_318_ptr_compatible_allocation) {
auto range = rel_538_delta_subset_subobjects_alloc_subregion->lowerUpperRange_010000(Tuple<RamDomain,6>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_538_delta_subset_subobjects_alloc_subregion_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_318_ptr_compatible_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_318_ptr_compatible_allocation_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env1[0])}};
rel_320_new_ptr_compatible_allocation->insert(tuple,READ_OP_CONTEXT(rel_320_new_ptr_compatible_allocation_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(static_allocation_type(?stackAlloc,?type) :- 
   alloca_instr(?instr),
   alloca_instr_type(?instr,?type),
   stack_allocation_by_instr(?instr,?stackAlloc).
in file allocations.dl [36:1-39:51])_");
if(!(rel_148_alloca_instr_type->empty()) && !(rel_313_delta_stack_allocation_by_instr->empty()) && !(rel_147_alloca_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_147_alloca_instr_op_ctxt,rel_147_alloca_instr->createContext());
CREATE_OP_CONTEXT(rel_148_alloca_instr_type_op_ctxt,rel_148_alloca_instr_type->createContext());
CREATE_OP_CONTEXT(rel_313_delta_stack_allocation_by_instr_op_ctxt,rel_313_delta_stack_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_323_new_static_allocation_type_op_ctxt,rel_323_new_static_allocation_type->createContext());
for(const auto& env0 : *rel_147_alloca_instr) {
auto range = rel_148_alloca_instr_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_148_alloca_instr_type_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_313_delta_stack_allocation_by_instr->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_313_delta_stack_allocation_by_instr_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env2[1]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env2[1]),ramBitCast(env1[1])}};
rel_323_new_static_allocation_type->insert(tuple,READ_OP_CONTEXT(rel_323_new_static_allocation_type_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(static_allocation_type(cat(cat("*argv[",to_string(index)),"]-alloc"),i8PtrType) :- 
   argv_alloc(argvAlloc),
   static_subobjects.alloc_subregion_at_array_index(argvAlloc,index,_),
   int8_type(i8),
   pointer_type_has_component(i8PtrType,i8).
in file entry-points.dl [38:1-47:62])_");
if(!(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_1_int8_type->empty()) && !(rel_146_argv_alloc->empty()) && !(rel_2_pointer_type_has_component->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_1_int8_type_op_ctxt,rel_1_int8_type->createContext());
CREATE_OP_CONTEXT(rel_146_argv_alloc_op_ctxt,rel_146_argv_alloc->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_323_new_static_allocation_type_op_ctxt,rel_323_new_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_146_argv_alloc) {
auto range = rel_391_delta_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_100(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
for(const auto& env2 : *rel_1_int8_type) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env2[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env2[0])}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(symTable.encode(symTable.decode(symTable.encode(symTable.decode(RamSigned(59)) + symTable.decode(symTable.encode(std::to_string(env1[1]))))) + symTable.decode(RamSigned(60)))),ramBitCast(env3[0])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(symTable.encode(symTable.decode(symTable.encode(symTable.decode(RamSigned(59)) + symTable.decode(symTable.encode(std::to_string(env1[1]))))) + symTable.decode(RamSigned(60)))),ramBitCast(env3[0])}};
rel_323_new_static_allocation_type->insert(tuple,READ_OP_CONTEXT(rel_323_new_static_allocation_type_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(static_allocation_type(?alloc,?type) :- 
   static_subobjects._alloc_subregion(?alloc,_,_,_,_,?type).
in file allocations-subobjects.dl [569:1-570:57])_");
if(!(rel_376_delta_static_subobjects_alloc_subregion->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_323_new_static_allocation_type_op_ctxt,rel_323_new_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
for(const auto& env0 : *rel_376_delta_static_subobjects_alloc_subregion) {
if( !(rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env0[5])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env0[5])}};
rel_323_new_static_allocation_type->insert(tuple,READ_OP_CONTEXT(rel_323_new_static_allocation_type_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(static_allocation_type(cat("*heap_alloc",<inlined_funcName_264>,"[",?type," ",<inlined_varName_264>,"]"),?elementType) :- 
   heap_alloc_func(?func),
   call_instr_fn_target(?instr,?func),
   instr_assigns_to(?instr,?var),
   instr_func(?instr,?instrFunc),
   variable_has_type(?var,?type),
   pointer_type_has_component(?type,?elementType),
   subset.callgraph.reachable_func(?instrFunc),
   func_name(?instrFunc,<inlined_funcName_264>),
   variable_has_name(?var,<inlined_varName_264>).
in file allocations.dl [48:1-62:63])_");
if(!(rel_152_call_instr_fn_target->empty()) && !(rel_138_func_name->empty()) && !(rel_173_instr_assigns_to->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_175_instr_func->empty()) && !(rel_30_variable_has_type->empty()) && !(rel_415_delta_subset_callgraph_reachable_func->empty()) && !(rel_227_variable_has_name->empty()) && !(rel_171_heap_alloc_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_30_variable_has_type_op_ctxt,rel_30_variable_has_type->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt,rel_152_call_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_171_heap_alloc_func_op_ctxt,rel_171_heap_alloc_func->createContext());
CREATE_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt,rel_173_instr_assigns_to->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_227_variable_has_name_op_ctxt,rel_227_variable_has_name->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_323_new_static_allocation_type_op_ctxt,rel_323_new_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt,rel_415_delta_subset_callgraph_reachable_func->createContext());
for(const auto& env0 : *rel_171_heap_alloc_func) {
auto range = rel_152_call_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_173_instr_assigns_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env3 : range) {
if( rel_415_delta_subset_callgraph_reachable_func->contains(Tuple<RamDomain,1>{{ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt))) {
auto range = rel_30_variable_has_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_30_variable_has_type_op_ctxt));
for(const auto& env4 : range) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env4[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env4[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env5 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env6 : range) {
auto range = rel_227_variable_has_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_227_variable_has_name_op_ctxt));
for(const auto& env7 : range) {
if( !(rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(symTable.encode(symTable.decode(RamSigned(67)) + symTable.decode(env6[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(63)) + symTable.decode(env7[1]) + symTable.decode(RamSigned(64)))),ramBitCast(env5[1])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(symTable.encode(symTable.decode(RamSigned(67)) + symTable.decode(env6[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(63)) + symTable.decode(env7[1]) + symTable.decode(RamSigned(64)))),ramBitCast(env5[1])}};
rel_323_new_static_allocation_type->insert(tuple,READ_OP_CONTEXT(rel_323_new_static_allocation_type_op_ctxt));
}
}
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(static_allocation_type(cat("*heap_alloc",<inlined_funcName_265>,"[",?type," ",<inlined_varName_265>,"]"),?elementType) :- 
   heap_alloc_func(?func),
   invoke_instr_fn_target(?instr,?func),
   instr_assigns_to(?instr,?var),
   instr_func(?instr,?instrFunc),
   variable_has_type(?var,?type),
   pointer_type_has_component(?type,?elementType),
   subset.callgraph.reachable_func(?instrFunc),
   func_name(?instrFunc,<inlined_funcName_265>),
   variable_has_name(?var,<inlined_varName_265>).
in file allocations.dl [48:1-62:63])_");
if(!(rel_177_invoke_instr_fn_target->empty()) && !(rel_138_func_name->empty()) && !(rel_173_instr_assigns_to->empty()) && !(rel_2_pointer_type_has_component->empty()) && !(rel_175_instr_func->empty()) && !(rel_30_variable_has_type->empty()) && !(rel_415_delta_subset_callgraph_reachable_func->empty()) && !(rel_227_variable_has_name->empty()) && !(rel_171_heap_alloc_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_30_variable_has_type_op_ctxt,rel_30_variable_has_type->createContext());
CREATE_OP_CONTEXT(rel_138_func_name_op_ctxt,rel_138_func_name->createContext());
CREATE_OP_CONTEXT(rel_171_heap_alloc_func_op_ctxt,rel_171_heap_alloc_func->createContext());
CREATE_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt,rel_173_instr_assigns_to->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt,rel_177_invoke_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_227_variable_has_name_op_ctxt,rel_227_variable_has_name->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_323_new_static_allocation_type_op_ctxt,rel_323_new_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt,rel_415_delta_subset_callgraph_reachable_func->createContext());
for(const auto& env0 : *rel_171_heap_alloc_func) {
auto range = rel_177_invoke_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_173_instr_assigns_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_175_instr_func->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env3 : range) {
if( rel_415_delta_subset_callgraph_reachable_func->contains(Tuple<RamDomain,1>{{ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt))) {
auto range = rel_30_variable_has_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_30_variable_has_type_op_ctxt));
for(const auto& env4 : range) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env4[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env4[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env5 : range) {
auto range = rel_138_func_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_138_func_name_op_ctxt));
for(const auto& env6 : range) {
auto range = rel_227_variable_has_name->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_227_variable_has_name_op_ctxt));
for(const auto& env7 : range) {
if( !(rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(symTable.encode(symTable.decode(RamSigned(67)) + symTable.decode(env6[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(63)) + symTable.decode(env7[1]) + symTable.decode(RamSigned(64)))),ramBitCast(env5[1])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(symTable.encode(symTable.decode(RamSigned(67)) + symTable.decode(env6[1]) + symTable.decode(RamSigned(62)) + symTable.decode(env4[1]) + symTable.decode(RamSigned(63)) + symTable.decode(env7[1]) + symTable.decode(RamSigned(64)))),ramBitCast(env5[1])}};
rel_323_new_static_allocation_type->insert(tuple,READ_OP_CONTEXT(rel_323_new_static_allocation_type_op_ctxt));
}
}
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?globalAlloc,?n) :- 
   global_allocation_by_variable(?globalVar,?globalAlloc),
   global_var_linkage(?globalVar,?linkage),
   !external_linkage_type(?linkage),
   static_allocation_type(?globalAlloc,?type),
   type_has_size(?type,?n),
   !typeinfo_vtable(?globalVar,_).
in file allocations-sizes.dl [15:1-21:36])_");
if(!(rel_225_global_var_linkage->empty()) && !(rel_322_delta_static_allocation_type->empty()) && !(rel_166_global_allocation_by_variable->empty()) && !(rel_216_type_has_size->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_166_global_allocation_by_variable_op_ctxt,rel_166_global_allocation_by_variable->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_224_external_linkage_type_op_ctxt,rel_224_external_linkage_type->createContext());
CREATE_OP_CONTEXT(rel_225_global_var_linkage_op_ctxt,rel_225_global_var_linkage->createContext());
CREATE_OP_CONTEXT(rel_226_typeinfo_vtable_op_ctxt,rel_226_typeinfo_vtable->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
for(const auto& env0 : *rel_166_global_allocation_by_variable) {
if( !(!rel_226_typeinfo_vtable->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_226_typeinfo_vtable_op_ctxt)).empty())) {
auto range = rel_225_global_var_linkage->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_225_global_var_linkage_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_224_external_linkage_type->contains(Tuple<RamDomain,1>{{ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_224_external_linkage_type_op_ctxt)))) {
auto range = rel_322_delta_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[1]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[1]),ramBitCast(env3[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
break;
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?stackAlloc,?size) :- 
   alloca_instr(?insn),
   !alloca_instr_size(?insn,_),
   stack_allocation_by_instr(?insn,?stackAlloc),
   static_allocation_type(?stackAlloc,?type),
   type_has_size(?type,?size).
in file allocations-sizes.dl [57:1-62:32])_");
if(!(rel_313_delta_stack_allocation_by_instr->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_147_alloca_instr->empty()) && !(rel_216_type_has_size->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_147_alloca_instr_op_ctxt,rel_147_alloca_instr->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_223_alloca_instr_size_op_ctxt,rel_223_alloca_instr_size->createContext());
CREATE_OP_CONTEXT(rel_313_delta_stack_allocation_by_instr_op_ctxt,rel_313_delta_stack_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
for(const auto& env0 : *rel_147_alloca_instr) {
if( !(!rel_223_alloca_instr_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_223_alloca_instr_size_op_ctxt)).empty())) {
auto range = rel_313_delta_stack_allocation_by_instr->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_313_delta_stack_allocation_by_instr_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_321_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env1[1]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)))) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env1[1]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[1]),ramBitCast(env3[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?stackAlloc,?size) :- 
   alloca_instr(?insn),
   !alloca_instr_size(?insn,_),
   stack_allocation_by_instr(?insn,?stackAlloc),
   static_allocation_type(?stackAlloc,?type),
   type_has_size(?type,?size).
in file allocations-sizes.dl [57:1-62:32])_");
if(!(rel_312_stack_allocation_by_instr->empty()) && !(rel_322_delta_static_allocation_type->empty()) && !(rel_147_alloca_instr->empty()) && !(rel_216_type_has_size->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_147_alloca_instr_op_ctxt,rel_147_alloca_instr->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_223_alloca_instr_size_op_ctxt,rel_223_alloca_instr_size->createContext());
CREATE_OP_CONTEXT(rel_312_stack_allocation_by_instr_op_ctxt,rel_312_stack_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
for(const auto& env0 : *rel_147_alloca_instr) {
if( !(!rel_223_alloca_instr_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_223_alloca_instr_size_op_ctxt)).empty())) {
auto range = rel_312_stack_allocation_by_instr->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_312_stack_allocation_by_instr_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_322_delta_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env1[1]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[1]),ramBitCast(env3[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?heapAlloc,?size) :- 
   heap_allocation_by_instr(?insn,?heapAlloc),
   sized_alloc_instr(?insn,?size).
in file allocations-sizes.dl [78:1-80:36])_");
if(!(rel_316_delta_heap_allocation_by_instr->empty()) && !(rel_178_sized_alloc_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt,rel_178_sized_alloc_instr->createContext());
CREATE_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt,rel_316_delta_heap_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
for(const auto& env0 : *rel_316_delta_heap_allocation_by_instr) {
auto range = rel_178_sized_alloc_instr->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[1]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[1]),ramBitCast(env1[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?alloc,?size) :- 
   stack_allocation_by_instr(?insn,?stackAlloc),
   allocation_size(?stackAlloc,?size),
   subset.type_indication.stack_allocation_by_type_instr(_,?insn,?alloc).
in file allocations-sizes.dl [133:1-136:53])_");
if(!(rel_324_allocation_size->empty()) && !(rel_405_subset_type_indication_stack_allocation_by_type_instr->empty()) && !(rel_313_delta_stack_allocation_by_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_313_delta_stack_allocation_by_instr_op_ctxt,rel_313_delta_stack_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt,rel_325_delta_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_405_subset_type_indication_stack_allocation_by_type_instr_op_ctxt,rel_405_subset_type_indication_stack_allocation_by_type_instr->createContext());
CREATE_OP_CONTEXT(rel_406_delta_subset_type_indication_stack_allocation_by_type_instr_op_ctxt,rel_406_delta_subset_type_indication_stack_allocation_by_type_instr->createContext());
for(const auto& env0 : *rel_313_delta_stack_allocation_by_instr) {
auto range = rel_324_allocation_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_325_delta_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[1]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt)))) {
auto range = rel_405_subset_type_indication_stack_allocation_by_type_instr->lowerUpperRange_010(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_405_subset_type_indication_stack_allocation_by_type_instr_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env2[2]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt))) && !(!rel_406_delta_subset_type_indication_stack_allocation_by_type_instr->lowerUpperRange_011(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast(env2[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_406_delta_subset_type_indication_stack_allocation_by_type_instr_op_ctxt)).empty())) {
Tuple<RamDomain,2> tuple{{ramBitCast(env2[2]),ramBitCast(env1[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?alloc,?size) :- 
   stack_allocation_by_instr(?insn,?stackAlloc),
   allocation_size(?stackAlloc,?size),
   subset.type_indication.stack_allocation_by_type_instr(_,?insn,?alloc).
in file allocations-sizes.dl [133:1-136:53])_");
if(!(rel_325_delta_allocation_size->empty()) && !(rel_405_subset_type_indication_stack_allocation_by_type_instr->empty()) && !(rel_312_stack_allocation_by_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_312_stack_allocation_by_instr_op_ctxt,rel_312_stack_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt,rel_325_delta_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_405_subset_type_indication_stack_allocation_by_type_instr_op_ctxt,rel_405_subset_type_indication_stack_allocation_by_type_instr->createContext());
CREATE_OP_CONTEXT(rel_406_delta_subset_type_indication_stack_allocation_by_type_instr_op_ctxt,rel_406_delta_subset_type_indication_stack_allocation_by_type_instr->createContext());
for(const auto& env0 : *rel_312_stack_allocation_by_instr) {
auto range = rel_325_delta_allocation_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_405_subset_type_indication_stack_allocation_by_type_instr->lowerUpperRange_010(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_405_subset_type_indication_stack_allocation_by_type_instr_op_ctxt));
for(const auto& env2 : range) {
if( !(!rel_406_delta_subset_type_indication_stack_allocation_by_type_instr->lowerUpperRange_011(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast(env2[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_406_delta_subset_type_indication_stack_allocation_by_type_instr_op_ctxt)).empty()) && !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env2[2]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env2[2]),ramBitCast(env1[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?alloc,?size) :- 
   stack_allocation_by_instr(?insn,?stackAlloc),
   allocation_size(?stackAlloc,?size),
   subset.type_indication.stack_allocation_by_type_instr(_,?insn,?alloc).
in file allocations-sizes.dl [133:1-136:53])_");
if(!(rel_324_allocation_size->empty()) && !(rel_406_delta_subset_type_indication_stack_allocation_by_type_instr->empty()) && !(rel_312_stack_allocation_by_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_312_stack_allocation_by_instr_op_ctxt,rel_312_stack_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_406_delta_subset_type_indication_stack_allocation_by_type_instr_op_ctxt,rel_406_delta_subset_type_indication_stack_allocation_by_type_instr->createContext());
for(const auto& env0 : *rel_312_stack_allocation_by_instr) {
auto range = rel_324_allocation_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_406_delta_subset_type_indication_stack_allocation_by_type_instr->lowerUpperRange_010(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_406_delta_subset_type_indication_stack_allocation_by_type_instr_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env2[2]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env2[2]),ramBitCast(env1[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?alloc,?size) :- 
   heap_allocation_by_instr(?insn,?heapAlloc),
   allocation_size(?heapAlloc,?size),
   subset.type_indication.heap_allocation_by_type_instr(_,?insn,?alloc).
in file allocations-sizes.dl [138:1-141:52])_");
if(!(rel_324_allocation_size->empty()) && !(rel_399_subset_type_indication_heap_allocation_by_type_instr->empty()) && !(rel_316_delta_heap_allocation_by_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt,rel_316_delta_heap_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt,rel_325_delta_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_399_subset_type_indication_heap_allocation_by_type_instr_op_ctxt,rel_399_subset_type_indication_heap_allocation_by_type_instr->createContext());
CREATE_OP_CONTEXT(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr_op_ctxt,rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->createContext());
for(const auto& env0 : *rel_316_delta_heap_allocation_by_instr) {
auto range = rel_324_allocation_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_325_delta_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[1]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt)))) {
auto range = rel_399_subset_type_indication_heap_allocation_by_type_instr->lowerUpperRange_010(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_399_subset_type_indication_heap_allocation_by_type_instr_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env2[2]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt))) && !(!rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->lowerUpperRange_011(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast(env2[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr_op_ctxt)).empty())) {
Tuple<RamDomain,2> tuple{{ramBitCast(env2[2]),ramBitCast(env1[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?alloc,?size) :- 
   heap_allocation_by_instr(?insn,?heapAlloc),
   allocation_size(?heapAlloc,?size),
   subset.type_indication.heap_allocation_by_type_instr(_,?insn,?alloc).
in file allocations-sizes.dl [138:1-141:52])_");
if(!(rel_325_delta_allocation_size->empty()) && !(rel_399_subset_type_indication_heap_allocation_by_type_instr->empty()) && !(rel_315_heap_allocation_by_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_315_heap_allocation_by_instr_op_ctxt,rel_315_heap_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt,rel_325_delta_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_399_subset_type_indication_heap_allocation_by_type_instr_op_ctxt,rel_399_subset_type_indication_heap_allocation_by_type_instr->createContext());
CREATE_OP_CONTEXT(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr_op_ctxt,rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->createContext());
for(const auto& env0 : *rel_315_heap_allocation_by_instr) {
auto range = rel_325_delta_allocation_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_399_subset_type_indication_heap_allocation_by_type_instr->lowerUpperRange_010(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_399_subset_type_indication_heap_allocation_by_type_instr_op_ctxt));
for(const auto& env2 : range) {
if( !(!rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->lowerUpperRange_011(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast(env2[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr_op_ctxt)).empty()) && !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env2[2]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env2[2]),ramBitCast(env1[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?alloc,?size) :- 
   heap_allocation_by_instr(?insn,?heapAlloc),
   allocation_size(?heapAlloc,?size),
   subset.type_indication.heap_allocation_by_type_instr(_,?insn,?alloc).
in file allocations-sizes.dl [138:1-141:52])_");
if(!(rel_324_allocation_size->empty()) && !(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->empty()) && !(rel_315_heap_allocation_by_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_315_heap_allocation_by_instr_op_ctxt,rel_315_heap_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr_op_ctxt,rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->createContext());
for(const auto& env0 : *rel_315_heap_allocation_by_instr) {
auto range = rel_324_allocation_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->lowerUpperRange_010(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env2[2]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env2[2]),ramBitCast(env1[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?stackAlloc,(numElements*size)) :- 
   alloca_instr_size(?insn,?operand),
   constant_to_int(?operand,numElements),
   stack_allocation_by_instr(?insn,?stackAlloc),
   static_allocation_type(?stackAlloc,?type),
   type_has_size(?type,size).
in file allocations-sizes.dl [49:1-55:30])_");
if(!(rel_104_constant_to_int->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_313_delta_stack_allocation_by_instr->empty()) && !(rel_216_type_has_size->empty()) && !(rel_223_alloca_instr_size->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_223_alloca_instr_size_op_ctxt,rel_223_alloca_instr_size->createContext());
CREATE_OP_CONTEXT(rel_313_delta_stack_allocation_by_instr_op_ctxt,rel_313_delta_stack_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
for(const auto& env0 : *rel_223_alloca_instr_size) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_313_delta_stack_allocation_by_instr->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_313_delta_stack_allocation_by_instr_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_321_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env2[1]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)))) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env4 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env2[1]),ramBitCast((ramBitCast<RamSigned>(env1[1]) * ramBitCast<RamSigned>(env4[1])))}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env2[1]),ramBitCast((ramBitCast<RamSigned>(env1[1]) * ramBitCast<RamSigned>(env4[1])))}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?stackAlloc,(numElements*size)) :- 
   alloca_instr_size(?insn,?operand),
   constant_to_int(?operand,numElements),
   stack_allocation_by_instr(?insn,?stackAlloc),
   static_allocation_type(?stackAlloc,?type),
   type_has_size(?type,size).
in file allocations-sizes.dl [49:1-55:30])_");
if(!(rel_104_constant_to_int->empty()) && !(rel_322_delta_static_allocation_type->empty()) && !(rel_312_stack_allocation_by_instr->empty()) && !(rel_216_type_has_size->empty()) && !(rel_223_alloca_instr_size->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_223_alloca_instr_size_op_ctxt,rel_223_alloca_instr_size->createContext());
CREATE_OP_CONTEXT(rel_312_stack_allocation_by_instr_op_ctxt,rel_312_stack_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
for(const auto& env0 : *rel_223_alloca_instr_size) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_312_stack_allocation_by_instr->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_312_stack_allocation_by_instr_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_322_delta_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt));
for(const auto& env3 : range) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env3[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env4 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env2[1]),ramBitCast((ramBitCast<RamSigned>(env1[1]) * ramBitCast<RamSigned>(env4[1])))}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env2[1]),ramBitCast((ramBitCast<RamSigned>(env1[1]) * ramBitCast<RamSigned>(env4[1])))}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?subAlloc,?size) :- 
   static_subobjects.alloc_subregion_at_array_index(_,_,?subAlloc),
   static_allocation_type(?subAlloc,?type),
   type_has_size(?type,?size).
in file allocations-subobjects.dl [477:3-480:33])_");
if(!(rel_321_static_allocation_type->empty()) && !(rel_216_type_has_size->empty()) && !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_391_delta_static_subobjects_alloc_subregion_at_array_index) {
auto range = rel_321_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)))) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[2]),ramBitCast(env2[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?subAlloc,?size) :- 
   static_subobjects.alloc_subregion_at_array_index(_,_,?subAlloc),
   static_allocation_type(?subAlloc,?type),
   type_has_size(?type,?size).
in file allocations-subobjects.dl [477:3-480:33])_");
if(!(rel_322_delta_static_allocation_type->empty()) && !(rel_216_type_has_size->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_390_static_subobjects_alloc_subregion_at_array_index) {
auto range = rel_322_delta_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[2]),ramBitCast(env2[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?subAlloc,?size) :- 
   static_subobjects.alloc_subregion_at_any_array_index(_,?subAlloc),
   static_allocation_type(?subAlloc,?type),
   type_has_size(?type,?size).
in file allocations-subobjects.dl [483:3-486:33])_");
if(!(rel_321_static_allocation_type->empty()) && !(rel_216_type_has_size->empty()) && !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
for(const auto& env0 : *rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index) {
auto range = rel_321_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[1]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)))) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[1]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[1]),ramBitCast(env2[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?subAlloc,?size) :- 
   static_subobjects.alloc_subregion_at_any_array_index(_,?subAlloc),
   static_allocation_type(?subAlloc,?type),
   type_has_size(?type,?size).
in file allocations-subobjects.dl [483:3-486:33])_");
if(!(rel_322_delta_static_allocation_type->empty()) && !(rel_216_type_has_size->empty()) && !(rel_384_static_subobjects_alloc_subregion_at_any_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_384_static_subobjects_alloc_subregion_at_any_array_index->createContext());
for(const auto& env0 : *rel_384_static_subobjects_alloc_subregion_at_any_array_index) {
auto range = rel_322_delta_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[1]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[1]),ramBitCast(env2[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?subAlloc,?size) :- 
   subset_subobjects.alloc_subregion_at_array_index(_,_,?subAlloc),
   subset_allocation_type.allocation_type(?subAlloc,?type),
   type_has_size(?type,?size).
in file allocations-subobjects.dl [477:3-480:33])_");
if(!(rel_534_subset_allocation_type_allocation_type->empty()) && !(rel_216_type_has_size->empty()) && !(rel_553_delta_subset_subobjects_alloc_subregion_at_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_534_subset_allocation_type_allocation_type_op_ctxt,rel_534_subset_allocation_type_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt,rel_535_delta_subset_allocation_type_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_553_delta_subset_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_553_delta_subset_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_553_delta_subset_subobjects_alloc_subregion_at_array_index) {
auto range = rel_534_subset_allocation_type_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_534_subset_allocation_type_allocation_type_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_535_delta_subset_allocation_type_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt)))) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[2]),ramBitCast(env2[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?subAlloc,?size) :- 
   subset_subobjects.alloc_subregion_at_array_index(_,_,?subAlloc),
   subset_allocation_type.allocation_type(?subAlloc,?type),
   type_has_size(?type,?size).
in file allocations-subobjects.dl [477:3-480:33])_");
if(!(rel_535_delta_subset_allocation_type_allocation_type->empty()) && !(rel_216_type_has_size->empty()) && !(rel_552_subset_subobjects_alloc_subregion_at_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt,rel_535_delta_subset_allocation_type_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_552_subset_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_552_subset_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_552_subset_subobjects_alloc_subregion_at_array_index) {
auto range = rel_535_delta_subset_allocation_type_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[2]),ramBitCast(env2[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?subAlloc,?size) :- 
   subset_subobjects.alloc_subregion_at_any_array_index(_,?subAlloc),
   subset_allocation_type.allocation_type(?subAlloc,?type),
   type_has_size(?type,?size).
in file allocations-subobjects.dl [483:3-486:33])_");
if(!(rel_534_subset_allocation_type_allocation_type->empty()) && !(rel_216_type_has_size->empty()) && !(rel_547_delta_subset_subobjects_alloc_subregion_at_any_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_534_subset_allocation_type_allocation_type_op_ctxt,rel_534_subset_allocation_type_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt,rel_535_delta_subset_allocation_type_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_547_delta_subset_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_547_delta_subset_subobjects_alloc_subregion_at_any_array_index->createContext());
for(const auto& env0 : *rel_547_delta_subset_subobjects_alloc_subregion_at_any_array_index) {
auto range = rel_534_subset_allocation_type_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_534_subset_allocation_type_allocation_type_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_535_delta_subset_allocation_type_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[1]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt)))) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[1]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[1]),ramBitCast(env2[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?subAlloc,?size) :- 
   subset_subobjects.alloc_subregion_at_any_array_index(_,?subAlloc),
   subset_allocation_type.allocation_type(?subAlloc,?type),
   type_has_size(?type,?size).
in file allocations-subobjects.dl [483:3-486:33])_");
if(!(rel_535_delta_subset_allocation_type_allocation_type->empty()) && !(rel_216_type_has_size->empty()) && !(rel_546_subset_subobjects_alloc_subregion_at_any_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt,rel_535_delta_subset_allocation_type_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_546_subset_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_546_subset_subobjects_alloc_subregion_at_any_array_index->createContext());
for(const auto& env0 : *rel_546_subset_subobjects_alloc_subregion_at_any_array_index) {
auto range = rel_535_delta_subset_allocation_type_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[1]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[1]),ramBitCast(env2[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?fieldAlloc,?size) :- 
   static_subobjects.alloc_subregion_at_field(?base,?field,?fieldAlloc),
   static_subobjects.alloc_subregion_at_field(?base, _tmp_1,_),
   static_allocation_type(?fieldAlloc,?type),
   type_has_size(?type,?size),
    _tmp_1 = (?field+1).
in file allocations-subobjects.dl [490:3-494:33])_");
if(!(rel_381_static_subobjects_alloc_subregion_at_field->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_382_delta_static_subobjects_alloc_subregion_at_field->empty()) && !(rel_216_type_has_size->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_381_static_subobjects_alloc_subregion_at_field->createContext());
CREATE_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_382_delta_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_382_delta_static_subobjects_alloc_subregion_at_field) {
auto range = rel_381_static_subobjects_alloc_subregion_at_field->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1)))), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1)))), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt));
for(const auto& env1 : range) {
if( !(!rel_382_delta_static_subobjects_alloc_subregion_at_field->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt)).empty())) {
auto range = rel_321_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)))) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[2]),ramBitCast(env3[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
break;
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?fieldAlloc,?size) :- 
   static_subobjects.alloc_subregion_at_field(?base,?field,?fieldAlloc),
   static_subobjects.alloc_subregion_at_field(?base, _tmp_1,_),
   static_allocation_type(?fieldAlloc,?type),
   type_has_size(?type,?size),
    _tmp_1 = (?field+1).
in file allocations-subobjects.dl [490:3-494:33])_");
if(!(rel_382_delta_static_subobjects_alloc_subregion_at_field->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_381_static_subobjects_alloc_subregion_at_field->empty()) && !(rel_216_type_has_size->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_381_static_subobjects_alloc_subregion_at_field->createContext());
CREATE_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_382_delta_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_381_static_subobjects_alloc_subregion_at_field) {
if( !rel_382_delta_static_subobjects_alloc_subregion_at_field->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1)))), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1)))), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt)).empty()) {
auto range = rel_321_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)))) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[2]),ramBitCast(env2[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?fieldAlloc,?size) :- 
   static_subobjects.alloc_subregion_at_field(?base,?field,?fieldAlloc),
   static_subobjects.alloc_subregion_at_field(?base, _tmp_1,_),
   static_allocation_type(?fieldAlloc,?type),
   type_has_size(?type,?size),
    _tmp_1 = (?field+1).
in file allocations-subobjects.dl [490:3-494:33])_");
if(!(rel_322_delta_static_allocation_type->empty()) && !(rel_381_static_subobjects_alloc_subregion_at_field->empty()) && !(rel_216_type_has_size->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_381_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_381_static_subobjects_alloc_subregion_at_field) {
if( !rel_381_static_subobjects_alloc_subregion_at_field->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1)))), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1)))), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt)).empty()) {
auto range = rel_322_delta_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[2]),ramBitCast(env2[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?subAlloc,(?size-?offset)) :- 
   static_subobjects.alloc_subregion_at_field(?base,?field,?subAlloc),
   static_allocation_type(?base,?type),
   struct_type_nfields(?type, _tmp_2),
   allocation_size(?base,?size),
   struct_type_field_offset(?type,?field,?offset),
    _tmp_2 = (?field+1).
in file allocations-subobjects.dl [497:3-502:54])_");
if(!(rel_321_static_allocation_type->empty()) && !(rel_324_allocation_size->empty()) && !(rel_41_struct_type_nfields->empty()) && !(rel_263_struct_type_field_offset->empty()) && !(rel_382_delta_static_subobjects_alloc_subregion_at_field->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt,rel_41_struct_type_nfields->createContext());
CREATE_OP_CONTEXT(rel_263_struct_type_field_offset_op_ctxt,rel_263_struct_type_field_offset->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt,rel_325_delta_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_382_delta_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_382_delta_static_subobjects_alloc_subregion_at_field) {
auto range = rel_321_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
for(const auto& env1 : range) {
if( rel_41_struct_type_nfields->contains(Tuple<RamDomain,2>{{ramBitCast(env1[1]),ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1))))}},READ_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt)) && !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)))) {
auto range = rel_324_allocation_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_325_delta_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt)))) {
auto range = rel_263_struct_type_field_offset->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_263_struct_type_field_offset_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast((ramBitCast<RamSigned>(env2[1]) - ramBitCast<RamSigned>(env3[2])))}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[2]),ramBitCast((ramBitCast<RamSigned>(env2[1]) - ramBitCast<RamSigned>(env3[2])))}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?subAlloc,(?size-?offset)) :- 
   static_subobjects.alloc_subregion_at_field(?base,?field,?subAlloc),
   static_allocation_type(?base,?type),
   struct_type_nfields(?type, _tmp_2),
   allocation_size(?base,?size),
   struct_type_field_offset(?type,?field,?offset),
    _tmp_2 = (?field+1).
in file allocations-subobjects.dl [497:3-502:54])_");
if(!(rel_322_delta_static_allocation_type->empty()) && !(rel_324_allocation_size->empty()) && !(rel_41_struct_type_nfields->empty()) && !(rel_263_struct_type_field_offset->empty()) && !(rel_381_static_subobjects_alloc_subregion_at_field->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt,rel_41_struct_type_nfields->createContext());
CREATE_OP_CONTEXT(rel_263_struct_type_field_offset_op_ctxt,rel_263_struct_type_field_offset->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt,rel_325_delta_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_381_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_381_static_subobjects_alloc_subregion_at_field) {
auto range = rel_322_delta_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt));
for(const auto& env1 : range) {
if( rel_41_struct_type_nfields->contains(Tuple<RamDomain,2>{{ramBitCast(env1[1]),ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1))))}},READ_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt))) {
auto range = rel_324_allocation_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_325_delta_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt)))) {
auto range = rel_263_struct_type_field_offset->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_263_struct_type_field_offset_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast((ramBitCast<RamSigned>(env2[1]) - ramBitCast<RamSigned>(env3[2])))}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[2]),ramBitCast((ramBitCast<RamSigned>(env2[1]) - ramBitCast<RamSigned>(env3[2])))}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?subAlloc,(?size-?offset)) :- 
   static_subobjects.alloc_subregion_at_field(?base,?field,?subAlloc),
   static_allocation_type(?base,?type),
   struct_type_nfields(?type, _tmp_2),
   allocation_size(?base,?size),
   struct_type_field_offset(?type,?field,?offset),
    _tmp_2 = (?field+1).
in file allocations-subobjects.dl [497:3-502:54])_");
if(!(rel_321_static_allocation_type->empty()) && !(rel_325_delta_allocation_size->empty()) && !(rel_41_struct_type_nfields->empty()) && !(rel_263_struct_type_field_offset->empty()) && !(rel_381_static_subobjects_alloc_subregion_at_field->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt,rel_41_struct_type_nfields->createContext());
CREATE_OP_CONTEXT(rel_263_struct_type_field_offset_op_ctxt,rel_263_struct_type_field_offset->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt,rel_325_delta_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_381_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_381_static_subobjects_alloc_subregion_at_field) {
auto range = rel_321_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
for(const auto& env1 : range) {
if( rel_41_struct_type_nfields->contains(Tuple<RamDomain,2>{{ramBitCast(env1[1]),ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1))))}},READ_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt))) {
auto range = rel_325_delta_allocation_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_263_struct_type_field_offset->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_263_struct_type_field_offset_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast((ramBitCast<RamSigned>(env2[1]) - ramBitCast<RamSigned>(env3[2])))}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[2]),ramBitCast((ramBitCast<RamSigned>(env2[1]) - ramBitCast<RamSigned>(env3[2])))}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?fieldAlloc,?size) :- 
   subset_subobjects.alloc_subregion_at_field(?base,?field,?fieldAlloc),
   subset_subobjects.alloc_subregion_at_field(?base, _tmp_3,_),
   subset_allocation_type.allocation_type(?fieldAlloc,?type),
   type_has_size(?type,?size),
    _tmp_3 = (?field+1).
in file allocations-subobjects.dl [490:3-494:33])_");
if(!(rel_543_subset_subobjects_alloc_subregion_at_field->empty()) && !(rel_534_subset_allocation_type_allocation_type->empty()) && !(rel_544_delta_subset_subobjects_alloc_subregion_at_field->empty()) && !(rel_216_type_has_size->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_534_subset_allocation_type_allocation_type_op_ctxt,rel_534_subset_allocation_type_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt,rel_535_delta_subset_allocation_type_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_543_subset_subobjects_alloc_subregion_at_field_op_ctxt,rel_543_subset_subobjects_alloc_subregion_at_field->createContext());
CREATE_OP_CONTEXT(rel_544_delta_subset_subobjects_alloc_subregion_at_field_op_ctxt,rel_544_delta_subset_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_544_delta_subset_subobjects_alloc_subregion_at_field) {
auto range = rel_543_subset_subobjects_alloc_subregion_at_field->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1)))), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1)))), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_543_subset_subobjects_alloc_subregion_at_field_op_ctxt));
for(const auto& env1 : range) {
if( !(!rel_544_delta_subset_subobjects_alloc_subregion_at_field->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_544_delta_subset_subobjects_alloc_subregion_at_field_op_ctxt)).empty())) {
auto range = rel_534_subset_allocation_type_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_534_subset_allocation_type_allocation_type_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_535_delta_subset_allocation_type_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt)))) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[2]),ramBitCast(env3[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
break;
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?fieldAlloc,?size) :- 
   subset_subobjects.alloc_subregion_at_field(?base,?field,?fieldAlloc),
   subset_subobjects.alloc_subregion_at_field(?base, _tmp_3,_),
   subset_allocation_type.allocation_type(?fieldAlloc,?type),
   type_has_size(?type,?size),
    _tmp_3 = (?field+1).
in file allocations-subobjects.dl [490:3-494:33])_");
if(!(rel_544_delta_subset_subobjects_alloc_subregion_at_field->empty()) && !(rel_534_subset_allocation_type_allocation_type->empty()) && !(rel_543_subset_subobjects_alloc_subregion_at_field->empty()) && !(rel_216_type_has_size->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_534_subset_allocation_type_allocation_type_op_ctxt,rel_534_subset_allocation_type_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt,rel_535_delta_subset_allocation_type_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_543_subset_subobjects_alloc_subregion_at_field_op_ctxt,rel_543_subset_subobjects_alloc_subregion_at_field->createContext());
CREATE_OP_CONTEXT(rel_544_delta_subset_subobjects_alloc_subregion_at_field_op_ctxt,rel_544_delta_subset_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_543_subset_subobjects_alloc_subregion_at_field) {
if( !rel_544_delta_subset_subobjects_alloc_subregion_at_field->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1)))), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1)))), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_544_delta_subset_subobjects_alloc_subregion_at_field_op_ctxt)).empty()) {
auto range = rel_534_subset_allocation_type_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_534_subset_allocation_type_allocation_type_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_535_delta_subset_allocation_type_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt)))) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[2]),ramBitCast(env2[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?fieldAlloc,?size) :- 
   subset_subobjects.alloc_subregion_at_field(?base,?field,?fieldAlloc),
   subset_subobjects.alloc_subregion_at_field(?base, _tmp_3,_),
   subset_allocation_type.allocation_type(?fieldAlloc,?type),
   type_has_size(?type,?size),
    _tmp_3 = (?field+1).
in file allocations-subobjects.dl [490:3-494:33])_");
if(!(rel_535_delta_subset_allocation_type_allocation_type->empty()) && !(rel_543_subset_subobjects_alloc_subregion_at_field->empty()) && !(rel_216_type_has_size->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt,rel_535_delta_subset_allocation_type_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_543_subset_subobjects_alloc_subregion_at_field_op_ctxt,rel_543_subset_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_543_subset_subobjects_alloc_subregion_at_field) {
if( !rel_543_subset_subobjects_alloc_subregion_at_field->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1)))), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1)))), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_543_subset_subobjects_alloc_subregion_at_field_op_ctxt)).empty()) {
auto range = rel_535_delta_subset_allocation_type_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[2]),ramBitCast(env2[1])}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?subAlloc,(?size-?offset)) :- 
   subset_subobjects.alloc_subregion_at_field(?base,?field,?subAlloc),
   subset_allocation_type.allocation_type(?base,?type),
   struct_type_nfields(?type, _tmp_4),
   allocation_size(?base,?size),
   struct_type_field_offset(?type,?field,?offset),
    _tmp_4 = (?field+1).
in file allocations-subobjects.dl [497:3-502:54])_");
if(!(rel_534_subset_allocation_type_allocation_type->empty()) && !(rel_324_allocation_size->empty()) && !(rel_41_struct_type_nfields->empty()) && !(rel_263_struct_type_field_offset->empty()) && !(rel_544_delta_subset_subobjects_alloc_subregion_at_field->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt,rel_41_struct_type_nfields->createContext());
CREATE_OP_CONTEXT(rel_263_struct_type_field_offset_op_ctxt,rel_263_struct_type_field_offset->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt,rel_325_delta_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_534_subset_allocation_type_allocation_type_op_ctxt,rel_534_subset_allocation_type_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt,rel_535_delta_subset_allocation_type_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_544_delta_subset_subobjects_alloc_subregion_at_field_op_ctxt,rel_544_delta_subset_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_544_delta_subset_subobjects_alloc_subregion_at_field) {
auto range = rel_534_subset_allocation_type_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_534_subset_allocation_type_allocation_type_op_ctxt));
for(const auto& env1 : range) {
if( rel_41_struct_type_nfields->contains(Tuple<RamDomain,2>{{ramBitCast(env1[1]),ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1))))}},READ_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt)) && !(rel_535_delta_subset_allocation_type_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt)))) {
auto range = rel_324_allocation_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_325_delta_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt)))) {
auto range = rel_263_struct_type_field_offset->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_263_struct_type_field_offset_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast((ramBitCast<RamSigned>(env2[1]) - ramBitCast<RamSigned>(env3[2])))}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[2]),ramBitCast((ramBitCast<RamSigned>(env2[1]) - ramBitCast<RamSigned>(env3[2])))}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?subAlloc,(?size-?offset)) :- 
   subset_subobjects.alloc_subregion_at_field(?base,?field,?subAlloc),
   subset_allocation_type.allocation_type(?base,?type),
   struct_type_nfields(?type, _tmp_4),
   allocation_size(?base,?size),
   struct_type_field_offset(?type,?field,?offset),
    _tmp_4 = (?field+1).
in file allocations-subobjects.dl [497:3-502:54])_");
if(!(rel_535_delta_subset_allocation_type_allocation_type->empty()) && !(rel_324_allocation_size->empty()) && !(rel_41_struct_type_nfields->empty()) && !(rel_263_struct_type_field_offset->empty()) && !(rel_543_subset_subobjects_alloc_subregion_at_field->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt,rel_41_struct_type_nfields->createContext());
CREATE_OP_CONTEXT(rel_263_struct_type_field_offset_op_ctxt,rel_263_struct_type_field_offset->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt,rel_325_delta_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt,rel_535_delta_subset_allocation_type_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_543_subset_subobjects_alloc_subregion_at_field_op_ctxt,rel_543_subset_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_543_subset_subobjects_alloc_subregion_at_field) {
auto range = rel_535_delta_subset_allocation_type_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt));
for(const auto& env1 : range) {
if( rel_41_struct_type_nfields->contains(Tuple<RamDomain,2>{{ramBitCast(env1[1]),ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1))))}},READ_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt))) {
auto range = rel_324_allocation_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_325_delta_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt)))) {
auto range = rel_263_struct_type_field_offset->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_263_struct_type_field_offset_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast((ramBitCast<RamSigned>(env2[1]) - ramBitCast<RamSigned>(env3[2])))}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[2]),ramBitCast((ramBitCast<RamSigned>(env2[1]) - ramBitCast<RamSigned>(env3[2])))}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(allocation_size(?subAlloc,(?size-?offset)) :- 
   subset_subobjects.alloc_subregion_at_field(?base,?field,?subAlloc),
   subset_allocation_type.allocation_type(?base,?type),
   struct_type_nfields(?type, _tmp_4),
   allocation_size(?base,?size),
   struct_type_field_offset(?type,?field,?offset),
    _tmp_4 = (?field+1).
in file allocations-subobjects.dl [497:3-502:54])_");
if(!(rel_534_subset_allocation_type_allocation_type->empty()) && !(rel_325_delta_allocation_size->empty()) && !(rel_41_struct_type_nfields->empty()) && !(rel_263_struct_type_field_offset->empty()) && !(rel_543_subset_subobjects_alloc_subregion_at_field->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt,rel_41_struct_type_nfields->createContext());
CREATE_OP_CONTEXT(rel_263_struct_type_field_offset_op_ctxt,rel_263_struct_type_field_offset->createContext());
CREATE_OP_CONTEXT(rel_324_allocation_size_op_ctxt,rel_324_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt,rel_325_delta_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt,rel_326_new_allocation_size->createContext());
CREATE_OP_CONTEXT(rel_534_subset_allocation_type_allocation_type_op_ctxt,rel_534_subset_allocation_type_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_543_subset_subobjects_alloc_subregion_at_field_op_ctxt,rel_543_subset_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_543_subset_subobjects_alloc_subregion_at_field) {
auto range = rel_534_subset_allocation_type_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_534_subset_allocation_type_allocation_type_op_ctxt));
for(const auto& env1 : range) {
if( rel_41_struct_type_nfields->contains(Tuple<RamDomain,2>{{ramBitCast(env1[1]),ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1))))}},READ_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt))) {
auto range = rel_325_delta_allocation_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_325_delta_allocation_size_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_263_struct_type_field_offset->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_263_struct_type_field_offset_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_324_allocation_size->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast((ramBitCast<RamSigned>(env2[1]) - ramBitCast<RamSigned>(env3[2])))}},READ_OP_CONTEXT(rel_324_allocation_size_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[2]),ramBitCast((ramBitCast<RamSigned>(env2[1]) - ramBitCast<RamSigned>(env3[2])))}};
rel_326_new_allocation_size->insert(tuple,READ_OP_CONTEXT(rel_326_new_allocation_size_op_ctxt));
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(dynamically_sized_alloc(?stackAlloc) :- 
   alloca_instr_size(?insn,?operand),
   stack_allocation_by_instr(?insn,?stackAlloc),
   !constant_to_int(?operand,_).
in file allocations-sizes.dl [44:1-47:34])_");
if(!(rel_223_alloca_instr_size->empty()) && !(rel_313_delta_stack_allocation_by_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_223_alloca_instr_size_op_ctxt,rel_223_alloca_instr_size->createContext());
CREATE_OP_CONTEXT(rel_313_delta_stack_allocation_by_instr_op_ctxt,rel_313_delta_stack_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt,rel_327_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt,rel_329_new_dynamically_sized_alloc->createContext());
for(const auto& env0 : *rel_223_alloca_instr_size) {
if( !(!rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt)).empty())) {
auto range = rel_313_delta_stack_allocation_by_instr->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_313_delta_stack_allocation_by_instr_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env1[1])}};
rel_329_new_dynamically_sized_alloc->insert(tuple,READ_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(dynamically_sized_alloc(?heapAlloc) :- 
   heap_allocation_by_instr(?insn,?heapAlloc),
   !sized_alloc_instr(?insn,_).
in file allocations-sizes.dl [70:1-74:33])_");
if(!(rel_316_delta_heap_allocation_by_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt,rel_178_sized_alloc_instr->createContext());
CREATE_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt,rel_316_delta_heap_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt,rel_327_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt,rel_329_new_dynamically_sized_alloc->createContext());
for(const auto& env0 : *rel_316_delta_heap_allocation_by_instr) {
if( !(rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt))) && !(!rel_178_sized_alloc_instr->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_178_sized_alloc_instr_op_ctxt)).empty())) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[1])}};
rel_329_new_dynamically_sized_alloc->insert(tuple,READ_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(dynamically_sized_alloc(?alloc) :- 
   stack_allocation_by_instr(?insn,?stackAlloc),
   dynamically_sized_alloc(?stackAlloc),
   subset.type_indication.stack_allocation_by_type_instr(_,?insn,?alloc).
in file allocations-sizes.dl [143:1-146:52])_");
if(!(rel_327_dynamically_sized_alloc->empty()) && !(rel_405_subset_type_indication_stack_allocation_by_type_instr->empty()) && !(rel_313_delta_stack_allocation_by_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_313_delta_stack_allocation_by_instr_op_ctxt,rel_313_delta_stack_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt,rel_327_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt,rel_328_delta_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt,rel_329_new_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_405_subset_type_indication_stack_allocation_by_type_instr_op_ctxt,rel_405_subset_type_indication_stack_allocation_by_type_instr->createContext());
CREATE_OP_CONTEXT(rel_406_delta_subset_type_indication_stack_allocation_by_type_instr_op_ctxt,rel_406_delta_subset_type_indication_stack_allocation_by_type_instr->createContext());
for(const auto& env0 : *rel_313_delta_stack_allocation_by_instr) {
if( rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt)) && !(rel_328_delta_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt)))) {
auto range = rel_405_subset_type_indication_stack_allocation_by_type_instr->lowerUpperRange_010(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_405_subset_type_indication_stack_allocation_by_type_instr_op_ctxt));
for(const auto& env1 : range) {
if( !(!rel_406_delta_subset_type_indication_stack_allocation_by_type_instr->lowerUpperRange_011(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast(env1[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_406_delta_subset_type_indication_stack_allocation_by_type_instr_op_ctxt)).empty()) && !(rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env1[2])}};
rel_329_new_dynamically_sized_alloc->insert(tuple,READ_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(dynamically_sized_alloc(?alloc) :- 
   stack_allocation_by_instr(?insn,?stackAlloc),
   dynamically_sized_alloc(?stackAlloc),
   subset.type_indication.stack_allocation_by_type_instr(_,?insn,?alloc).
in file allocations-sizes.dl [143:1-146:52])_");
if(!(rel_328_delta_dynamically_sized_alloc->empty()) && !(rel_405_subset_type_indication_stack_allocation_by_type_instr->empty()) && !(rel_312_stack_allocation_by_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_312_stack_allocation_by_instr_op_ctxt,rel_312_stack_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt,rel_327_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt,rel_328_delta_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt,rel_329_new_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_405_subset_type_indication_stack_allocation_by_type_instr_op_ctxt,rel_405_subset_type_indication_stack_allocation_by_type_instr->createContext());
CREATE_OP_CONTEXT(rel_406_delta_subset_type_indication_stack_allocation_by_type_instr_op_ctxt,rel_406_delta_subset_type_indication_stack_allocation_by_type_instr->createContext());
for(const auto& env0 : *rel_312_stack_allocation_by_instr) {
if( rel_328_delta_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt))) {
auto range = rel_405_subset_type_indication_stack_allocation_by_type_instr->lowerUpperRange_010(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_405_subset_type_indication_stack_allocation_by_type_instr_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt))) && !(!rel_406_delta_subset_type_indication_stack_allocation_by_type_instr->lowerUpperRange_011(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast(env1[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_406_delta_subset_type_indication_stack_allocation_by_type_instr_op_ctxt)).empty())) {
Tuple<RamDomain,1> tuple{{ramBitCast(env1[2])}};
rel_329_new_dynamically_sized_alloc->insert(tuple,READ_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(dynamically_sized_alloc(?alloc) :- 
   stack_allocation_by_instr(?insn,?stackAlloc),
   dynamically_sized_alloc(?stackAlloc),
   subset.type_indication.stack_allocation_by_type_instr(_,?insn,?alloc).
in file allocations-sizes.dl [143:1-146:52])_");
if(!(rel_327_dynamically_sized_alloc->empty()) && !(rel_406_delta_subset_type_indication_stack_allocation_by_type_instr->empty()) && !(rel_312_stack_allocation_by_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_312_stack_allocation_by_instr_op_ctxt,rel_312_stack_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt,rel_327_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt,rel_329_new_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_406_delta_subset_type_indication_stack_allocation_by_type_instr_op_ctxt,rel_406_delta_subset_type_indication_stack_allocation_by_type_instr->createContext());
for(const auto& env0 : *rel_312_stack_allocation_by_instr) {
if( rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt))) {
auto range = rel_406_delta_subset_type_indication_stack_allocation_by_type_instr->lowerUpperRange_010(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_406_delta_subset_type_indication_stack_allocation_by_type_instr_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env1[2])}};
rel_329_new_dynamically_sized_alloc->insert(tuple,READ_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(dynamically_sized_alloc(?alloc) :- 
   heap_allocation_by_instr(?insn,?heapAlloc),
   dynamically_sized_alloc(?heapAlloc),
   subset.type_indication.heap_allocation_by_type_instr(_,?insn,?alloc).
in file allocations-sizes.dl [148:1-151:51])_");
if(!(rel_327_dynamically_sized_alloc->empty()) && !(rel_399_subset_type_indication_heap_allocation_by_type_instr->empty()) && !(rel_316_delta_heap_allocation_by_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt,rel_316_delta_heap_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt,rel_327_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt,rel_328_delta_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt,rel_329_new_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_399_subset_type_indication_heap_allocation_by_type_instr_op_ctxt,rel_399_subset_type_indication_heap_allocation_by_type_instr->createContext());
CREATE_OP_CONTEXT(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr_op_ctxt,rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->createContext());
for(const auto& env0 : *rel_316_delta_heap_allocation_by_instr) {
if( rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt)) && !(rel_328_delta_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt)))) {
auto range = rel_399_subset_type_indication_heap_allocation_by_type_instr->lowerUpperRange_010(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_399_subset_type_indication_heap_allocation_by_type_instr_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt))) && !(!rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->lowerUpperRange_011(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast(env1[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr_op_ctxt)).empty())) {
Tuple<RamDomain,1> tuple{{ramBitCast(env1[2])}};
rel_329_new_dynamically_sized_alloc->insert(tuple,READ_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(dynamically_sized_alloc(?alloc) :- 
   heap_allocation_by_instr(?insn,?heapAlloc),
   dynamically_sized_alloc(?heapAlloc),
   subset.type_indication.heap_allocation_by_type_instr(_,?insn,?alloc).
in file allocations-sizes.dl [148:1-151:51])_");
if(!(rel_328_delta_dynamically_sized_alloc->empty()) && !(rel_399_subset_type_indication_heap_allocation_by_type_instr->empty()) && !(rel_315_heap_allocation_by_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_315_heap_allocation_by_instr_op_ctxt,rel_315_heap_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt,rel_327_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt,rel_328_delta_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt,rel_329_new_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_399_subset_type_indication_heap_allocation_by_type_instr_op_ctxt,rel_399_subset_type_indication_heap_allocation_by_type_instr->createContext());
CREATE_OP_CONTEXT(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr_op_ctxt,rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->createContext());
for(const auto& env0 : *rel_315_heap_allocation_by_instr) {
if( rel_328_delta_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt))) {
auto range = rel_399_subset_type_indication_heap_allocation_by_type_instr->lowerUpperRange_010(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_399_subset_type_indication_heap_allocation_by_type_instr_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt))) && !(!rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->lowerUpperRange_011(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast(env1[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr_op_ctxt)).empty())) {
Tuple<RamDomain,1> tuple{{ramBitCast(env1[2])}};
rel_329_new_dynamically_sized_alloc->insert(tuple,READ_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(dynamically_sized_alloc(?alloc) :- 
   heap_allocation_by_instr(?insn,?heapAlloc),
   dynamically_sized_alloc(?heapAlloc),
   subset.type_indication.heap_allocation_by_type_instr(_,?insn,?alloc).
in file allocations-sizes.dl [148:1-151:51])_");
if(!(rel_327_dynamically_sized_alloc->empty()) && !(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->empty()) && !(rel_315_heap_allocation_by_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_315_heap_allocation_by_instr_op_ctxt,rel_315_heap_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt,rel_327_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt,rel_329_new_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr_op_ctxt,rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->createContext());
for(const auto& env0 : *rel_315_heap_allocation_by_instr) {
if( rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt))) {
auto range = rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->lowerUpperRange_010(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env1[2])}};
rel_329_new_dynamically_sized_alloc->insert(tuple,READ_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(dynamically_sized_alloc(?sigAlloc) :- 
   signature_allocation(?sigAlloc).
in file signatures.dl [227:3-228:37])_");
if(!(rel_310_delta_signature_allocation->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_310_delta_signature_allocation_op_ctxt,rel_310_delta_signature_allocation->createContext());
CREATE_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt,rel_327_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt,rel_329_new_dynamically_sized_alloc->createContext());
for(const auto& env0 : *rel_310_delta_signature_allocation) {
if( !(rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_329_new_dynamically_sized_alloc->insert(tuple,READ_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(dynamically_sized_alloc(?subAlloc) :- 
   static_subobjects.alloc_subregion_at_field(?base,?field,?subAlloc),
   static_allocation_type(?base,?type),
   struct_type_nfields(?type, _tmp_6),
   dynamically_sized_alloc(?base),
    _tmp_6 = (?field+1).
in file allocations-subobjects.dl [505:3-509:36])_");
if(!(rel_327_dynamically_sized_alloc->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_382_delta_static_subobjects_alloc_subregion_at_field->empty()) && !(rel_41_struct_type_nfields->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt,rel_41_struct_type_nfields->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt,rel_327_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt,rel_328_delta_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt,rel_329_new_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_382_delta_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_382_delta_static_subobjects_alloc_subregion_at_field) {
if( rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt)) && !(rel_328_delta_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt))) && !(rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt)))) {
auto range = rel_321_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
for(const auto& env1 : range) {
if( rel_41_struct_type_nfields->contains(Tuple<RamDomain,2>{{ramBitCast(env1[1]),ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1))))}},READ_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt)) && !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[2])}};
rel_329_new_dynamically_sized_alloc->insert(tuple,READ_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(dynamically_sized_alloc(?subAlloc) :- 
   static_subobjects.alloc_subregion_at_field(?base,?field,?subAlloc),
   static_allocation_type(?base,?type),
   struct_type_nfields(?type, _tmp_6),
   dynamically_sized_alloc(?base),
    _tmp_6 = (?field+1).
in file allocations-subobjects.dl [505:3-509:36])_");
if(!(rel_327_dynamically_sized_alloc->empty()) && !(rel_322_delta_static_allocation_type->empty()) && !(rel_381_static_subobjects_alloc_subregion_at_field->empty()) && !(rel_41_struct_type_nfields->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt,rel_41_struct_type_nfields->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt,rel_327_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt,rel_328_delta_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt,rel_329_new_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_381_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_381_static_subobjects_alloc_subregion_at_field) {
if( rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt)) && !(rel_328_delta_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt))) && !(rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt)))) {
auto range = rel_322_delta_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt));
for(const auto& env1 : range) {
if( rel_41_struct_type_nfields->contains(Tuple<RamDomain,2>{{ramBitCast(env1[1]),ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1))))}},READ_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[2])}};
rel_329_new_dynamically_sized_alloc->insert(tuple,READ_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt));
break;
}
}
}
}
}
();}
signalHandler->setMsg(R"_(dynamically_sized_alloc(?subAlloc) :- 
   static_subobjects.alloc_subregion_at_field(?base,?field,?subAlloc),
   static_allocation_type(?base,?type),
   struct_type_nfields(?type, _tmp_6),
   dynamically_sized_alloc(?base),
    _tmp_6 = (?field+1).
in file allocations-subobjects.dl [505:3-509:36])_");
if(!(rel_328_delta_dynamically_sized_alloc->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_381_static_subobjects_alloc_subregion_at_field->empty()) && !(rel_41_struct_type_nfields->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt,rel_41_struct_type_nfields->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt,rel_327_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt,rel_328_delta_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt,rel_329_new_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_381_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_381_static_subobjects_alloc_subregion_at_field) {
if( rel_328_delta_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt)) && !(rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt)))) {
auto range = rel_321_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
for(const auto& env1 : range) {
if( rel_41_struct_type_nfields->contains(Tuple<RamDomain,2>{{ramBitCast(env1[1]),ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1))))}},READ_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[2])}};
rel_329_new_dynamically_sized_alloc->insert(tuple,READ_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt));
break;
}
}
}
}
}
();}
signalHandler->setMsg(R"_(dynamically_sized_alloc(?subAlloc) :- 
   subset_subobjects.alloc_subregion_at_field(?base,?field,?subAlloc),
   subset_allocation_type.allocation_type(?base,?type),
   struct_type_nfields(?type, _tmp_7),
   dynamically_sized_alloc(?base),
    _tmp_7 = (?field+1).
in file allocations-subobjects.dl [505:3-509:36])_");
if(!(rel_327_dynamically_sized_alloc->empty()) && !(rel_534_subset_allocation_type_allocation_type->empty()) && !(rel_544_delta_subset_subobjects_alloc_subregion_at_field->empty()) && !(rel_41_struct_type_nfields->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt,rel_41_struct_type_nfields->createContext());
CREATE_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt,rel_327_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt,rel_328_delta_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt,rel_329_new_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_534_subset_allocation_type_allocation_type_op_ctxt,rel_534_subset_allocation_type_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt,rel_535_delta_subset_allocation_type_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_544_delta_subset_subobjects_alloc_subregion_at_field_op_ctxt,rel_544_delta_subset_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_544_delta_subset_subobjects_alloc_subregion_at_field) {
if( rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt)) && !(rel_328_delta_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt))) && !(rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt)))) {
auto range = rel_534_subset_allocation_type_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_534_subset_allocation_type_allocation_type_op_ctxt));
for(const auto& env1 : range) {
if( rel_41_struct_type_nfields->contains(Tuple<RamDomain,2>{{ramBitCast(env1[1]),ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1))))}},READ_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt)) && !(rel_535_delta_subset_allocation_type_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[2])}};
rel_329_new_dynamically_sized_alloc->insert(tuple,READ_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(dynamically_sized_alloc(?subAlloc) :- 
   subset_subobjects.alloc_subregion_at_field(?base,?field,?subAlloc),
   subset_allocation_type.allocation_type(?base,?type),
   struct_type_nfields(?type, _tmp_7),
   dynamically_sized_alloc(?base),
    _tmp_7 = (?field+1).
in file allocations-subobjects.dl [505:3-509:36])_");
if(!(rel_327_dynamically_sized_alloc->empty()) && !(rel_535_delta_subset_allocation_type_allocation_type->empty()) && !(rel_543_subset_subobjects_alloc_subregion_at_field->empty()) && !(rel_41_struct_type_nfields->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt,rel_41_struct_type_nfields->createContext());
CREATE_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt,rel_327_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt,rel_328_delta_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt,rel_329_new_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt,rel_535_delta_subset_allocation_type_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_543_subset_subobjects_alloc_subregion_at_field_op_ctxt,rel_543_subset_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_543_subset_subobjects_alloc_subregion_at_field) {
if( rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt)) && !(rel_328_delta_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt))) && !(rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt)))) {
auto range = rel_535_delta_subset_allocation_type_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_535_delta_subset_allocation_type_allocation_type_op_ctxt));
for(const auto& env1 : range) {
if( rel_41_struct_type_nfields->contains(Tuple<RamDomain,2>{{ramBitCast(env1[1]),ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1))))}},READ_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[2])}};
rel_329_new_dynamically_sized_alloc->insert(tuple,READ_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt));
break;
}
}
}
}
}
();}
signalHandler->setMsg(R"_(dynamically_sized_alloc(?subAlloc) :- 
   subset_subobjects.alloc_subregion_at_field(?base,?field,?subAlloc),
   subset_allocation_type.allocation_type(?base,?type),
   struct_type_nfields(?type, _tmp_7),
   dynamically_sized_alloc(?base),
    _tmp_7 = (?field+1).
in file allocations-subobjects.dl [505:3-509:36])_");
if(!(rel_328_delta_dynamically_sized_alloc->empty()) && !(rel_534_subset_allocation_type_allocation_type->empty()) && !(rel_543_subset_subobjects_alloc_subregion_at_field->empty()) && !(rel_41_struct_type_nfields->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt,rel_41_struct_type_nfields->createContext());
CREATE_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt,rel_327_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt,rel_328_delta_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt,rel_329_new_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_534_subset_allocation_type_allocation_type_op_ctxt,rel_534_subset_allocation_type_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_543_subset_subobjects_alloc_subregion_at_field_op_ctxt,rel_543_subset_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_543_subset_subobjects_alloc_subregion_at_field) {
if( rel_328_delta_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_328_delta_dynamically_sized_alloc_op_ctxt)) && !(rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt)))) {
auto range = rel_534_subset_allocation_type_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_534_subset_allocation_type_allocation_type_op_ctxt));
for(const auto& env1 : range) {
if( rel_41_struct_type_nfields->contains(Tuple<RamDomain,2>{{ramBitCast(env1[1]),ramBitCast((ramBitCast<RamSigned>(env0[1]) + ramBitCast<RamSigned>(RamSigned(1))))}},READ_OP_CONTEXT(rel_41_struct_type_nfields_op_ctxt))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[2])}};
rel_329_new_dynamically_sized_alloc->insert(tuple,READ_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt));
break;
}
}
}
}
}
();}
signalHandler->setMsg(R"_(dynamically_sized_alloc(cat(cat("*argv[",to_string(index)),"]-alloc")) :- 
   +disconnected0(),
   argv_alloc(argvAlloc),
   static_subobjects.alloc_subregion_at_array_index(argvAlloc,index,_).
in file entry-points.dl [38:1-47:62])_");
if(!(rel_146_argv_alloc->empty()) && !(rel_3_disconnected0->empty()) && !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_146_argv_alloc_op_ctxt,rel_146_argv_alloc->createContext());
CREATE_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt,rel_327_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt,rel_329_new_dynamically_sized_alloc->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_146_argv_alloc) {
auto range = rel_391_delta_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_100(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_327_dynamically_sized_alloc->contains(Tuple<RamDomain,1>{{ramBitCast(symTable.encode(symTable.decode(symTable.encode(symTable.decode(RamSigned(59)) + symTable.decode(symTable.encode(std::to_string(env1[1]))))) + symTable.decode(RamSigned(60))))}},READ_OP_CONTEXT(rel_327_dynamically_sized_alloc_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(symTable.encode(symTable.decode(symTable.encode(symTable.decode(RamSigned(59)) + symTable.decode(symTable.encode(std::to_string(env1[1]))))) + symTable.decode(RamSigned(60))))}};
rel_329_new_dynamically_sized_alloc->insert(tuple,READ_OP_CONTEXT(rel_329_new_dynamically_sized_alloc_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(path_component(?component) :- 
   path_component_at_field(?component,_).
in file allocations-subobjects.dl [166:1-166:70])_");
if(!(rel_334_delta_path_component_at_field->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_330_path_component_op_ctxt,rel_330_path_component->createContext());
CREATE_OP_CONTEXT(rel_332_new_path_component_op_ctxt,rel_332_new_path_component->createContext());
CREATE_OP_CONTEXT(rel_334_delta_path_component_at_field_op_ctxt,rel_334_delta_path_component_at_field->createContext());
for(const auto& env0 : *rel_334_delta_path_component_at_field) {
if( !(rel_330_path_component->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_330_path_component_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_332_new_path_component->insert(tuple,READ_OP_CONTEXT(rel_332_new_path_component_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(path_component(?component) :- 
   path_component_at_index(?component,_).
in file allocations-subobjects.dl [167:1-167:70])_");
if(!(rel_337_delta_path_component_at_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_330_path_component_op_ctxt,rel_330_path_component->createContext());
CREATE_OP_CONTEXT(rel_332_new_path_component_op_ctxt,rel_332_new_path_component->createContext());
CREATE_OP_CONTEXT(rel_337_delta_path_component_at_index_op_ctxt,rel_337_delta_path_component_at_index->createContext());
for(const auto& env0 : *rel_337_delta_path_component_at_index) {
if( !(rel_330_path_component->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_330_path_component_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_332_new_path_component->insert(tuple,READ_OP_CONTEXT(rel_332_new_path_component_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(path_component_at_field(as(?component, FieldPathComponent),?field) :- 
   static_subobjects.alloc_subregion_at_field(?alloc,?field,?subAlloc),
   static_subobjects._alloc_subregion(?subAlloc,?alloc,?component,_,_,_).
in file allocations-subobjects.dl [306:3-308:62])_");
if(!(rel_382_delta_static_subobjects_alloc_subregion_at_field->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_333_path_component_at_field_op_ctxt,rel_333_path_component_at_field->createContext());
CREATE_OP_CONTEXT(rel_335_new_path_component_at_field_op_ctxt,rel_335_new_path_component_at_field->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_382_delta_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_382_delta_static_subobjects_alloc_subregion_at_field) {
auto range = rel_375_static_subobjects_alloc_subregion->lowerUpperRange_110000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt));
for(const auto& env1 : range) {
if( !(!rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_111000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast(env1[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast(env1[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt)).empty()) && !(rel_333_path_component_at_field->contains(Tuple<RamDomain,2>{{ramBitCast(env1[2]),ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_333_path_component_at_field_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[2]),ramBitCast(env0[1])}};
rel_335_new_path_component_at_field->insert(tuple,READ_OP_CONTEXT(rel_335_new_path_component_at_field_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(path_component_at_field(as(?component, FieldPathComponent),?field) :- 
   static_subobjects.alloc_subregion_at_field(?alloc,?field,?subAlloc),
   static_subobjects._alloc_subregion(?subAlloc,?alloc,?component,_,_,_).
in file allocations-subobjects.dl [306:3-308:62])_");
if(!(rel_381_static_subobjects_alloc_subregion_at_field->empty()) && !(rel_376_delta_static_subobjects_alloc_subregion->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_333_path_component_at_field_op_ctxt,rel_333_path_component_at_field->createContext());
CREATE_OP_CONTEXT(rel_335_new_path_component_at_field_op_ctxt,rel_335_new_path_component_at_field->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_381_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_381_static_subobjects_alloc_subregion_at_field) {
auto range = rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_110000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_333_path_component_at_field->contains(Tuple<RamDomain,2>{{ramBitCast(env1[2]),ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_333_path_component_at_field_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[2]),ramBitCast(env0[1])}};
rel_335_new_path_component_at_field->insert(tuple,READ_OP_CONTEXT(rel_335_new_path_component_at_field_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(path_component_at_field(as(?component, FieldPathComponent),?field) :- 
   subset_subobjects.alloc_subregion_at_field(?alloc,?field,?subAlloc),
   subset_subobjects._alloc_subregion(?subAlloc,?alloc,?component,_,_,_).
in file allocations-subobjects.dl [306:3-308:62])_");
if(!(rel_544_delta_subset_subobjects_alloc_subregion_at_field->empty()) && !(rel_537_subset_subobjects_alloc_subregion->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_333_path_component_at_field_op_ctxt,rel_333_path_component_at_field->createContext());
CREATE_OP_CONTEXT(rel_335_new_path_component_at_field_op_ctxt,rel_335_new_path_component_at_field->createContext());
CREATE_OP_CONTEXT(rel_537_subset_subobjects_alloc_subregion_op_ctxt,rel_537_subset_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_538_delta_subset_subobjects_alloc_subregion_op_ctxt,rel_538_delta_subset_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_544_delta_subset_subobjects_alloc_subregion_at_field_op_ctxt,rel_544_delta_subset_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_544_delta_subset_subobjects_alloc_subregion_at_field) {
auto range = rel_537_subset_subobjects_alloc_subregion->lowerUpperRange_110000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_537_subset_subobjects_alloc_subregion_op_ctxt));
for(const auto& env1 : range) {
if( !(!rel_538_delta_subset_subobjects_alloc_subregion->lowerUpperRange_111000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast(env1[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast(env1[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_538_delta_subset_subobjects_alloc_subregion_op_ctxt)).empty()) && !(rel_333_path_component_at_field->contains(Tuple<RamDomain,2>{{ramBitCast(env1[2]),ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_333_path_component_at_field_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[2]),ramBitCast(env0[1])}};
rel_335_new_path_component_at_field->insert(tuple,READ_OP_CONTEXT(rel_335_new_path_component_at_field_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(path_component_at_field(as(?component, FieldPathComponent),?field) :- 
   subset_subobjects.alloc_subregion_at_field(?alloc,?field,?subAlloc),
   subset_subobjects._alloc_subregion(?subAlloc,?alloc,?component,_,_,_).
in file allocations-subobjects.dl [306:3-308:62])_");
if(!(rel_543_subset_subobjects_alloc_subregion_at_field->empty()) && !(rel_538_delta_subset_subobjects_alloc_subregion->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_333_path_component_at_field_op_ctxt,rel_333_path_component_at_field->createContext());
CREATE_OP_CONTEXT(rel_335_new_path_component_at_field_op_ctxt,rel_335_new_path_component_at_field->createContext());
CREATE_OP_CONTEXT(rel_538_delta_subset_subobjects_alloc_subregion_op_ctxt,rel_538_delta_subset_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_543_subset_subobjects_alloc_subregion_at_field_op_ctxt,rel_543_subset_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_543_subset_subobjects_alloc_subregion_at_field) {
auto range = rel_538_delta_subset_subobjects_alloc_subregion->lowerUpperRange_110000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_538_delta_subset_subobjects_alloc_subregion_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_333_path_component_at_field->contains(Tuple<RamDomain,2>{{ramBitCast(env1[2]),ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_333_path_component_at_field_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[2]),ramBitCast(env0[1])}};
rel_335_new_path_component_at_field->insert(tuple,READ_OP_CONTEXT(rel_335_new_path_component_at_field_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(path_component_at_index(as(?component, ArrayIndexPathComponent),?idx) :- 
   static_subobjects.alloc_subregion_at_array_index(?alloc,?idx,?subAlloc),
   static_subobjects._alloc_subregion(?subAlloc,?alloc,?component,_,_,_).
in file allocations-subobjects.dl [302:3-304:62])_");
if(!(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_336_path_component_at_index_op_ctxt,rel_336_path_component_at_index->createContext());
CREATE_OP_CONTEXT(rel_338_new_path_component_at_index_op_ctxt,rel_338_new_path_component_at_index->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_391_delta_static_subobjects_alloc_subregion_at_array_index) {
auto range = rel_375_static_subobjects_alloc_subregion->lowerUpperRange_110000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt));
for(const auto& env1 : range) {
if( !(!rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_111000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast(env1[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast(env1[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt)).empty()) && !(rel_336_path_component_at_index->contains(Tuple<RamDomain,2>{{ramBitCast(env1[2]),ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_336_path_component_at_index_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[2]),ramBitCast(env0[1])}};
rel_338_new_path_component_at_index->insert(tuple,READ_OP_CONTEXT(rel_338_new_path_component_at_index_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(path_component_at_index(as(?component, ArrayIndexPathComponent),?idx) :- 
   static_subobjects.alloc_subregion_at_array_index(?alloc,?idx,?subAlloc),
   static_subobjects._alloc_subregion(?subAlloc,?alloc,?component,_,_,_).
in file allocations-subobjects.dl [302:3-304:62])_");
if(!(rel_390_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_376_delta_static_subobjects_alloc_subregion->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_336_path_component_at_index_op_ctxt,rel_336_path_component_at_index->createContext());
CREATE_OP_CONTEXT(rel_338_new_path_component_at_index_op_ctxt,rel_338_new_path_component_at_index->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_390_static_subobjects_alloc_subregion_at_array_index) {
auto range = rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_110000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_336_path_component_at_index->contains(Tuple<RamDomain,2>{{ramBitCast(env1[2]),ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_336_path_component_at_index_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[2]),ramBitCast(env0[1])}};
rel_338_new_path_component_at_index->insert(tuple,READ_OP_CONTEXT(rel_338_new_path_component_at_index_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(path_component_at_index(as(?component, ArrayIndexPathComponent),?idx) :- 
   subset_subobjects.alloc_subregion_at_array_index(?alloc,?idx,?subAlloc),
   subset_subobjects._alloc_subregion(?subAlloc,?alloc,?component,_,_,_).
in file allocations-subobjects.dl [302:3-304:62])_");
if(!(rel_553_delta_subset_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_537_subset_subobjects_alloc_subregion->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_336_path_component_at_index_op_ctxt,rel_336_path_component_at_index->createContext());
CREATE_OP_CONTEXT(rel_338_new_path_component_at_index_op_ctxt,rel_338_new_path_component_at_index->createContext());
CREATE_OP_CONTEXT(rel_537_subset_subobjects_alloc_subregion_op_ctxt,rel_537_subset_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_538_delta_subset_subobjects_alloc_subregion_op_ctxt,rel_538_delta_subset_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_553_delta_subset_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_553_delta_subset_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_553_delta_subset_subobjects_alloc_subregion_at_array_index) {
auto range = rel_537_subset_subobjects_alloc_subregion->lowerUpperRange_110000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_537_subset_subobjects_alloc_subregion_op_ctxt));
for(const auto& env1 : range) {
if( !(!rel_538_delta_subset_subobjects_alloc_subregion->lowerUpperRange_111000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast(env1[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast(env1[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_538_delta_subset_subobjects_alloc_subregion_op_ctxt)).empty()) && !(rel_336_path_component_at_index->contains(Tuple<RamDomain,2>{{ramBitCast(env1[2]),ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_336_path_component_at_index_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[2]),ramBitCast(env0[1])}};
rel_338_new_path_component_at_index->insert(tuple,READ_OP_CONTEXT(rel_338_new_path_component_at_index_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(path_component_at_index(as(?component, ArrayIndexPathComponent),?idx) :- 
   subset_subobjects.alloc_subregion_at_array_index(?alloc,?idx,?subAlloc),
   subset_subobjects._alloc_subregion(?subAlloc,?alloc,?component,_,_,_).
in file allocations-subobjects.dl [302:3-304:62])_");
if(!(rel_552_subset_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_538_delta_subset_subobjects_alloc_subregion->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_336_path_component_at_index_op_ctxt,rel_336_path_component_at_index->createContext());
CREATE_OP_CONTEXT(rel_338_new_path_component_at_index_op_ctxt,rel_338_new_path_component_at_index->createContext());
CREATE_OP_CONTEXT(rel_538_delta_subset_subobjects_alloc_subregion_op_ctxt,rel_538_delta_subset_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_552_subset_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_552_subset_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_552_subset_subobjects_alloc_subregion_at_array_index) {
auto range = rel_538_delta_subset_subobjects_alloc_subregion->lowerUpperRange_110000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_538_delta_subset_subobjects_alloc_subregion_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_336_path_component_at_index->contains(Tuple<RamDomain,2>{{ramBitCast(env1[2]),ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_336_path_component_at_index_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[2]),ramBitCast(env0[1])}};
rel_338_new_path_component_at_index->insert(tuple,READ_OP_CONTEXT(rel_338_new_path_component_at_index_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(assign_instr(?toVar,?value) :- 
   subset.callgraph.reachable_func(?instrFunc),
   instr_func(?instr,?instrFunc),
   bitcast_instr_from_operand(?instr,?value),
   instr_assigns_to(?instr,?toVar).
in file assignment.dl [26:1-30:37])_");
if(!(rel_175_instr_func->empty()) && !(rel_228_bitcast_instr_from_operand->empty()) && !(rel_415_delta_subset_callgraph_reachable_func->empty()) && !(rel_173_instr_assigns_to->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt,rel_173_instr_assigns_to->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_228_bitcast_instr_from_operand_op_ctxt,rel_228_bitcast_instr_from_operand->createContext());
CREATE_OP_CONTEXT(rel_339_assign_instr_op_ctxt,rel_339_assign_instr->createContext());
CREATE_OP_CONTEXT(rel_341_new_assign_instr_op_ctxt,rel_341_new_assign_instr->createContext());
CREATE_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt,rel_415_delta_subset_callgraph_reachable_func->createContext());
for(const auto& env0 : *rel_415_delta_subset_callgraph_reachable_func) {
auto range = rel_175_instr_func->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_228_bitcast_instr_from_operand->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_228_bitcast_instr_from_operand_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_173_instr_assigns_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_339_assign_instr->contains(Tuple<RamDomain,2>{{ramBitCast(env3[1]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_339_assign_instr_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env3[1]),ramBitCast(env2[1])}};
rel_341_new_assign_instr->insert(tuple,READ_OP_CONTEXT(rel_341_new_assign_instr_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(assign_instr(?toVar,?value) :- 
   subset.callgraph.reachable_func(?instrFunc),
   instr_func(?instr,?instrFunc),
   ptrtoint_instr_from_operand(?instr,?value),
   instr_assigns_to(?instr,?toVar).
in file assignment.dl [33:1-37:37])_");
if(!(rel_175_instr_func->empty()) && !(rel_240_ptrtoint_instr_from_operand->empty()) && !(rel_415_delta_subset_callgraph_reachable_func->empty()) && !(rel_173_instr_assigns_to->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt,rel_173_instr_assigns_to->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_240_ptrtoint_instr_from_operand_op_ctxt,rel_240_ptrtoint_instr_from_operand->createContext());
CREATE_OP_CONTEXT(rel_339_assign_instr_op_ctxt,rel_339_assign_instr->createContext());
CREATE_OP_CONTEXT(rel_341_new_assign_instr_op_ctxt,rel_341_new_assign_instr->createContext());
CREATE_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt,rel_415_delta_subset_callgraph_reachable_func->createContext());
for(const auto& env0 : *rel_415_delta_subset_callgraph_reachable_func) {
auto range = rel_175_instr_func->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_240_ptrtoint_instr_from_operand->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_240_ptrtoint_instr_from_operand_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_173_instr_assigns_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_339_assign_instr->contains(Tuple<RamDomain,2>{{ramBitCast(env3[1]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_339_assign_instr_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env3[1]),ramBitCast(env2[1])}};
rel_341_new_assign_instr->insert(tuple,READ_OP_CONTEXT(rel_341_new_assign_instr_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(assign_instr(?toVar,?value) :- 
   subset.callgraph.reachable_func(?instrFunc),
   instr_func(?instr,?instrFunc),
   phi_instr_pair(?instr,_,?value,_),
   instr_assigns_to(?instr,?toVar).
in file assignment.dl [41:1-45:37])_");
if(!(rel_175_instr_func->empty()) && !(rel_239_phi_instr_pair->empty()) && !(rel_415_delta_subset_callgraph_reachable_func->empty()) && !(rel_173_instr_assigns_to->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt,rel_173_instr_assigns_to->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_239_phi_instr_pair_op_ctxt,rel_239_phi_instr_pair->createContext());
CREATE_OP_CONTEXT(rel_339_assign_instr_op_ctxt,rel_339_assign_instr->createContext());
CREATE_OP_CONTEXT(rel_341_new_assign_instr_op_ctxt,rel_341_new_assign_instr->createContext());
CREATE_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt,rel_415_delta_subset_callgraph_reachable_func->createContext());
for(const auto& env0 : *rel_415_delta_subset_callgraph_reachable_func) {
auto range = rel_175_instr_func->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_239_phi_instr_pair->lowerUpperRange_1000(Tuple<RamDomain,4>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_239_phi_instr_pair_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_173_instr_assigns_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_339_assign_instr->contains(Tuple<RamDomain,2>{{ramBitCast(env3[1]),ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_339_assign_instr_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env3[1]),ramBitCast(env2[2])}};
rel_341_new_assign_instr->insert(tuple,READ_OP_CONTEXT(rel_341_new_assign_instr_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(assign_instr(?toVar,?value) :- 
   subset.callgraph.reachable_func(?instrFunc),
   instr_func(?instr,?instrFunc),
   select_instr(?instr),
   select_instr_first_operand(?instr,?value),
   instr_assigns_to(?instr,?toVar),
   instr_returns_type(?instr,?type),
   !vector_type(?type).
in file assignment.dl [48:1-56:24])_");
if(!(rel_175_instr_func->empty()) && !(rel_173_instr_assigns_to->empty()) && !(rel_241_select_instr->empty()) && !(rel_242_select_instr_first_operand->empty()) && !(rel_415_delta_subset_callgraph_reachable_func->empty()) && !(rel_174_instr_returns_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_54_vector_type_op_ctxt,rel_54_vector_type->createContext());
CREATE_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt,rel_173_instr_assigns_to->createContext());
CREATE_OP_CONTEXT(rel_174_instr_returns_type_op_ctxt,rel_174_instr_returns_type->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_241_select_instr_op_ctxt,rel_241_select_instr->createContext());
CREATE_OP_CONTEXT(rel_242_select_instr_first_operand_op_ctxt,rel_242_select_instr_first_operand->createContext());
CREATE_OP_CONTEXT(rel_339_assign_instr_op_ctxt,rel_339_assign_instr->createContext());
CREATE_OP_CONTEXT(rel_341_new_assign_instr_op_ctxt,rel_341_new_assign_instr->createContext());
CREATE_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt,rel_415_delta_subset_callgraph_reachable_func->createContext());
for(const auto& env0 : *rel_415_delta_subset_callgraph_reachable_func) {
auto range = rel_175_instr_func->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
if( rel_241_select_instr->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_241_select_instr_op_ctxt))) {
auto range = rel_242_select_instr_first_operand->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_242_select_instr_first_operand_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_173_instr_assigns_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_339_assign_instr->contains(Tuple<RamDomain,2>{{ramBitCast(env3[1]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_339_assign_instr_op_ctxt)))) {
auto range = rel_174_instr_returns_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_174_instr_returns_type_op_ctxt));
for(const auto& env4 : range) {
if( !(rel_54_vector_type->contains(Tuple<RamDomain,1>{{ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_54_vector_type_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env3[1]),ramBitCast(env2[1])}};
rel_341_new_assign_instr->insert(tuple,READ_OP_CONTEXT(rel_341_new_assign_instr_op_ctxt));
break;
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(assign_instr(?toVar,?value) :- 
   subset.callgraph.reachable_func(?instrFunc),
   instr_func(?instr,?instrFunc),
   select_instr(?instr),
   select_instr_second_operand(?instr,?value),
   instr_assigns_to(?instr,?toVar),
   instr_returns_type(?instr,?type),
   !vector_type(?type).
in file assignment.dl [48:1-56:24])_");
if(!(rel_175_instr_func->empty()) && !(rel_173_instr_assigns_to->empty()) && !(rel_241_select_instr->empty()) && !(rel_243_select_instr_second_operand->empty()) && !(rel_415_delta_subset_callgraph_reachable_func->empty()) && !(rel_174_instr_returns_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_54_vector_type_op_ctxt,rel_54_vector_type->createContext());
CREATE_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt,rel_173_instr_assigns_to->createContext());
CREATE_OP_CONTEXT(rel_174_instr_returns_type_op_ctxt,rel_174_instr_returns_type->createContext());
CREATE_OP_CONTEXT(rel_175_instr_func_op_ctxt,rel_175_instr_func->createContext());
CREATE_OP_CONTEXT(rel_241_select_instr_op_ctxt,rel_241_select_instr->createContext());
CREATE_OP_CONTEXT(rel_243_select_instr_second_operand_op_ctxt,rel_243_select_instr_second_operand->createContext());
CREATE_OP_CONTEXT(rel_339_assign_instr_op_ctxt,rel_339_assign_instr->createContext());
CREATE_OP_CONTEXT(rel_341_new_assign_instr_op_ctxt,rel_341_new_assign_instr->createContext());
CREATE_OP_CONTEXT(rel_415_delta_subset_callgraph_reachable_func_op_ctxt,rel_415_delta_subset_callgraph_reachable_func->createContext());
for(const auto& env0 : *rel_415_delta_subset_callgraph_reachable_func) {
auto range = rel_175_instr_func->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_175_instr_func_op_ctxt));
for(const auto& env1 : range) {
if( rel_241_select_instr->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_241_select_instr_op_ctxt))) {
auto range = rel_243_select_instr_second_operand->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_243_select_instr_second_operand_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_173_instr_assigns_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_173_instr_assigns_to_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_339_assign_instr->contains(Tuple<RamDomain,2>{{ramBitCast(env3[1]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_339_assign_instr_op_ctxt)))) {
auto range = rel_174_instr_returns_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_174_instr_returns_type_op_ctxt));
for(const auto& env4 : range) {
if( !(rel_54_vector_type->contains(Tuple<RamDomain,1>{{ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_54_vector_type_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env3[1]),ramBitCast(env2[1])}};
rel_341_new_assign_instr->insert(tuple,READ_OP_CONTEXT(rel_341_new_assign_instr_op_ctxt));
break;
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(initialized_by_constant(?alloc,?init) :- 
   global_var_initializer(?var,?init),
   global_allocation_by_variable(?var,?baseAlloc),
   static_subobjects.alloc_subregion_at_array_index(?baseAlloc,0,?alloc).
in file constant-init.dl [9:1-12:76])_");
if(!(rel_166_global_allocation_by_variable->empty()) && !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_252_global_var_initializer->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_166_global_allocation_by_variable_op_ctxt,rel_166_global_allocation_by_variable->createContext());
CREATE_OP_CONTEXT(rel_252_global_var_initializer_op_ctxt,rel_252_global_var_initializer->createContext());
CREATE_OP_CONTEXT(rel_342_initialized_by_constant_op_ctxt,rel_342_initialized_by_constant->createContext());
CREATE_OP_CONTEXT(rel_344_new_initialized_by_constant_op_ctxt,rel_344_new_initialized_by_constant->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_252_global_var_initializer) {
auto range = rel_166_global_allocation_by_variable->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_166_global_allocation_by_variable_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_391_delta_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[1]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_342_initialized_by_constant->contains(Tuple<RamDomain,2>{{ramBitCast(env2[2]),ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_342_initialized_by_constant_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env2[2]),ramBitCast(env0[1])}};
rel_344_new_initialized_by_constant->insert(tuple,READ_OP_CONTEXT(rel_344_new_initialized_by_constant_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(initialized_by_constant(?alloc,?innerConstant) :- 
   initialized_by_constant(?baseAlloc,?constant),
   constant_struct(?constant),
   constant_struct_index(?constant,?field,?innerConstant),
   static_subobjects.alloc_subregion_at_field(?baseAlloc,?field,?alloc),
   constant_has_type(?constant,?constantType),
   static_allocation_type(?baseAlloc,?type),
   struct_type(?type),
   struct_type(?constantType),
   type_compatible_up_to_field(?type,?constantType,?field).
in file constant-init.dl [14:1-24:62])_");
if(!(rel_52_struct_type->empty()) && !(rel_343_delta_initialized_by_constant->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_251_constant_struct_index->empty()) && !(rel_29_constant_has_type->empty()) && !(rel_381_static_subobjects_alloc_subregion_at_field->empty()) && !(rel_77_type_compatible_up_to_field->empty()) && !(rel_123_constant_struct->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_52_struct_type_op_ctxt,rel_52_struct_type->createContext());
CREATE_OP_CONTEXT(rel_29_constant_has_type_op_ctxt,rel_29_constant_has_type->createContext());
CREATE_OP_CONTEXT(rel_77_type_compatible_up_to_field_op_ctxt,rel_77_type_compatible_up_to_field->createContext());
CREATE_OP_CONTEXT(rel_123_constant_struct_op_ctxt,rel_123_constant_struct->createContext());
CREATE_OP_CONTEXT(rel_251_constant_struct_index_op_ctxt,rel_251_constant_struct_index->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_342_initialized_by_constant_op_ctxt,rel_342_initialized_by_constant->createContext());
CREATE_OP_CONTEXT(rel_343_delta_initialized_by_constant_op_ctxt,rel_343_delta_initialized_by_constant->createContext());
CREATE_OP_CONTEXT(rel_344_new_initialized_by_constant_op_ctxt,rel_344_new_initialized_by_constant->createContext());
CREATE_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_381_static_subobjects_alloc_subregion_at_field->createContext());
CREATE_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_382_delta_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_343_delta_initialized_by_constant) {
if( rel_123_constant_struct->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_123_constant_struct_op_ctxt))) {
auto range = rel_251_constant_struct_index->lowerUpperRange_100(Tuple<RamDomain,3>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_251_constant_struct_index_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_381_static_subobjects_alloc_subregion_at_field->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_342_initialized_by_constant->contains(Tuple<RamDomain,2>{{ramBitCast(env2[2]),ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_342_initialized_by_constant_op_ctxt))) && !(rel_382_delta_static_subobjects_alloc_subregion_at_field->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env1[1]),ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt)))) {
auto range = rel_29_constant_has_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_29_constant_has_type_op_ctxt));
for(const auto& env3 : range) {
if( rel_52_struct_type->contains(Tuple<RamDomain,1>{{ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_52_struct_type_op_ctxt))) {
auto range = rel_321_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
for(const auto& env4 : range) {
if( rel_77_type_compatible_up_to_field->contains(Tuple<RamDomain,3>{{ramBitCast(env4[1]),ramBitCast(env3[1]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_77_type_compatible_up_to_field_op_ctxt)) && rel_52_struct_type->contains(Tuple<RamDomain,1>{{ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_52_struct_type_op_ctxt)) && !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env2[2]),ramBitCast(env1[2])}};
rel_344_new_initialized_by_constant->insert(tuple,READ_OP_CONTEXT(rel_344_new_initialized_by_constant_op_ctxt));
}
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(initialized_by_constant(?alloc,?innerConstant) :- 
   initialized_by_constant(?baseAlloc,?constant),
   constant_struct(?constant),
   constant_struct_index(?constant,?field,?innerConstant),
   static_subobjects.alloc_subregion_at_field(?baseAlloc,?field,?alloc),
   constant_has_type(?constant,?constantType),
   static_allocation_type(?baseAlloc,?type),
   struct_type(?type),
   struct_type(?constantType),
   type_compatible_up_to_field(?type,?constantType,?field).
in file constant-init.dl [14:1-24:62])_");
if(!(rel_52_struct_type->empty()) && !(rel_342_initialized_by_constant->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_251_constant_struct_index->empty()) && !(rel_29_constant_has_type->empty()) && !(rel_382_delta_static_subobjects_alloc_subregion_at_field->empty()) && !(rel_77_type_compatible_up_to_field->empty()) && !(rel_123_constant_struct->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_52_struct_type_op_ctxt,rel_52_struct_type->createContext());
CREATE_OP_CONTEXT(rel_29_constant_has_type_op_ctxt,rel_29_constant_has_type->createContext());
CREATE_OP_CONTEXT(rel_77_type_compatible_up_to_field_op_ctxt,rel_77_type_compatible_up_to_field->createContext());
CREATE_OP_CONTEXT(rel_123_constant_struct_op_ctxt,rel_123_constant_struct->createContext());
CREATE_OP_CONTEXT(rel_251_constant_struct_index_op_ctxt,rel_251_constant_struct_index->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_342_initialized_by_constant_op_ctxt,rel_342_initialized_by_constant->createContext());
CREATE_OP_CONTEXT(rel_344_new_initialized_by_constant_op_ctxt,rel_344_new_initialized_by_constant->createContext());
CREATE_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_382_delta_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_342_initialized_by_constant) {
if( rel_123_constant_struct->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_123_constant_struct_op_ctxt))) {
auto range = rel_251_constant_struct_index->lowerUpperRange_100(Tuple<RamDomain,3>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_251_constant_struct_index_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_382_delta_static_subobjects_alloc_subregion_at_field->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_342_initialized_by_constant->contains(Tuple<RamDomain,2>{{ramBitCast(env2[2]),ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_342_initialized_by_constant_op_ctxt)))) {
auto range = rel_29_constant_has_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_29_constant_has_type_op_ctxt));
for(const auto& env3 : range) {
if( rel_52_struct_type->contains(Tuple<RamDomain,1>{{ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_52_struct_type_op_ctxt))) {
auto range = rel_321_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
for(const auto& env4 : range) {
if( rel_77_type_compatible_up_to_field->contains(Tuple<RamDomain,3>{{ramBitCast(env4[1]),ramBitCast(env3[1]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_77_type_compatible_up_to_field_op_ctxt)) && rel_52_struct_type->contains(Tuple<RamDomain,1>{{ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_52_struct_type_op_ctxt)) && !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env2[2]),ramBitCast(env1[2])}};
rel_344_new_initialized_by_constant->insert(tuple,READ_OP_CONTEXT(rel_344_new_initialized_by_constant_op_ctxt));
}
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(initialized_by_constant(?alloc,?innerConstant) :- 
   initialized_by_constant(?baseAlloc,?constant),
   constant_struct(?constant),
   constant_struct_index(?constant,?field,?innerConstant),
   static_subobjects.alloc_subregion_at_field(?baseAlloc,?field,?alloc),
   constant_has_type(?constant,?constantType),
   static_allocation_type(?baseAlloc,?type),
   struct_type(?type),
   struct_type(?constantType),
   type_compatible_up_to_field(?type,?constantType,?field).
in file constant-init.dl [14:1-24:62])_");
if(!(rel_52_struct_type->empty()) && !(rel_342_initialized_by_constant->empty()) && !(rel_322_delta_static_allocation_type->empty()) && !(rel_251_constant_struct_index->empty()) && !(rel_29_constant_has_type->empty()) && !(rel_381_static_subobjects_alloc_subregion_at_field->empty()) && !(rel_77_type_compatible_up_to_field->empty()) && !(rel_123_constant_struct->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_52_struct_type_op_ctxt,rel_52_struct_type->createContext());
CREATE_OP_CONTEXT(rel_29_constant_has_type_op_ctxt,rel_29_constant_has_type->createContext());
CREATE_OP_CONTEXT(rel_77_type_compatible_up_to_field_op_ctxt,rel_77_type_compatible_up_to_field->createContext());
CREATE_OP_CONTEXT(rel_123_constant_struct_op_ctxt,rel_123_constant_struct->createContext());
CREATE_OP_CONTEXT(rel_251_constant_struct_index_op_ctxt,rel_251_constant_struct_index->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_342_initialized_by_constant_op_ctxt,rel_342_initialized_by_constant->createContext());
CREATE_OP_CONTEXT(rel_344_new_initialized_by_constant_op_ctxt,rel_344_new_initialized_by_constant->createContext());
CREATE_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_381_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_342_initialized_by_constant) {
if( rel_123_constant_struct->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_123_constant_struct_op_ctxt))) {
auto range = rel_251_constant_struct_index->lowerUpperRange_100(Tuple<RamDomain,3>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_251_constant_struct_index_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_381_static_subobjects_alloc_subregion_at_field->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_342_initialized_by_constant->contains(Tuple<RamDomain,2>{{ramBitCast(env2[2]),ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_342_initialized_by_constant_op_ctxt)))) {
auto range = rel_29_constant_has_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_29_constant_has_type_op_ctxt));
for(const auto& env3 : range) {
if( rel_52_struct_type->contains(Tuple<RamDomain,1>{{ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_52_struct_type_op_ctxt))) {
auto range = rel_322_delta_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt));
for(const auto& env4 : range) {
if( rel_77_type_compatible_up_to_field->contains(Tuple<RamDomain,3>{{ramBitCast(env4[1]),ramBitCast(env3[1]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_77_type_compatible_up_to_field_op_ctxt)) && rel_52_struct_type->contains(Tuple<RamDomain,1>{{ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_52_struct_type_op_ctxt))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env2[2]),ramBitCast(env1[2])}};
rel_344_new_initialized_by_constant->insert(tuple,READ_OP_CONTEXT(rel_344_new_initialized_by_constant_op_ctxt));
}
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(initialized_by_constant(?alloc,?innerConstant) :- 
   initialized_by_constant(?baseAlloc,?constant),
   constant_array(?constant),
   constant_array_index(?constant,?index,?innerConstant),
   static_subobjects.alloc_subregion_at_array_index(?baseAlloc,?index,?alloc),
   constant_has_type(?constant,?constantType),
   static_allocation_type(?baseAlloc,?type),
   array_type(?type),
   array_type(?constantType),
   type_compatible(?type,?constantType).
in file constant-init.dl [26:1-36:42])_");
if(!(rel_50_array_type->empty()) && !(rel_343_delta_initialized_by_constant->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_201_constant_array_index->empty()) && !(rel_29_constant_has_type->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_74_type_compatible->empty()) && !(rel_117_constant_array->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_29_constant_has_type_op_ctxt,rel_29_constant_has_type->createContext());
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_74_type_compatible_op_ctxt,rel_74_type_compatible->createContext());
CREATE_OP_CONTEXT(rel_117_constant_array_op_ctxt,rel_117_constant_array->createContext());
CREATE_OP_CONTEXT(rel_201_constant_array_index_op_ctxt,rel_201_constant_array_index->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_342_initialized_by_constant_op_ctxt,rel_342_initialized_by_constant->createContext());
CREATE_OP_CONTEXT(rel_343_delta_initialized_by_constant_op_ctxt,rel_343_delta_initialized_by_constant->createContext());
CREATE_OP_CONTEXT(rel_344_new_initialized_by_constant_op_ctxt,rel_344_new_initialized_by_constant->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_343_delta_initialized_by_constant) {
if( rel_117_constant_array->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_117_constant_array_op_ctxt))) {
auto range = rel_201_constant_array_index->lowerUpperRange_100(Tuple<RamDomain,3>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_201_constant_array_index_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env1[1]),ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt))) && !(rel_342_initialized_by_constant->contains(Tuple<RamDomain,2>{{ramBitCast(env2[2]),ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_342_initialized_by_constant_op_ctxt)))) {
auto range = rel_29_constant_has_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_29_constant_has_type_op_ctxt));
for(const auto& env3 : range) {
if( rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
auto range = rel_321_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
for(const auto& env4 : range) {
if( rel_74_type_compatible->contains(Tuple<RamDomain,2>{{ramBitCast(env4[1]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_74_type_compatible_op_ctxt)) && rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt)) && !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env2[2]),ramBitCast(env1[2])}};
rel_344_new_initialized_by_constant->insert(tuple,READ_OP_CONTEXT(rel_344_new_initialized_by_constant_op_ctxt));
}
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(initialized_by_constant(?alloc,?innerConstant) :- 
   initialized_by_constant(?baseAlloc,?constant),
   constant_array(?constant),
   constant_array_index(?constant,?index,?innerConstant),
   static_subobjects.alloc_subregion_at_array_index(?baseAlloc,?index,?alloc),
   constant_has_type(?constant,?constantType),
   static_allocation_type(?baseAlloc,?type),
   array_type(?type),
   array_type(?constantType),
   type_compatible(?type,?constantType).
in file constant-init.dl [26:1-36:42])_");
if(!(rel_50_array_type->empty()) && !(rel_342_initialized_by_constant->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_201_constant_array_index->empty()) && !(rel_29_constant_has_type->empty()) && !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_74_type_compatible->empty()) && !(rel_117_constant_array->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_29_constant_has_type_op_ctxt,rel_29_constant_has_type->createContext());
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_74_type_compatible_op_ctxt,rel_74_type_compatible->createContext());
CREATE_OP_CONTEXT(rel_117_constant_array_op_ctxt,rel_117_constant_array->createContext());
CREATE_OP_CONTEXT(rel_201_constant_array_index_op_ctxt,rel_201_constant_array_index->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_342_initialized_by_constant_op_ctxt,rel_342_initialized_by_constant->createContext());
CREATE_OP_CONTEXT(rel_344_new_initialized_by_constant_op_ctxt,rel_344_new_initialized_by_constant->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_342_initialized_by_constant) {
if( rel_117_constant_array->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_117_constant_array_op_ctxt))) {
auto range = rel_201_constant_array_index->lowerUpperRange_100(Tuple<RamDomain,3>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_201_constant_array_index_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_391_delta_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_342_initialized_by_constant->contains(Tuple<RamDomain,2>{{ramBitCast(env2[2]),ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_342_initialized_by_constant_op_ctxt)))) {
auto range = rel_29_constant_has_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_29_constant_has_type_op_ctxt));
for(const auto& env3 : range) {
if( rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
auto range = rel_321_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
for(const auto& env4 : range) {
if( rel_74_type_compatible->contains(Tuple<RamDomain,2>{{ramBitCast(env4[1]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_74_type_compatible_op_ctxt)) && rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt)) && !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env2[2]),ramBitCast(env1[2])}};
rel_344_new_initialized_by_constant->insert(tuple,READ_OP_CONTEXT(rel_344_new_initialized_by_constant_op_ctxt));
}
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(initialized_by_constant(?alloc,?innerConstant) :- 
   initialized_by_constant(?baseAlloc,?constant),
   constant_array(?constant),
   constant_array_index(?constant,?index,?innerConstant),
   static_subobjects.alloc_subregion_at_array_index(?baseAlloc,?index,?alloc),
   constant_has_type(?constant,?constantType),
   static_allocation_type(?baseAlloc,?type),
   array_type(?type),
   array_type(?constantType),
   type_compatible(?type,?constantType).
in file constant-init.dl [26:1-36:42])_");
if(!(rel_50_array_type->empty()) && !(rel_342_initialized_by_constant->empty()) && !(rel_322_delta_static_allocation_type->empty()) && !(rel_201_constant_array_index->empty()) && !(rel_29_constant_has_type->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_74_type_compatible->empty()) && !(rel_117_constant_array->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_29_constant_has_type_op_ctxt,rel_29_constant_has_type->createContext());
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_74_type_compatible_op_ctxt,rel_74_type_compatible->createContext());
CREATE_OP_CONTEXT(rel_117_constant_array_op_ctxt,rel_117_constant_array->createContext());
CREATE_OP_CONTEXT(rel_201_constant_array_index_op_ctxt,rel_201_constant_array_index->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_342_initialized_by_constant_op_ctxt,rel_342_initialized_by_constant->createContext());
CREATE_OP_CONTEXT(rel_344_new_initialized_by_constant_op_ctxt,rel_344_new_initialized_by_constant->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_342_initialized_by_constant) {
if( rel_117_constant_array->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_117_constant_array_op_ctxt))) {
auto range = rel_201_constant_array_index->lowerUpperRange_100(Tuple<RamDomain,3>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_201_constant_array_index_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_342_initialized_by_constant->contains(Tuple<RamDomain,2>{{ramBitCast(env2[2]),ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_342_initialized_by_constant_op_ctxt)))) {
auto range = rel_29_constant_has_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_29_constant_has_type_op_ctxt));
for(const auto& env3 : range) {
if( rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
auto range = rel_322_delta_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt));
for(const auto& env4 : range) {
if( rel_74_type_compatible->contains(Tuple<RamDomain,2>{{ramBitCast(env4[1]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_74_type_compatible_op_ctxt)) && rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env2[2]),ramBitCast(env1[2])}};
rel_344_new_initialized_by_constant->insert(tuple,READ_OP_CONTEXT(rel_344_new_initialized_by_constant_op_ctxt));
}
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(constant_ptr_points_to(?aCtx,?someAlloc,?aCtx,?alloc) :- 
   empty_alloc_context(?aCtx),
   initialized_by_constant(?alloc,?constant),
   constant_points_to(?constant,?someAlloc).
in file constant-init.dl [56:1-59:46])_");
if(!(rel_343_delta_initialized_by_constant->empty()) && !(rel_357_constant_points_to->empty()) && !(rel_182_empty_alloc_context->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_182_empty_alloc_context_op_ctxt,rel_182_empty_alloc_context->createContext());
CREATE_OP_CONTEXT(rel_343_delta_initialized_by_constant_op_ctxt,rel_343_delta_initialized_by_constant->createContext());
CREATE_OP_CONTEXT(rel_345_constant_ptr_points_to_op_ctxt,rel_345_constant_ptr_points_to->createContext());
CREATE_OP_CONTEXT(rel_347_new_constant_ptr_points_to_op_ctxt,rel_347_new_constant_ptr_points_to->createContext());
CREATE_OP_CONTEXT(rel_357_constant_points_to_op_ctxt,rel_357_constant_points_to->createContext());
CREATE_OP_CONTEXT(rel_358_delta_constant_points_to_op_ctxt,rel_358_delta_constant_points_to->createContext());
for(const auto& env0 : *rel_182_empty_alloc_context) {
for(const auto& env1 : *rel_343_delta_initialized_by_constant) {
auto range = rel_357_constant_points_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_357_constant_points_to_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_345_constant_ptr_points_to->contains(Tuple<RamDomain,4>{{ramBitCast(env0[0]),ramBitCast(env2[1]),ramBitCast(env0[0]),ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_345_constant_ptr_points_to_op_ctxt))) && !(rel_358_delta_constant_points_to->contains(Tuple<RamDomain,2>{{ramBitCast(env1[1]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_358_delta_constant_points_to_op_ctxt)))) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1]),ramBitCast(env0[0]),ramBitCast(env1[0])}};
rel_347_new_constant_ptr_points_to->insert(tuple,READ_OP_CONTEXT(rel_347_new_constant_ptr_points_to_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(constant_ptr_points_to(?aCtx,?someAlloc,?aCtx,?alloc) :- 
   empty_alloc_context(?aCtx),
   initialized_by_constant(?alloc,?constant),
   constant_points_to(?constant,?someAlloc).
in file constant-init.dl [56:1-59:46])_");
if(!(rel_342_initialized_by_constant->empty()) && !(rel_358_delta_constant_points_to->empty()) && !(rel_182_empty_alloc_context->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_182_empty_alloc_context_op_ctxt,rel_182_empty_alloc_context->createContext());
CREATE_OP_CONTEXT(rel_342_initialized_by_constant_op_ctxt,rel_342_initialized_by_constant->createContext());
CREATE_OP_CONTEXT(rel_345_constant_ptr_points_to_op_ctxt,rel_345_constant_ptr_points_to->createContext());
CREATE_OP_CONTEXT(rel_347_new_constant_ptr_points_to_op_ctxt,rel_347_new_constant_ptr_points_to->createContext());
CREATE_OP_CONTEXT(rel_358_delta_constant_points_to_op_ctxt,rel_358_delta_constant_points_to->createContext());
for(const auto& env0 : *rel_182_empty_alloc_context) {
for(const auto& env1 : *rel_342_initialized_by_constant) {
auto range = rel_358_delta_constant_points_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_358_delta_constant_points_to_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_345_constant_ptr_points_to->contains(Tuple<RamDomain,4>{{ramBitCast(env0[0]),ramBitCast(env2[1]),ramBitCast(env0[0]),ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_345_constant_ptr_points_to_op_ctxt)))) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env2[1]),ramBitCast(env0[0]),ramBitCast(env1[0])}};
rel_347_new_constant_ptr_points_to->insert(tuple,READ_OP_CONTEXT(rel_347_new_constant_ptr_points_to_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_indexes_from(?cExpr,0,?alloc,?type) :- 
   getelementptr_constant_expression_base(?cExpr,?base),
   constant_points_to(?base,?alloc),
   _getelementptr_constant_expression_base_type(?cExpr,?type).
in file constant-exprs.dl [74:1-77:64])_");
if(!(rel_358_delta_constant_points_to->empty()) && !(rel_103_getelementptr_constant_expression_base_type->empty()) && !(rel_102_getelementptr_constant_expression_base->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_102_getelementptr_constant_expression_base_op_ctxt,rel_102_getelementptr_constant_expression_base->createContext());
CREATE_OP_CONTEXT(rel_103_getelementptr_constant_expression_base_type_op_ctxt,rel_103_getelementptr_constant_expression_base_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_350_new_gep_constant_expr_indexes_from_op_ctxt,rel_350_new_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_358_delta_constant_points_to_op_ctxt,rel_358_delta_constant_points_to->createContext());
for(const auto& env0 : *rel_102_getelementptr_constant_expression_base) {
auto range = rel_358_delta_constant_points_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_358_delta_constant_points_to_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_103_getelementptr_constant_expression_base_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_103_getelementptr_constant_expression_base_type_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_348_gep_constant_expr_indexes_from->contains(Tuple<RamDomain,4>{{ramBitCast(env0[0]),ramBitCast(RamSigned(0)),ramBitCast(env1[1]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt)))) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(RamSigned(0)),ramBitCast(env1[1]),ramBitCast(env2[1])}};
rel_350_new_gep_constant_expr_indexes_from->insert(tuple,READ_OP_CONTEXT(rel_350_new_gep_constant_expr_indexes_from_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_indexes_from(?cExpr,?n,?alloc,?type) :- 
   getelementptr_constant_expression_index(?cExpr,?n,_),
   gep_constant_expr_points_to(?cExpr, _tmp_8,?alloc),
   _getelementptr_constant_expression_interm_type(?cExpr,?n,?type),
    _tmp_8 = (?n-1).
in file constant-exprs.dl [79:1-82:70])_");
if(!(rel_352_delta_gep_constant_expr_points_to->empty()) && !(rel_106_getelementptr_constant_expression_interm_type->empty()) && !(rel_100_getelementptr_constant_expression_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_100_getelementptr_constant_expression_index_op_ctxt,rel_100_getelementptr_constant_expression_index->createContext());
CREATE_OP_CONTEXT(rel_106_getelementptr_constant_expression_interm_type_op_ctxt,rel_106_getelementptr_constant_expression_interm_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_350_new_gep_constant_expr_indexes_from_op_ctxt,rel_350_new_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_352_delta_gep_constant_expr_points_to_op_ctxt,rel_352_delta_gep_constant_expr_points_to->createContext());
for(const auto& env0 : *rel_100_getelementptr_constant_expression_index) {
auto range = rel_352_delta_gep_constant_expr_points_to->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast((ramBitCast<RamSigned>(env0[1]) - ramBitCast<RamSigned>(RamSigned(1)))), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast((ramBitCast<RamSigned>(env0[1]) - ramBitCast<RamSigned>(RamSigned(1)))), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_352_delta_gep_constant_expr_points_to_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_106_getelementptr_constant_expression_interm_type->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_106_getelementptr_constant_expression_interm_type_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_348_gep_constant_expr_indexes_from->contains(Tuple<RamDomain,4>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env1[2]),ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt)))) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env1[2]),ramBitCast(env2[2])}};
rel_350_new_gep_constant_expr_indexes_from->insert(tuple,READ_OP_CONTEXT(rel_350_new_gep_constant_expr_indexes_from_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   array_type(?type),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects.alloc_subregion_at_array_index(?parent,?offset,?alloc).
in file constant-exprs.dl [84:1-88:79])_");
if(!(rel_50_array_type->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_349_delta_gep_constant_expr_indexes_from->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_349_delta_gep_constant_expr_indexes_from_op_ctxt,rel_349_delta_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_349_delta_gep_constant_expr_indexes_from) {
if( rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_355_delta_gep_constant_expr_index_offset->contains(Tuple<RamDomain,4>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env1[3])}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt)))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env1[3]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env1[3]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt))) && !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->contains(Tuple<RamDomain,3>{{ramBitCast(env0[2]),ramBitCast(env1[3]),ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env2[2])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   array_type(?type),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects.alloc_subregion_at_array_index(?parent,?offset,?alloc).
in file constant-exprs.dl [84:1-88:79])_");
if(!(rel_50_array_type->empty()) && !(rel_355_delta_gep_constant_expr_index_offset->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
auto range = rel_355_delta_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env1[3]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env1[3]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->contains(Tuple<RamDomain,3>{{ramBitCast(env0[2]),ramBitCast(env1[3]),ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt))) && !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env2[2])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   array_type(?type),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects.alloc_subregion_at_array_index(?parent,?offset,?alloc).
in file constant-exprs.dl [84:1-88:79])_");
if(!(rel_50_array_type->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty()) && !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_391_delta_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env1[3]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env1[3]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env2[2])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   pointer_type(?type),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects.alloc_subregion_at_array_index(?parent,?offset,?alloc).
in file constant-exprs.dl [84:1-88:79])_");
if(!(rel_46_pointer_type->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_349_delta_gep_constant_expr_indexes_from->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_46_pointer_type_op_ctxt,rel_46_pointer_type->createContext());
CREATE_OP_CONTEXT(rel_349_delta_gep_constant_expr_indexes_from_op_ctxt,rel_349_delta_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_349_delta_gep_constant_expr_indexes_from) {
if( rel_46_pointer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_46_pointer_type_op_ctxt))) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_355_delta_gep_constant_expr_index_offset->contains(Tuple<RamDomain,4>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env1[3])}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt)))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env1[3]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env1[3]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->contains(Tuple<RamDomain,3>{{ramBitCast(env0[2]),ramBitCast(env1[3]),ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt))) && !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env2[2])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   pointer_type(?type),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects.alloc_subregion_at_array_index(?parent,?offset,?alloc).
in file constant-exprs.dl [84:1-88:79])_");
if(!(rel_46_pointer_type->empty()) && !(rel_355_delta_gep_constant_expr_index_offset->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_46_pointer_type_op_ctxt,rel_46_pointer_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_46_pointer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_46_pointer_type_op_ctxt))) {
auto range = rel_355_delta_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env1[3]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env1[3]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->contains(Tuple<RamDomain,3>{{ramBitCast(env0[2]),ramBitCast(env1[3]),ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt))) && !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env2[2])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   pointer_type(?type),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects.alloc_subregion_at_array_index(?parent,?offset,?alloc).
in file constant-exprs.dl [84:1-88:79])_");
if(!(rel_46_pointer_type->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty()) && !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_46_pointer_type_op_ctxt,rel_46_pointer_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_46_pointer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_46_pointer_type_op_ctxt))) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_391_delta_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env1[3]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env1[3]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env2[2])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   struct_type(?type),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?field),
   static_subobjects.alloc_subregion_at_field(?parent,?field,?alloc).
in file constant-exprs.dl [118:1-122:72])_");
if(!(rel_52_struct_type->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_349_delta_gep_constant_expr_indexes_from->empty()) && !(rel_381_static_subobjects_alloc_subregion_at_field->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_52_struct_type_op_ctxt,rel_52_struct_type->createContext());
CREATE_OP_CONTEXT(rel_349_delta_gep_constant_expr_indexes_from_op_ctxt,rel_349_delta_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_381_static_subobjects_alloc_subregion_at_field->createContext());
CREATE_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_382_delta_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_349_delta_gep_constant_expr_indexes_from) {
if( rel_52_struct_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_52_struct_type_op_ctxt))) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_355_delta_gep_constant_expr_index_offset->contains(Tuple<RamDomain,4>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env1[3])}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt)))) {
auto range = rel_381_static_subobjects_alloc_subregion_at_field->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env1[3]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env1[3]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt))) && !(rel_382_delta_static_subobjects_alloc_subregion_at_field->contains(Tuple<RamDomain,3>{{ramBitCast(env0[2]),ramBitCast(env1[3]),ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env2[2])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   struct_type(?type),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?field),
   static_subobjects.alloc_subregion_at_field(?parent,?field,?alloc).
in file constant-exprs.dl [118:1-122:72])_");
if(!(rel_52_struct_type->empty()) && !(rel_355_delta_gep_constant_expr_index_offset->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty()) && !(rel_381_static_subobjects_alloc_subregion_at_field->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_52_struct_type_op_ctxt,rel_52_struct_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_381_static_subobjects_alloc_subregion_at_field->createContext());
CREATE_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_382_delta_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_52_struct_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_52_struct_type_op_ctxt))) {
auto range = rel_355_delta_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_381_static_subobjects_alloc_subregion_at_field->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env1[3]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env1[3]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt))) && !(rel_382_delta_static_subobjects_alloc_subregion_at_field->contains(Tuple<RamDomain,3>{{ramBitCast(env0[2]),ramBitCast(env1[3]),ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env2[2])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   struct_type(?type),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?field),
   static_subobjects.alloc_subregion_at_field(?parent,?field,?alloc).
in file constant-exprs.dl [118:1-122:72])_");
if(!(rel_52_struct_type->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty()) && !(rel_382_delta_static_subobjects_alloc_subregion_at_field->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_52_struct_type_op_ctxt,rel_52_struct_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_382_delta_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_52_struct_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_52_struct_type_op_ctxt))) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_382_delta_static_subobjects_alloc_subregion_at_field->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env1[3]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env1[3]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env2[2])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   pointer_type_has_component(?type,?i8),
   int8_type(?i8),
   static_allocation_type(?parent,?parentType),
   struct_type(?parentType),
   getelementptr_constant_expression_index(?cExpr,?n,?indexOp),
   constant_to_int(?indexOp,?offset),
   struct_type_field_offset(?parentType,?field,?offset),
   static_subobjects.alloc_subregion_at_field(?parent,?field,?alloc).
in file constant-exprs.dl [124:1-133:72])_");
if(!(rel_2_pointer_type_has_component->empty()) && !(rel_263_struct_type_field_offset->empty()) && !(rel_1_int8_type->empty()) && !(rel_104_constant_to_int->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_100_getelementptr_constant_expression_index->empty()) && !(rel_52_struct_type->empty()) && !(rel_381_static_subobjects_alloc_subregion_at_field->empty()) && !(rel_349_delta_gep_constant_expr_indexes_from->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_1_int8_type_op_ctxt,rel_1_int8_type->createContext());
CREATE_OP_CONTEXT(rel_52_struct_type_op_ctxt,rel_52_struct_type->createContext());
CREATE_OP_CONTEXT(rel_100_getelementptr_constant_expression_index_op_ctxt,rel_100_getelementptr_constant_expression_index->createContext());
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_263_struct_type_field_offset_op_ctxt,rel_263_struct_type_field_offset->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_349_delta_gep_constant_expr_indexes_from_op_ctxt,rel_349_delta_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_381_static_subobjects_alloc_subregion_at_field->createContext());
CREATE_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_382_delta_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_349_delta_gep_constant_expr_indexes_from) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[3]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[3]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env1 : range) {
if( rel_1_int8_type->contains(Tuple<RamDomain,1>{{ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_1_int8_type_op_ctxt))) {
auto range = rel_321_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
for(const auto& env2 : range) {
if( rel_52_struct_type->contains(Tuple<RamDomain,1>{{ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_52_struct_type_op_ctxt)) && !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)))) {
auto range = rel_100_getelementptr_constant_expression_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_100_getelementptr_constant_expression_index_op_ctxt));
for(const auto& env3 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env3[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env3[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env4 : range) {
auto range = rel_263_struct_type_field_offset->lowerUpperRange_101(Tuple<RamDomain,3>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env4[1])}},Tuple<RamDomain,3>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_263_struct_type_field_offset_op_ctxt));
for(const auto& env5 : range) {
auto range = rel_381_static_subobjects_alloc_subregion_at_field->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env5[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env5[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt));
for(const auto& env6 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env6[2])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt))) && !(rel_382_delta_static_subobjects_alloc_subregion_at_field->contains(Tuple<RamDomain,3>{{ramBitCast(env0[2]),ramBitCast(env5[1]),ramBitCast(env6[2])}},READ_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env6[2])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
}
}
}
}
}
break;
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   pointer_type_has_component(?type,?i8),
   int8_type(?i8),
   static_allocation_type(?parent,?parentType),
   struct_type(?parentType),
   getelementptr_constant_expression_index(?cExpr,?n,?indexOp),
   constant_to_int(?indexOp,?offset),
   struct_type_field_offset(?parentType,?field,?offset),
   static_subobjects.alloc_subregion_at_field(?parent,?field,?alloc).
in file constant-exprs.dl [124:1-133:72])_");
if(!(rel_2_pointer_type_has_component->empty()) && !(rel_263_struct_type_field_offset->empty()) && !(rel_1_int8_type->empty()) && !(rel_104_constant_to_int->empty()) && !(rel_322_delta_static_allocation_type->empty()) && !(rel_100_getelementptr_constant_expression_index->empty()) && !(rel_52_struct_type->empty()) && !(rel_381_static_subobjects_alloc_subregion_at_field->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_1_int8_type_op_ctxt,rel_1_int8_type->createContext());
CREATE_OP_CONTEXT(rel_52_struct_type_op_ctxt,rel_52_struct_type->createContext());
CREATE_OP_CONTEXT(rel_100_getelementptr_constant_expression_index_op_ctxt,rel_100_getelementptr_constant_expression_index->createContext());
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_263_struct_type_field_offset_op_ctxt,rel_263_struct_type_field_offset->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_381_static_subobjects_alloc_subregion_at_field->createContext());
CREATE_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_382_delta_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[3]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[3]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env1 : range) {
if( rel_1_int8_type->contains(Tuple<RamDomain,1>{{ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_1_int8_type_op_ctxt))) {
auto range = rel_322_delta_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt));
for(const auto& env2 : range) {
if( rel_52_struct_type->contains(Tuple<RamDomain,1>{{ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_52_struct_type_op_ctxt))) {
auto range = rel_100_getelementptr_constant_expression_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_100_getelementptr_constant_expression_index_op_ctxt));
for(const auto& env3 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env3[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env3[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env4 : range) {
auto range = rel_263_struct_type_field_offset->lowerUpperRange_101(Tuple<RamDomain,3>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env4[1])}},Tuple<RamDomain,3>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_263_struct_type_field_offset_op_ctxt));
for(const auto& env5 : range) {
auto range = rel_381_static_subobjects_alloc_subregion_at_field->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env5[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env5[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt));
for(const auto& env6 : range) {
if( !(rel_382_delta_static_subobjects_alloc_subregion_at_field->contains(Tuple<RamDomain,3>{{ramBitCast(env0[2]),ramBitCast(env5[1]),ramBitCast(env6[2])}},READ_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt))) && !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env6[2])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env6[2])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
}
}
}
}
}
break;
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   pointer_type_has_component(?type,?i8),
   int8_type(?i8),
   static_allocation_type(?parent,?parentType),
   struct_type(?parentType),
   getelementptr_constant_expression_index(?cExpr,?n,?indexOp),
   constant_to_int(?indexOp,?offset),
   struct_type_field_offset(?parentType,?field,?offset),
   static_subobjects.alloc_subregion_at_field(?parent,?field,?alloc).
in file constant-exprs.dl [124:1-133:72])_");
if(!(rel_2_pointer_type_has_component->empty()) && !(rel_263_struct_type_field_offset->empty()) && !(rel_1_int8_type->empty()) && !(rel_104_constant_to_int->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_100_getelementptr_constant_expression_index->empty()) && !(rel_52_struct_type->empty()) && !(rel_382_delta_static_subobjects_alloc_subregion_at_field->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_1_int8_type_op_ctxt,rel_1_int8_type->createContext());
CREATE_OP_CONTEXT(rel_52_struct_type_op_ctxt,rel_52_struct_type->createContext());
CREATE_OP_CONTEXT(rel_100_getelementptr_constant_expression_index_op_ctxt,rel_100_getelementptr_constant_expression_index->createContext());
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_263_struct_type_field_offset_op_ctxt,rel_263_struct_type_field_offset->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_382_delta_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[3]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[3]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env1 : range) {
if( rel_1_int8_type->contains(Tuple<RamDomain,1>{{ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_1_int8_type_op_ctxt))) {
auto range = rel_321_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
for(const auto& env2 : range) {
if( rel_52_struct_type->contains(Tuple<RamDomain,1>{{ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_52_struct_type_op_ctxt))) {
auto range = rel_100_getelementptr_constant_expression_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_100_getelementptr_constant_expression_index_op_ctxt));
for(const auto& env3 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env3[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env3[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env4 : range) {
auto range = rel_263_struct_type_field_offset->lowerUpperRange_101(Tuple<RamDomain,3>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env4[1])}},Tuple<RamDomain,3>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_263_struct_type_field_offset_op_ctxt));
for(const auto& env5 : range) {
auto range = rel_382_delta_static_subobjects_alloc_subregion_at_field->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env5[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[2]), ramBitCast(env5[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_382_delta_static_subobjects_alloc_subregion_at_field_op_ctxt));
for(const auto& env6 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env6[2])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env6[2])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
}
}
}
}
}
break;
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   array_type(?type),
   static_subobjects.alloc_subregion_at_array_index(?grandparent,?start,?parent),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects.alloc_subregion_at_array_index(?grandparent, _tmp_9,?alloc),
    _tmp_9 = (?start+?offset).
in file constant-exprs.dl [100:1-105:93])_");
if(!(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_349_delta_gep_constant_expr_indexes_from->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_50_array_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_349_delta_gep_constant_expr_indexes_from_op_ctxt,rel_349_delta_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_349_delta_gep_constant_expr_indexes_from) {
if( rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->contains(Tuple<RamDomain,3>{{ramBitCast(env1[0]),ramBitCast(env1[1]),ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt)))) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_355_delta_gep_constant_expr_index_offset->contains(Tuple<RamDomain,4>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env2[3])}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt)))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3]))), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3]))), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[2])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt))) && !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->contains(Tuple<RamDomain,3>{{ramBitCast(env1[0]),ramBitCast(env3[1]),ramBitCast(env3[2])}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[2])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   array_type(?type),
   static_subobjects.alloc_subregion_at_array_index(?grandparent,?start,?parent),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects.alloc_subregion_at_array_index(?grandparent, _tmp_9,?alloc),
    _tmp_9 = (?start+?offset).
in file constant-exprs.dl [100:1-105:93])_");
if(!(rel_50_array_type->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
auto range = rel_391_delta_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_355_delta_gep_constant_expr_index_offset->contains(Tuple<RamDomain,4>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env2[3])}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt)))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3]))), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3]))), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->contains(Tuple<RamDomain,3>{{ramBitCast(env1[0]),ramBitCast(env3[1]),ramBitCast(env3[2])}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt))) && !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[2])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[2])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   array_type(?type),
   static_subobjects.alloc_subregion_at_array_index(?grandparent,?start,?parent),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects.alloc_subregion_at_array_index(?grandparent, _tmp_9,?alloc),
    _tmp_9 = (?start+?offset).
in file constant-exprs.dl [100:1-105:93])_");
if(!(rel_355_delta_gep_constant_expr_index_offset->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_50_array_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_355_delta_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3]))), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3]))), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->contains(Tuple<RamDomain,3>{{ramBitCast(env1[0]),ramBitCast(env3[1]),ramBitCast(env3[2])}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt))) && !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[2])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[2])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   array_type(?type),
   static_subobjects.alloc_subregion_at_array_index(?grandparent,?start,?parent),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects.alloc_subregion_at_array_index(?grandparent, _tmp_9,?alloc),
    _tmp_9 = (?start+?offset).
in file constant-exprs.dl [100:1-105:93])_");
if(!(rel_50_array_type->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_391_delta_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3]))), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3]))), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[2])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[2])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   pointer_type(?type),
   static_subobjects.alloc_subregion_at_array_index(?grandparent,?start,?parent),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects.alloc_subregion_at_array_index(?grandparent, _tmp_10,?alloc),
    _tmp_10 = (?start+?offset).
in file constant-exprs.dl [100:1-105:93])_");
if(!(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_349_delta_gep_constant_expr_indexes_from->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_46_pointer_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_46_pointer_type_op_ctxt,rel_46_pointer_type->createContext());
CREATE_OP_CONTEXT(rel_349_delta_gep_constant_expr_indexes_from_op_ctxt,rel_349_delta_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_349_delta_gep_constant_expr_indexes_from) {
if( rel_46_pointer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_46_pointer_type_op_ctxt))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->contains(Tuple<RamDomain,3>{{ramBitCast(env1[0]),ramBitCast(env1[1]),ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt)))) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_355_delta_gep_constant_expr_index_offset->contains(Tuple<RamDomain,4>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env2[3])}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt)))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3]))), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3]))), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[2])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt))) && !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->contains(Tuple<RamDomain,3>{{ramBitCast(env1[0]),ramBitCast(env3[1]),ramBitCast(env3[2])}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[2])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   pointer_type(?type),
   static_subobjects.alloc_subregion_at_array_index(?grandparent,?start,?parent),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects.alloc_subregion_at_array_index(?grandparent, _tmp_10,?alloc),
    _tmp_10 = (?start+?offset).
in file constant-exprs.dl [100:1-105:93])_");
if(!(rel_46_pointer_type->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_46_pointer_type_op_ctxt,rel_46_pointer_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_46_pointer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_46_pointer_type_op_ctxt))) {
auto range = rel_391_delta_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_355_delta_gep_constant_expr_index_offset->contains(Tuple<RamDomain,4>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env2[3])}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt)))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3]))), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3]))), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[2])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt))) && !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->contains(Tuple<RamDomain,3>{{ramBitCast(env1[0]),ramBitCast(env3[1]),ramBitCast(env3[2])}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[2])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   pointer_type(?type),
   static_subobjects.alloc_subregion_at_array_index(?grandparent,?start,?parent),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects.alloc_subregion_at_array_index(?grandparent, _tmp_10,?alloc),
    _tmp_10 = (?start+?offset).
in file constant-exprs.dl [100:1-105:93])_");
if(!(rel_355_delta_gep_constant_expr_index_offset->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_46_pointer_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_46_pointer_type_op_ctxt,rel_46_pointer_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_46_pointer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_46_pointer_type_op_ctxt))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_355_delta_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3]))), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3]))), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->contains(Tuple<RamDomain,3>{{ramBitCast(env1[0]),ramBitCast(env3[1]),ramBitCast(env3[2])}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt))) && !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[2])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[2])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   pointer_type(?type),
   static_subobjects.alloc_subregion_at_array_index(?grandparent,?start,?parent),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects.alloc_subregion_at_array_index(?grandparent, _tmp_10,?alloc),
    _tmp_10 = (?start+?offset).
in file constant-exprs.dl [100:1-105:93])_");
if(!(rel_46_pointer_type->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_46_pointer_type_op_ctxt,rel_46_pointer_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_46_pointer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_46_pointer_type_op_ctxt))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_391_delta_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3]))), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env1[0]), ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3]))), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[2])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[2])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   array_type(?type),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?parent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?parent,?type),
   !array_indices(?region,?type,?offset),
   static_subobjects.alloc_subregion_at_any_array_index(?parent,?alloc).
in file constant-exprs.dl [90:1-98:74])_");
if(!(rel_50_array_type->empty()) && !(rel_96_global_region->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_384_static_subobjects_alloc_subregion_at_any_array_index->empty()) && !(rel_349_delta_gep_constant_expr_indexes_from->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_349_delta_gep_constant_expr_indexes_from_op_ctxt,rel_349_delta_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_384_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
for(const auto& env0 : *rel_349_delta_gep_constant_expr_indexes_from) {
if( !rel_375_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)).empty() && !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt))) && rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt)) && rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)) && !(!rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt)).empty())) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_355_delta_gep_constant_expr_index_offset->contains(Tuple<RamDomain,4>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env1[3])}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt)))) {
for(const auto& env2 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env2[0]),ramBitCast(env0[3]),ramBitCast(env1[3])}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_384_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt))) && !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   array_type(?type),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?parent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?parent,?type),
   !array_indices(?region,?type,?offset),
   static_subobjects.alloc_subregion_at_any_array_index(?parent,?alloc).
in file constant-exprs.dl [90:1-98:74])_");
if(!(rel_50_array_type->empty()) && !(rel_96_global_region->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_355_delta_gep_constant_expr_index_offset->empty()) && !(rel_384_static_subobjects_alloc_subregion_at_any_array_index->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_384_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( !rel_375_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)).empty() && !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt))) && rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt)) && rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)) && !(!rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt)).empty())) {
auto range = rel_355_delta_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env1 : range) {
for(const auto& env2 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env2[0]),ramBitCast(env0[3]),ramBitCast(env1[3])}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_384_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt))) && !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   array_type(?type),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?parent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?parent,?type),
   !array_indices(?region,?type,?offset),
   static_subobjects.alloc_subregion_at_any_array_index(?parent,?alloc).
in file constant-exprs.dl [90:1-98:74])_");
if(!(rel_50_array_type->empty()) && !(rel_96_global_region->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_376_delta_static_subobjects_alloc_subregion->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_384_static_subobjects_alloc_subregion_at_any_array_index->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_384_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt)) && !rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt)).empty() && rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)) && !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)))) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env1 : range) {
for(const auto& env2 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env2[0]),ramBitCast(env0[3]),ramBitCast(env1[3])}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_384_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt))) && !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   array_type(?type),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?parent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?parent,?type),
   !array_indices(?region,?type,?offset),
   static_subobjects.alloc_subregion_at_any_array_index(?parent,?alloc).
in file constant-exprs.dl [90:1-98:74])_");
if(!(rel_50_array_type->empty()) && !(rel_96_global_region->empty()) && !(rel_322_delta_static_allocation_type->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_384_static_subobjects_alloc_subregion_at_any_array_index->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_384_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( !rel_375_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)).empty() && rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)) && rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env1 : range) {
for(const auto& env2 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env2[0]),ramBitCast(env0[3]),ramBitCast(env1[3])}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_384_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt))) && !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   array_type(?type),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?parent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?parent,?type),
   !array_indices(?region,?type,?offset),
   static_subobjects.alloc_subregion_at_any_array_index(?parent,?alloc).
in file constant-exprs.dl [90:1-98:74])_");
if(!(rel_50_array_type->empty()) && !(rel_96_global_region->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( !rel_375_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)).empty() && rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)) && rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env1 : range) {
for(const auto& env2 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env2[0]),ramBitCast(env0[3]),ramBitCast(env1[3])}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   pointer_type(?type),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?parent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?parent,?type),
   !array_indices(?region,?type,?offset),
   static_subobjects.alloc_subregion_at_any_array_index(?parent,?alloc).
in file constant-exprs.dl [90:1-98:74])_");
if(!(rel_46_pointer_type->empty()) && !(rel_96_global_region->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_384_static_subobjects_alloc_subregion_at_any_array_index->empty()) && !(rel_349_delta_gep_constant_expr_indexes_from->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_46_pointer_type_op_ctxt,rel_46_pointer_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_349_delta_gep_constant_expr_indexes_from_op_ctxt,rel_349_delta_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_384_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
for(const auto& env0 : *rel_349_delta_gep_constant_expr_indexes_from) {
if( !rel_375_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)).empty() && !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt))) && rel_46_pointer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_46_pointer_type_op_ctxt)) && rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)) && !(!rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt)).empty())) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_355_delta_gep_constant_expr_index_offset->contains(Tuple<RamDomain,4>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env1[3])}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt)))) {
for(const auto& env2 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env2[0]),ramBitCast(env0[3]),ramBitCast(env1[3])}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_384_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt))) && !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   pointer_type(?type),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?parent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?parent,?type),
   !array_indices(?region,?type,?offset),
   static_subobjects.alloc_subregion_at_any_array_index(?parent,?alloc).
in file constant-exprs.dl [90:1-98:74])_");
if(!(rel_46_pointer_type->empty()) && !(rel_96_global_region->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_355_delta_gep_constant_expr_index_offset->empty()) && !(rel_384_static_subobjects_alloc_subregion_at_any_array_index->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_46_pointer_type_op_ctxt,rel_46_pointer_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_384_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( !rel_375_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)).empty() && !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt))) && rel_46_pointer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_46_pointer_type_op_ctxt)) && rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)) && !(!rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt)).empty())) {
auto range = rel_355_delta_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env1 : range) {
for(const auto& env2 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env2[0]),ramBitCast(env0[3]),ramBitCast(env1[3])}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_384_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt))) && !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   pointer_type(?type),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?parent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?parent,?type),
   !array_indices(?region,?type,?offset),
   static_subobjects.alloc_subregion_at_any_array_index(?parent,?alloc).
in file constant-exprs.dl [90:1-98:74])_");
if(!(rel_46_pointer_type->empty()) && !(rel_96_global_region->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_376_delta_static_subobjects_alloc_subregion->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_384_static_subobjects_alloc_subregion_at_any_array_index->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_46_pointer_type_op_ctxt,rel_46_pointer_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_384_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_46_pointer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_46_pointer_type_op_ctxt)) && !rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt)).empty() && rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)) && !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)))) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env1 : range) {
for(const auto& env2 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env2[0]),ramBitCast(env0[3]),ramBitCast(env1[3])}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_384_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt))) && !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   pointer_type(?type),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?parent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?parent,?type),
   !array_indices(?region,?type,?offset),
   static_subobjects.alloc_subregion_at_any_array_index(?parent,?alloc).
in file constant-exprs.dl [90:1-98:74])_");
if(!(rel_46_pointer_type->empty()) && !(rel_96_global_region->empty()) && !(rel_322_delta_static_allocation_type->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_384_static_subobjects_alloc_subregion_at_any_array_index->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_46_pointer_type_op_ctxt,rel_46_pointer_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_384_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( !rel_375_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)).empty() && rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)) && rel_46_pointer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_46_pointer_type_op_ctxt))) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env1 : range) {
for(const auto& env2 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env2[0]),ramBitCast(env0[3]),ramBitCast(env1[3])}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_384_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt))) && !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   pointer_type(?type),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?parent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?parent,?type),
   !array_indices(?region,?type,?offset),
   static_subobjects.alloc_subregion_at_any_array_index(?parent,?alloc).
in file constant-exprs.dl [90:1-98:74])_");
if(!(rel_46_pointer_type->empty()) && !(rel_96_global_region->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_46_pointer_type_op_ctxt,rel_46_pointer_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( !rel_375_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)).empty() && rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)) && rel_46_pointer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_46_pointer_type_op_ctxt))) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env1 : range) {
for(const auto& env2 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env2[0]),ramBitCast(env0[3]),ramBitCast(env1[3])}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env3[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   array_type(?type),
   static_subobjects.alloc_subregion_at_array_index(?grandparent,?start,?parent),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?grandparent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?grandparent,?type),
   !array_indices(?region,?type,(?start+?offset)),
   static_subobjects.alloc_subregion_at_any_array_index(?grandparent,?alloc).
in file constant-exprs.dl [107:1-116:79])_");
if(!(rel_50_array_type->empty()) && !(rel_96_global_region->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_349_delta_gep_constant_expr_indexes_from->empty()) && !(rel_384_static_subobjects_alloc_subregion_at_any_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_349_delta_gep_constant_expr_indexes_from_op_ctxt,rel_349_delta_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_384_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_349_delta_gep_constant_expr_indexes_from) {
if( rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
if( !rel_375_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)).empty() && !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->contains(Tuple<RamDomain,3>{{ramBitCast(env1[0]),ramBitCast(env1[1]),ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt))) && !(!rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt)).empty()) && rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)) && !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)))) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_355_delta_gep_constant_expr_index_offset->contains(Tuple<RamDomain,4>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env2[3])}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt)))) {
for(const auto& env3 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env3[0]),ramBitCast(env0[3]),ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3])))}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_384_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env4 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt))) && !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   array_type(?type),
   static_subobjects.alloc_subregion_at_array_index(?grandparent,?start,?parent),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?grandparent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?grandparent,?type),
   !array_indices(?region,?type,(?start+?offset)),
   static_subobjects.alloc_subregion_at_any_array_index(?grandparent,?alloc).
in file constant-exprs.dl [107:1-116:79])_");
if(!(rel_50_array_type->empty()) && !(rel_96_global_region->empty()) && !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty()) && !(rel_384_static_subobjects_alloc_subregion_at_any_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_384_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
auto range = rel_391_delta_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt))) && !rel_375_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)).empty() && rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)) && !(!rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt)).empty())) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_355_delta_gep_constant_expr_index_offset->contains(Tuple<RamDomain,4>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env2[3])}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt)))) {
for(const auto& env3 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env3[0]),ramBitCast(env0[3]),ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3])))}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_384_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env4 : range) {
if( !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt))) && !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   array_type(?type),
   static_subobjects.alloc_subregion_at_array_index(?grandparent,?start,?parent),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?grandparent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?grandparent,?type),
   !array_indices(?region,?type,(?start+?offset)),
   static_subobjects.alloc_subregion_at_any_array_index(?grandparent,?alloc).
in file constant-exprs.dl [107:1-116:79])_");
if(!(rel_50_array_type->empty()) && !(rel_96_global_region->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_355_delta_gep_constant_expr_index_offset->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty()) && !(rel_384_static_subobjects_alloc_subregion_at_any_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_384_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt))) && !rel_375_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)).empty() && rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)) && !(!rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt)).empty())) {
auto range = rel_355_delta_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env2 : range) {
for(const auto& env3 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env3[0]),ramBitCast(env0[3]),ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3])))}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_384_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env4 : range) {
if( !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt))) && !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   array_type(?type),
   static_subobjects.alloc_subregion_at_array_index(?grandparent,?start,?parent),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?grandparent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?grandparent,?type),
   !array_indices(?region,?type,(?start+?offset)),
   static_subobjects.alloc_subregion_at_any_array_index(?grandparent,?alloc).
in file constant-exprs.dl [107:1-116:79])_");
if(!(rel_50_array_type->empty()) && !(rel_96_global_region->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_376_delta_static_subobjects_alloc_subregion->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty()) && !(rel_384_static_subobjects_alloc_subregion_at_any_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_384_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
if( !rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt)).empty() && rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)) && !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)))) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env2 : range) {
for(const auto& env3 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env3[0]),ramBitCast(env0[3]),ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3])))}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_384_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env4 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt))) && !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   array_type(?type),
   static_subobjects.alloc_subregion_at_array_index(?grandparent,?start,?parent),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?grandparent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?grandparent,?type),
   !array_indices(?region,?type,(?start+?offset)),
   static_subobjects.alloc_subregion_at_any_array_index(?grandparent,?alloc).
in file constant-exprs.dl [107:1-116:79])_");
if(!(rel_50_array_type->empty()) && !(rel_96_global_region->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_322_delta_static_allocation_type->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty()) && !(rel_384_static_subobjects_alloc_subregion_at_any_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_384_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
if( rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)) && !rel_375_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)).empty()) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env2 : range) {
for(const auto& env3 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env3[0]),ramBitCast(env0[3]),ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3])))}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_384_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env4 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt))) && !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   array_type(?type),
   static_subobjects.alloc_subregion_at_array_index(?grandparent,?start,?parent),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?grandparent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?grandparent,?type),
   !array_indices(?region,?type,(?start+?offset)),
   static_subobjects.alloc_subregion_at_any_array_index(?grandparent,?alloc).
in file constant-exprs.dl [107:1-116:79])_");
if(!(rel_50_array_type->empty()) && !(rel_96_global_region->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty()) && !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_50_array_type_op_ctxt,rel_50_array_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_50_array_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_50_array_type_op_ctxt))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
if( rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)) && !rel_375_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)).empty()) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env2 : range) {
for(const auto& env3 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env3[0]),ramBitCast(env0[3]),ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3])))}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env4 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   pointer_type(?type),
   static_subobjects.alloc_subregion_at_array_index(?grandparent,?start,?parent),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?grandparent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?grandparent,?type),
   !array_indices(?region,?type,(?start+?offset)),
   static_subobjects.alloc_subregion_at_any_array_index(?grandparent,?alloc).
in file constant-exprs.dl [107:1-116:79])_");
if(!(rel_46_pointer_type->empty()) && !(rel_96_global_region->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_349_delta_gep_constant_expr_indexes_from->empty()) && !(rel_384_static_subobjects_alloc_subregion_at_any_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_46_pointer_type_op_ctxt,rel_46_pointer_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_349_delta_gep_constant_expr_indexes_from_op_ctxt,rel_349_delta_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_384_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_349_delta_gep_constant_expr_indexes_from) {
if( rel_46_pointer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_46_pointer_type_op_ctxt))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
if( !rel_375_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)).empty() && !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->contains(Tuple<RamDomain,3>{{ramBitCast(env1[0]),ramBitCast(env1[1]),ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt))) && !(!rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt)).empty()) && rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)) && !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)))) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_355_delta_gep_constant_expr_index_offset->contains(Tuple<RamDomain,4>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env2[3])}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt)))) {
for(const auto& env3 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env3[0]),ramBitCast(env0[3]),ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3])))}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_384_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env4 : range) {
if( !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt))) && !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   pointer_type(?type),
   static_subobjects.alloc_subregion_at_array_index(?grandparent,?start,?parent),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?grandparent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?grandparent,?type),
   !array_indices(?region,?type,(?start+?offset)),
   static_subobjects.alloc_subregion_at_any_array_index(?grandparent,?alloc).
in file constant-exprs.dl [107:1-116:79])_");
if(!(rel_46_pointer_type->empty()) && !(rel_96_global_region->empty()) && !(rel_391_delta_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty()) && !(rel_384_static_subobjects_alloc_subregion_at_any_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_46_pointer_type_op_ctxt,rel_46_pointer_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_384_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_391_delta_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_46_pointer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_46_pointer_type_op_ctxt))) {
auto range = rel_391_delta_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_391_delta_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt))) && !rel_375_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)).empty() && rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)) && !(!rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt)).empty())) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_355_delta_gep_constant_expr_index_offset->contains(Tuple<RamDomain,4>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env2[3])}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt)))) {
for(const auto& env3 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env3[0]),ramBitCast(env0[3]),ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3])))}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_384_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env4 : range) {
if( !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt))) && !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   pointer_type(?type),
   static_subobjects.alloc_subregion_at_array_index(?grandparent,?start,?parent),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?grandparent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?grandparent,?type),
   !array_indices(?region,?type,(?start+?offset)),
   static_subobjects.alloc_subregion_at_any_array_index(?grandparent,?alloc).
in file constant-exprs.dl [107:1-116:79])_");
if(!(rel_46_pointer_type->empty()) && !(rel_96_global_region->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_355_delta_gep_constant_expr_index_offset->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty()) && !(rel_384_static_subobjects_alloc_subregion_at_any_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_46_pointer_type_op_ctxt,rel_46_pointer_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt,rel_355_delta_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_384_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_46_pointer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_46_pointer_type_op_ctxt))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt))) && !rel_375_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)).empty() && rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)) && !(!rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt)).empty())) {
auto range = rel_355_delta_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_355_delta_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env2 : range) {
for(const auto& env3 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env3[0]),ramBitCast(env0[3]),ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3])))}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_384_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env4 : range) {
if( !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt))) && !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   pointer_type(?type),
   static_subobjects.alloc_subregion_at_array_index(?grandparent,?start,?parent),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?grandparent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?grandparent,?type),
   !array_indices(?region,?type,(?start+?offset)),
   static_subobjects.alloc_subregion_at_any_array_index(?grandparent,?alloc).
in file constant-exprs.dl [107:1-116:79])_");
if(!(rel_46_pointer_type->empty()) && !(rel_96_global_region->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_376_delta_static_subobjects_alloc_subregion->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty()) && !(rel_384_static_subobjects_alloc_subregion_at_any_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_46_pointer_type_op_ctxt,rel_46_pointer_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_384_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_46_pointer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_46_pointer_type_op_ctxt))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
if( !rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt)).empty() && rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)) && !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)))) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env2 : range) {
for(const auto& env3 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env3[0]),ramBitCast(env0[3]),ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3])))}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_384_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env4 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt))) && !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   pointer_type(?type),
   static_subobjects.alloc_subregion_at_array_index(?grandparent,?start,?parent),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?grandparent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?grandparent,?type),
   !array_indices(?region,?type,(?start+?offset)),
   static_subobjects.alloc_subregion_at_any_array_index(?grandparent,?alloc).
in file constant-exprs.dl [107:1-116:79])_");
if(!(rel_46_pointer_type->empty()) && !(rel_96_global_region->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_322_delta_static_allocation_type->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty()) && !(rel_384_static_subobjects_alloc_subregion_at_any_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_46_pointer_type_op_ctxt,rel_46_pointer_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_384_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_46_pointer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_46_pointer_type_op_ctxt))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
if( rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)) && !rel_375_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)).empty()) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env2 : range) {
for(const auto& env3 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env3[0]),ramBitCast(env0[3]),ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3])))}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_384_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env4 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt))) && !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_points_to(?cExpr,?n,?alloc) :- 
   gep_constant_expr_indexes_from(?cExpr,?n,?parent,?type),
   pointer_type(?type),
   static_subobjects.alloc_subregion_at_array_index(?grandparent,?start,?parent),
   gep_constant_expr_index_offset(?cExpr,?n,?parent,?offset),
   static_subobjects._alloc_subregion(?grandparent,_,_,_,_,_),
   global_region(?region),
   static_allocation_type(?grandparent,?type),
   !array_indices(?region,?type,(?start+?offset)),
   static_subobjects.alloc_subregion_at_any_array_index(?grandparent,?alloc).
in file constant-exprs.dl [107:1-116:79])_");
if(!(rel_46_pointer_type->empty()) && !(rel_96_global_region->empty()) && !(rel_390_static_subobjects_alloc_subregion_at_array_index->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_354_gep_constant_expr_index_offset->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty()) && !(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_46_pointer_type_op_ctxt,rel_46_pointer_type->createContext());
CREATE_OP_CONTEXT(rel_96_global_region_op_ctxt,rel_96_global_region->createContext());
CREATE_OP_CONTEXT(rel_213_array_indices_op_ctxt,rel_213_array_indices->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt,rel_351_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt,rel_353_new_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt,rel_390_static_subobjects_alloc_subregion_at_array_index->createContext());
for(const auto& env0 : *rel_348_gep_constant_expr_indexes_from) {
if( rel_46_pointer_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_46_pointer_type_op_ctxt))) {
auto range = rel_390_static_subobjects_alloc_subregion_at_array_index->lowerUpperRange_001(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2])}},READ_OP_CONTEXT(rel_390_static_subobjects_alloc_subregion_at_array_index_op_ctxt));
for(const auto& env1 : range) {
if( rel_321_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[3])}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt)) && !rel_375_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)).empty()) {
auto range = rel_354_gep_constant_expr_index_offset->lowerUpperRange_1110(Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt));
for(const auto& env2 : range) {
for(const auto& env3 : *rel_96_global_region) {
if( !(rel_213_array_indices->contains(Tuple<RamDomain,3>{{ramBitCast(env3[0]),ramBitCast(env0[3]),ramBitCast((ramBitCast<RamSigned>(env1[1]) + ramBitCast<RamSigned>(env2[3])))}},READ_OP_CONTEXT(rel_213_array_indices_op_ctxt)))) {
auto range = rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_385_delta_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt));
for(const auto& env4 : range) {
if( !(rel_351_gep_constant_expr_points_to->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}},READ_OP_CONTEXT(rel_351_gep_constant_expr_points_to_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env4[1])}};
rel_353_new_gep_constant_expr_points_to->insert(tuple,READ_OP_CONTEXT(rel_353_new_gep_constant_expr_points_to_op_ctxt));
}
}
break;
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_index_offset(?insn,0,?alloc,?offset) :- 
   gep_constant_expr_indexes_from(?insn,0,?alloc,?ptrType),
   pointer_type_has_component(?ptrType,?type),
   static_allocation_type(?alloc,?allocType),
   type_has_size(?type,?pSize),
   type_has_size(?allocType,?aSize),
   getelementptr_constant_expression_index(?insn,0,?indexOp),
   constant_to_int(?indexOp,?offset),
   ?aSize != 0,
   ?offset = ((?offset*?pSize)/?aSize).
in file constant-exprs.dl [57:1-66:42])_");
if(!(rel_100_getelementptr_constant_expression_index->empty()) && !(rel_349_delta_gep_constant_expr_indexes_from->empty()) && !(rel_216_type_has_size->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_104_constant_to_int->empty()) && !(rel_2_pointer_type_has_component->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_100_getelementptr_constant_expression_index_op_ctxt,rel_100_getelementptr_constant_expression_index->createContext());
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_349_delta_gep_constant_expr_indexes_from_op_ctxt,rel_349_delta_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_356_new_gep_constant_expr_index_offset_op_ctxt,rel_356_new_gep_constant_expr_index_offset->createContext());
auto range = rel_349_delta_gep_constant_expr_indexes_from->lowerUpperRange_0100(Tuple<RamDomain,4>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_349_delta_gep_constant_expr_indexes_from_op_ctxt));
for(const auto& env0 : range) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[3]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[3]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_321_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)))) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env3 : range) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env4 : range) {
if( (ramBitCast<RamDomain>(env4[1]) != ramBitCast<RamDomain>(RamSigned(0)))) {
auto range = rel_100_getelementptr_constant_expression_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_100_getelementptr_constant_expression_index_op_ctxt));
for(const auto& env5 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env5[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env5[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env6 : range) {
if( (ramBitCast<RamDomain>(env6[1]) == ramBitCast<RamDomain>((ramBitCast<RamSigned>((ramBitCast<RamSigned>(env6[1]) * ramBitCast<RamSigned>(env3[1]))) / ramBitCast<RamSigned>(env4[1])))) && !(rel_354_gep_constant_expr_index_offset->contains(Tuple<RamDomain,4>{{ramBitCast(env0[0]),ramBitCast(RamSigned(0)),ramBitCast(env0[2]),ramBitCast(env6[1])}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt)))) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(RamSigned(0)),ramBitCast(env0[2]),ramBitCast(env6[1])}};
rel_356_new_gep_constant_expr_index_offset->insert(tuple,READ_OP_CONTEXT(rel_356_new_gep_constant_expr_index_offset_op_ctxt));
}
}
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_index_offset(?insn,0,?alloc,?offset) :- 
   gep_constant_expr_indexes_from(?insn,0,?alloc,?ptrType),
   pointer_type_has_component(?ptrType,?type),
   static_allocation_type(?alloc,?allocType),
   type_has_size(?type,?pSize),
   type_has_size(?allocType,?aSize),
   getelementptr_constant_expression_index(?insn,0,?indexOp),
   constant_to_int(?indexOp,?offset),
   ?aSize != 0,
   ?offset = ((?offset*?pSize)/?aSize).
in file constant-exprs.dl [57:1-66:42])_");
if(!(rel_100_getelementptr_constant_expression_index->empty()) && !(rel_348_gep_constant_expr_indexes_from->empty()) && !(rel_216_type_has_size->empty()) && !(rel_322_delta_static_allocation_type->empty()) && !(rel_104_constant_to_int->empty()) && !(rel_2_pointer_type_has_component->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt,rel_2_pointer_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_100_getelementptr_constant_expression_index_op_ctxt,rel_100_getelementptr_constant_expression_index->createContext());
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_216_type_has_size_op_ctxt,rel_216_type_has_size->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt,rel_348_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_356_new_gep_constant_expr_index_offset_op_ctxt,rel_356_new_gep_constant_expr_index_offset->createContext());
auto range = rel_348_gep_constant_expr_indexes_from->lowerUpperRange_0100(Tuple<RamDomain,4>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_348_gep_constant_expr_indexes_from_op_ctxt));
for(const auto& env0 : range) {
auto range = rel_2_pointer_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[3]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[3]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_2_pointer_type_has_component_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_322_delta_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env3 : range) {
auto range = rel_216_type_has_size->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env2[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_216_type_has_size_op_ctxt));
for(const auto& env4 : range) {
if( (ramBitCast<RamDomain>(env4[1]) != ramBitCast<RamDomain>(RamSigned(0)))) {
auto range = rel_100_getelementptr_constant_expression_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_100_getelementptr_constant_expression_index_op_ctxt));
for(const auto& env5 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env5[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env5[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env6 : range) {
if( (ramBitCast<RamDomain>(env6[1]) == ramBitCast<RamDomain>((ramBitCast<RamSigned>((ramBitCast<RamSigned>(env6[1]) * ramBitCast<RamSigned>(env3[1]))) / ramBitCast<RamSigned>(env4[1])))) && !(rel_354_gep_constant_expr_index_offset->contains(Tuple<RamDomain,4>{{ramBitCast(env0[0]),ramBitCast(RamSigned(0)),ramBitCast(env0[2]),ramBitCast(env6[1])}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt)))) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(RamSigned(0)),ramBitCast(env0[2]),ramBitCast(env6[1])}};
rel_356_new_gep_constant_expr_index_offset->insert(tuple,READ_OP_CONTEXT(rel_356_new_gep_constant_expr_index_offset_op_ctxt));
}
}
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(gep_constant_expr_index_offset(?insn,?n,?alloc,?offset) :- 
   gep_constant_expr_indexes_from(?insn,?n,?alloc,_),
   ?n > 0,
   getelementptr_constant_expression_index(?insn,?n,?indexOp),
   constant_to_int(?indexOp,?offset).
in file constant-exprs.dl [68:1-72:39])_");
if(!(rel_100_getelementptr_constant_expression_index->empty()) && !(rel_104_constant_to_int->empty()) && !(rel_349_delta_gep_constant_expr_indexes_from->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_100_getelementptr_constant_expression_index_op_ctxt,rel_100_getelementptr_constant_expression_index->createContext());
CREATE_OP_CONTEXT(rel_104_constant_to_int_op_ctxt,rel_104_constant_to_int->createContext());
CREATE_OP_CONTEXT(rel_349_delta_gep_constant_expr_indexes_from_op_ctxt,rel_349_delta_gep_constant_expr_indexes_from->createContext());
CREATE_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt,rel_354_gep_constant_expr_index_offset->createContext());
CREATE_OP_CONTEXT(rel_356_new_gep_constant_expr_index_offset_op_ctxt,rel_356_new_gep_constant_expr_index_offset->createContext());
auto range = rel_349_delta_gep_constant_expr_indexes_from->lowerUpperRange_0200(Tuple<RamDomain,4>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(RamSigned(0)), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,4>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_349_delta_gep_constant_expr_indexes_from_op_ctxt));
for(const auto& env0 : range) {
if( (ramBitCast<RamDomain>(env0[1]) != ramBitCast<RamDomain>(RamSigned(0)))) {
auto range = rel_100_getelementptr_constant_expression_index->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_100_getelementptr_constant_expression_index_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_104_constant_to_int->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[2]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[2]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_104_constant_to_int_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_354_gep_constant_expr_index_offset->contains(Tuple<RamDomain,4>{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_354_gep_constant_expr_index_offset_op_ctxt)))) {
Tuple<RamDomain,4> tuple{{ramBitCast(env0[0]),ramBitCast(env0[1]),ramBitCast(env0[2]),ramBitCast(env2[1])}};
rel_356_new_gep_constant_expr_index_offset->insert(tuple,READ_OP_CONTEXT(rel_356_new_gep_constant_expr_index_offset_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(constant_points_to(?otherConstant,?alloc) :- 
   aliased_constants(?otherConstant,?constant),
   constant_points_to(?constant,?alloc).
in file constant-exprs.dl [4:1-7:42])_");
if(!(rel_95_aliased_constants->empty()) && !(rel_358_delta_constant_points_to->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_95_aliased_constants_op_ctxt,rel_95_aliased_constants->createContext());
CREATE_OP_CONTEXT(rel_357_constant_points_to_op_ctxt,rel_357_constant_points_to->createContext());
CREATE_OP_CONTEXT(rel_358_delta_constant_points_to_op_ctxt,rel_358_delta_constant_points_to->createContext());
CREATE_OP_CONTEXT(rel_359_new_constant_points_to_op_ctxt,rel_359_new_constant_points_to->createContext());
for(const auto& env0 : *rel_95_aliased_constants) {
auto range = rel_358_delta_constant_points_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_358_delta_constant_points_to_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_357_constant_points_to->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_357_constant_points_to_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[1])}};
rel_359_new_constant_points_to->insert(tuple,READ_OP_CONTEXT(rel_359_new_constant_points_to_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(constant_points_to(?intConstant,?alloc) :- 
   ptrtoint_constant_expression_from(?intConstant,?ptrConstant),
   constant_points_to(?ptrConstant,?alloc).
in file constant-exprs.dl [28:1-30:45])_");
if(!(rel_275_ptrtoint_constant_expression_from->empty()) && !(rel_358_delta_constant_points_to->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_275_ptrtoint_constant_expression_from_op_ctxt,rel_275_ptrtoint_constant_expression_from->createContext());
CREATE_OP_CONTEXT(rel_357_constant_points_to_op_ctxt,rel_357_constant_points_to->createContext());
CREATE_OP_CONTEXT(rel_358_delta_constant_points_to_op_ctxt,rel_358_delta_constant_points_to->createContext());
CREATE_OP_CONTEXT(rel_359_new_constant_points_to_op_ctxt,rel_359_new_constant_points_to->createContext());
for(const auto& env0 : *rel_275_ptrtoint_constant_expression_from) {
auto range = rel_358_delta_constant_points_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_358_delta_constant_points_to_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_357_constant_points_to->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_357_constant_points_to_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[1])}};
rel_359_new_constant_points_to->insert(tuple,READ_OP_CONTEXT(rel_359_new_constant_points_to_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(constant_points_to(?outerConstant,?alloc) :- 
   bitcast_constant_expression_from(?outerConstant,?innerConstant),
   constant_points_to(?innerConstant,?alloc).
in file constant-exprs.dl [35:1-37:47])_");
if(!(rel_136_bitcast_constant_expression_from->empty()) && !(rel_358_delta_constant_points_to->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_136_bitcast_constant_expression_from_op_ctxt,rel_136_bitcast_constant_expression_from->createContext());
CREATE_OP_CONTEXT(rel_357_constant_points_to_op_ctxt,rel_357_constant_points_to->createContext());
CREATE_OP_CONTEXT(rel_358_delta_constant_points_to_op_ctxt,rel_358_delta_constant_points_to->createContext());
CREATE_OP_CONTEXT(rel_359_new_constant_points_to_op_ctxt,rel_359_new_constant_points_to->createContext());
for(const auto& env0 : *rel_136_bitcast_constant_expression_from) {
auto range = rel_358_delta_constant_points_to->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_358_delta_constant_points_to_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_357_constant_points_to->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_357_constant_points_to_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[1])}};
rel_359_new_constant_points_to->insert(tuple,READ_OP_CONTEXT(rel_359_new_constant_points_to_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(constant_points_to(?cExpr,?alloc) :- 
   getelementptr_constant_expression_nindices(?cExpr,?total),
   gep_constant_expr_points_to(?cExpr, _tmp_5,?alloc),
    _tmp_5 = (?total-1).
in file constant-exprs.dl [135:1-137:60])_");
if(!(rel_274_getelementptr_constant_expression_nindices->empty()) && !(rel_352_delta_gep_constant_expr_points_to->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_274_getelementptr_constant_expression_nindices_op_ctxt,rel_274_getelementptr_constant_expression_nindices->createContext());
CREATE_OP_CONTEXT(rel_352_delta_gep_constant_expr_points_to_op_ctxt,rel_352_delta_gep_constant_expr_points_to->createContext());
CREATE_OP_CONTEXT(rel_357_constant_points_to_op_ctxt,rel_357_constant_points_to->createContext());
CREATE_OP_CONTEXT(rel_359_new_constant_points_to_op_ctxt,rel_359_new_constant_points_to->createContext());
for(const auto& env0 : *rel_274_getelementptr_constant_expression_nindices) {
auto range = rel_352_delta_gep_constant_expr_points_to->lowerUpperRange_110(Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast((ramBitCast<RamSigned>(env0[1]) - ramBitCast<RamSigned>(RamSigned(1)))), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[0]), ramBitCast((ramBitCast<RamSigned>(env0[1]) - ramBitCast<RamSigned>(RamSigned(1)))), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_352_delta_gep_constant_expr_points_to_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_357_constant_points_to->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env1[2])}},READ_OP_CONTEXT(rel_357_constant_points_to_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[2])}};
rel_359_new_constant_points_to->insert(tuple,READ_OP_CONTEXT(rel_359_new_constant_points_to_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(heap_allocation_by_new(?insn,?heapAlloc) :- 
   cxx_new_func(?func),
   call_instr_fn_target(?insn,?func),
   heap_allocation_by_instr(?insn,?heapAlloc).
in file cplusplus.dl [24:1-28:48])_");
if(!(rel_152_call_instr_fn_target->empty()) && !(rel_316_delta_heap_allocation_by_instr->empty()) && !(rel_172_cxx_new_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt,rel_152_call_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_172_cxx_new_func_op_ctxt,rel_172_cxx_new_func->createContext());
CREATE_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt,rel_316_delta_heap_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_360_heap_allocation_by_new_op_ctxt,rel_360_heap_allocation_by_new->createContext());
CREATE_OP_CONTEXT(rel_362_new_heap_allocation_by_new_op_ctxt,rel_362_new_heap_allocation_by_new->createContext());
for(const auto& env0 : *rel_172_cxx_new_func) {
auto range = rel_152_call_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_152_call_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_316_delta_heap_allocation_by_instr->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_360_heap_allocation_by_new->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_360_heap_allocation_by_new_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(env2[1])}};
rel_362_new_heap_allocation_by_new->insert(tuple,READ_OP_CONTEXT(rel_362_new_heap_allocation_by_new_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(heap_allocation_by_new(?insn,?heapAlloc) :- 
   cxx_new_func(?func),
   invoke_instr_fn_target(?insn,?func),
   heap_allocation_by_instr(?insn,?heapAlloc).
in file cplusplus.dl [24:1-28:48])_");
if(!(rel_177_invoke_instr_fn_target->empty()) && !(rel_316_delta_heap_allocation_by_instr->empty()) && !(rel_172_cxx_new_func->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_172_cxx_new_func_op_ctxt,rel_172_cxx_new_func->createContext());
CREATE_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt,rel_177_invoke_instr_fn_target->createContext());
CREATE_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt,rel_316_delta_heap_allocation_by_instr->createContext());
CREATE_OP_CONTEXT(rel_360_heap_allocation_by_new_op_ctxt,rel_360_heap_allocation_by_new->createContext());
CREATE_OP_CONTEXT(rel_362_new_heap_allocation_by_new_op_ctxt,rel_362_new_heap_allocation_by_new->createContext());
for(const auto& env0 : *rel_172_cxx_new_func) {
auto range = rel_177_invoke_instr_fn_target->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_177_invoke_instr_fn_target_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_316_delta_heap_allocation_by_instr->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_316_delta_heap_allocation_by_instr_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_360_heap_allocation_by_new->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_360_heap_allocation_by_new_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env1[0]),ramBitCast(env2[1])}};
rel_362_new_heap_allocation_by_new->insert(tuple,READ_OP_CONTEXT(rel_362_new_heap_allocation_by_new_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(alloc_region(?alloc,"heap") :- 
   argv_ptr_points_to(_,?alloc).
in file region.dl [24:1-24:63])_");
if(!(rel_295_delta_argv_ptr_points_to->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_295_delta_argv_ptr_points_to_op_ctxt,rel_295_delta_argv_ptr_points_to->createContext());
CREATE_OP_CONTEXT(rel_363_alloc_region_op_ctxt,rel_363_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt,rel_365_new_alloc_region->createContext());
for(const auto& env0 : *rel_295_delta_argv_ptr_points_to) {
if( !(rel_363_alloc_region->contains(Tuple<RamDomain,2>{{ramBitCast(env0[1]),ramBitCast(RamSigned(57))}},READ_OP_CONTEXT(rel_363_alloc_region_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[1]),ramBitCast(RamSigned(57))}};
rel_365_new_alloc_region->insert(tuple,READ_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(alloc_region(?alloc,"heap") :- 
   heap_allocation(?alloc).
in file region.dl [25:1-25:57])_");
if(!(rel_307_delta_heap_allocation->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_307_delta_heap_allocation_op_ctxt,rel_307_delta_heap_allocation->createContext());
CREATE_OP_CONTEXT(rel_363_alloc_region_op_ctxt,rel_363_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt,rel_365_new_alloc_region->createContext());
for(const auto& env0 : *rel_307_delta_heap_allocation) {
if( !(rel_363_alloc_region->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(RamSigned(57))}},READ_OP_CONTEXT(rel_363_alloc_region_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(RamSigned(57))}};
rel_365_new_alloc_region->insert(tuple,READ_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(alloc_region(?alloc,"heap") :- 
   heap_allocation_by_new(_,?alloc).
in file region.dl [26:1-26:67])_");
if(!(rel_361_delta_heap_allocation_by_new->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_361_delta_heap_allocation_by_new_op_ctxt,rel_361_delta_heap_allocation_by_new->createContext());
CREATE_OP_CONTEXT(rel_363_alloc_region_op_ctxt,rel_363_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt,rel_365_new_alloc_region->createContext());
for(const auto& env0 : *rel_361_delta_heap_allocation_by_new) {
if( !(rel_363_alloc_region->contains(Tuple<RamDomain,2>{{ramBitCast(env0[1]),ramBitCast(RamSigned(57))}},READ_OP_CONTEXT(rel_363_alloc_region_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[1]),ramBitCast(RamSigned(57))}};
rel_365_new_alloc_region->insert(tuple,READ_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(alloc_region(?alloc,"stack") :- 
   stack_allocation(?alloc).
in file region.dl [27:1-27:59])_");
if(!(rel_304_delta_stack_allocation->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_304_delta_stack_allocation_op_ctxt,rel_304_delta_stack_allocation->createContext());
CREATE_OP_CONTEXT(rel_363_alloc_region_op_ctxt,rel_363_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt,rel_365_new_alloc_region->createContext());
for(const auto& env0 : *rel_304_delta_stack_allocation) {
if( !(rel_363_alloc_region->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(RamSigned(68))}},READ_OP_CONTEXT(rel_363_alloc_region_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(RamSigned(68))}};
rel_365_new_alloc_region->insert(tuple,READ_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(alloc_region(?alloc,"heap") :- 
   subset.exception_object.heap_allocation_by_alloc_exc(_,?alloc).
in file subset.dl [292:1-293:67])_");
if(!(rel_292_delta_subset_exception_object_heap_allocation_by_alloc_exc->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_292_delta_subset_exception_object_heap_allocation_by_alloc_exc_op_ctxt,rel_292_delta_subset_exception_object_heap_allocation_by_alloc_exc->createContext());
CREATE_OP_CONTEXT(rel_363_alloc_region_op_ctxt,rel_363_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt,rel_365_new_alloc_region->createContext());
for(const auto& env0 : *rel_292_delta_subset_exception_object_heap_allocation_by_alloc_exc) {
if( !(rel_363_alloc_region->contains(Tuple<RamDomain,2>{{ramBitCast(env0[1]),ramBitCast(RamSigned(57))}},READ_OP_CONTEXT(rel_363_alloc_region_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[1]),ramBitCast(RamSigned(57))}};
rel_365_new_alloc_region->insert(tuple,READ_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(alloc_region(?alloc,"heap") :- 
   subset.type_indication.heap_allocation_by_type_instr(_,_,?alloc).
in file subset.dl [294:1-295:70])_");
if(!(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_363_alloc_region_op_ctxt,rel_363_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt,rel_365_new_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_400_delta_subset_type_indication_heap_allocation_by_type_instr_op_ctxt,rel_400_delta_subset_type_indication_heap_allocation_by_type_instr->createContext());
for(const auto& env0 : *rel_400_delta_subset_type_indication_heap_allocation_by_type_instr) {
if( !(rel_363_alloc_region->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(RamSigned(57))}},READ_OP_CONTEXT(rel_363_alloc_region_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[2]),ramBitCast(RamSigned(57))}};
rel_365_new_alloc_region->insert(tuple,READ_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(alloc_region(?alloc,"stack") :- 
   subset.type_indication.stack_allocation_by_type_instr(_,_,?alloc).
in file subset.dl [298:1-299:71])_");
if(!(rel_406_delta_subset_type_indication_stack_allocation_by_type_instr->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_363_alloc_region_op_ctxt,rel_363_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt,rel_365_new_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_406_delta_subset_type_indication_stack_allocation_by_type_instr_op_ctxt,rel_406_delta_subset_type_indication_stack_allocation_by_type_instr->createContext());
for(const auto& env0 : *rel_406_delta_subset_type_indication_stack_allocation_by_type_instr) {
if( !(rel_363_alloc_region->contains(Tuple<RamDomain,2>{{ramBitCast(env0[2]),ramBitCast(RamSigned(68))}},READ_OP_CONTEXT(rel_363_alloc_region_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[2]),ramBitCast(RamSigned(68))}};
rel_365_new_alloc_region->insert(tuple,READ_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(alloc_region(?subAlloc,?region) :- 
   subset_subobjects._alloc_subregion(?subAlloc,?alloc,_,_,_,_),
   alloc_region(?alloc,?region).
in file subset.dl [289:1-291:33])_");
if(!(rel_538_delta_subset_subobjects_alloc_subregion->empty()) && !(rel_363_alloc_region->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_363_alloc_region_op_ctxt,rel_363_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_364_delta_alloc_region_op_ctxt,rel_364_delta_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt,rel_365_new_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_538_delta_subset_subobjects_alloc_subregion_op_ctxt,rel_538_delta_subset_subobjects_alloc_subregion->createContext());
for(const auto& env0 : *rel_538_delta_subset_subobjects_alloc_subregion) {
auto range = rel_363_alloc_region->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_363_alloc_region_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_364_delta_alloc_region->contains(Tuple<RamDomain,2>{{ramBitCast(env0[1]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_364_delta_alloc_region_op_ctxt))) && !(rel_363_alloc_region->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_363_alloc_region_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[1])}};
rel_365_new_alloc_region->insert(tuple,READ_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(alloc_region(?subAlloc,?region) :- 
   subset_subobjects._alloc_subregion(?subAlloc,?alloc,_,_,_,_),
   alloc_region(?alloc,?region).
in file subset.dl [289:1-291:33])_");
if(!(rel_537_subset_subobjects_alloc_subregion->empty()) && !(rel_364_delta_alloc_region->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_363_alloc_region_op_ctxt,rel_363_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_364_delta_alloc_region_op_ctxt,rel_364_delta_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt,rel_365_new_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_537_subset_subobjects_alloc_subregion_op_ctxt,rel_537_subset_subobjects_alloc_subregion->createContext());
for(const auto& env0 : *rel_537_subset_subobjects_alloc_subregion) {
auto range = rel_364_delta_alloc_region->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_364_delta_alloc_region_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_363_alloc_region->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_363_alloc_region_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[0]),ramBitCast(env1[1])}};
rel_365_new_alloc_region->insert(tuple,READ_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(alloc_region(?alloc,"heap") :- 
   subset_signatures._sig_var_alloc(_,?alloc,_,_,_).
in file subset.dl [296:1-297:52])_");
if(!(rel_451_delta_subset_signatures_sig_var_alloc->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_363_alloc_region_op_ctxt,rel_363_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt,rel_365_new_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_451_delta_subset_signatures_sig_var_alloc_op_ctxt,rel_451_delta_subset_signatures_sig_var_alloc->createContext());
for(const auto& env0 : *rel_451_delta_subset_signatures_sig_var_alloc) {
if( !(rel_363_alloc_region->contains(Tuple<RamDomain,2>{{ramBitCast(env0[1]),ramBitCast(RamSigned(57))}},READ_OP_CONTEXT(rel_363_alloc_region_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[1]),ramBitCast(RamSigned(57))}};
rel_365_new_alloc_region->insert(tuple,READ_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(alloc_region(?alloc,"heap") :- 
   subset_signatures._sig_ptr_alloc(_,?alloc,_,_,_).
in file subset.dl [296:1-297:52])_");
if(!(rel_454_delta_subset_signatures_sig_ptr_alloc->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_363_alloc_region_op_ctxt,rel_363_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt,rel_365_new_alloc_region->createContext());
CREATE_OP_CONTEXT(rel_454_delta_subset_signatures_sig_ptr_alloc_op_ctxt,rel_454_delta_subset_signatures_sig_ptr_alloc->createContext());
for(const auto& env0 : *rel_454_delta_subset_signatures_sig_ptr_alloc) {
if( !(rel_363_alloc_region->contains(Tuple<RamDomain,2>{{ramBitCast(env0[1]),ramBitCast(RamSigned(57))}},READ_OP_CONTEXT(rel_363_alloc_region_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(env0[1]),ramBitCast(RamSigned(57))}};
rel_365_new_alloc_region->insert(tuple,READ_OP_CONTEXT(rel_365_new_alloc_region_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(context(?calleeCtx) :- 
   subset.callgraph._callgraph_edge_interim_direct_call(_,?callerCtx,?callerInstr),
   subset._merge.merge(?calleeCtx,?callerInstr,?callerCtx).
in file interprocedural.dl [96:3-100:50])_");
if(!(rel_427_delta_subset_callgraph_callgraph_edge_interim_direct_call->empty()) && !(rel_282_subset_merge_merge->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt,rel_282_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_283_delta_subset_merge_merge_op_ctxt,rel_283_delta_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
CREATE_OP_CONTEXT(rel_368_new_context_op_ctxt,rel_368_new_context->createContext());
CREATE_OP_CONTEXT(rel_427_delta_subset_callgraph_callgraph_edge_interim_direct_call_op_ctxt,rel_427_delta_subset_callgraph_callgraph_edge_interim_direct_call->createContext());
for(const auto& env0 : *rel_427_delta_subset_callgraph_callgraph_edge_interim_direct_call) {
auto range = rel_282_subset_merge_merge->lowerUpperRange_011(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2]), ramBitCast(env0[1])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2]), ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_366_context->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_366_context_op_ctxt))) && !(rel_283_delta_subset_merge_merge->contains(Tuple<RamDomain,3>{{ramBitCast(env1[0]),ramBitCast(env0[2]),ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_283_delta_subset_merge_merge_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env1[0])}};
rel_368_new_context->insert(tuple,READ_OP_CONTEXT(rel_368_new_context_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context(?calleeCtx) :- 
   subset.callgraph._callgraph_edge_interim_direct_call(_,?callerCtx,?callerInstr),
   subset._merge.merge(?calleeCtx,?callerInstr,?callerCtx).
in file interprocedural.dl [96:3-100:50])_");
if(!(rel_426_subset_callgraph_callgraph_edge_interim_direct_call->empty()) && !(rel_283_delta_subset_merge_merge->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_283_delta_subset_merge_merge_op_ctxt,rel_283_delta_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
CREATE_OP_CONTEXT(rel_368_new_context_op_ctxt,rel_368_new_context->createContext());
CREATE_OP_CONTEXT(rel_426_subset_callgraph_callgraph_edge_interim_direct_call_op_ctxt,rel_426_subset_callgraph_callgraph_edge_interim_direct_call->createContext());
for(const auto& env0 : *rel_426_subset_callgraph_callgraph_edge_interim_direct_call) {
auto range = rel_283_delta_subset_merge_merge->lowerUpperRange_011(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2]), ramBitCast(env0[1])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2]), ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_283_delta_subset_merge_merge_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_366_context->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_366_context_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env1[0])}};
rel_368_new_context->insert(tuple,READ_OP_CONTEXT(rel_368_new_context_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context(?calleeCtx) :- 
   subset.callgraph._callgraph_edge_interim_direct_invoke(_,?callerCtx,?callerInstr),
   subset._merge.merge(?calleeCtx,?callerInstr,?callerCtx).
in file interprocedural.dl [111:3-115:50])_");
if(!(rel_430_delta_subset_callgraph_callgraph_edge_interim_direct_invoke->empty()) && !(rel_282_subset_merge_merge->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt,rel_282_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_283_delta_subset_merge_merge_op_ctxt,rel_283_delta_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
CREATE_OP_CONTEXT(rel_368_new_context_op_ctxt,rel_368_new_context->createContext());
CREATE_OP_CONTEXT(rel_430_delta_subset_callgraph_callgraph_edge_interim_direct_invoke_op_ctxt,rel_430_delta_subset_callgraph_callgraph_edge_interim_direct_invoke->createContext());
for(const auto& env0 : *rel_430_delta_subset_callgraph_callgraph_edge_interim_direct_invoke) {
auto range = rel_282_subset_merge_merge->lowerUpperRange_011(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2]), ramBitCast(env0[1])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2]), ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_366_context->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_366_context_op_ctxt))) && !(rel_283_delta_subset_merge_merge->contains(Tuple<RamDomain,3>{{ramBitCast(env1[0]),ramBitCast(env0[2]),ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_283_delta_subset_merge_merge_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env1[0])}};
rel_368_new_context->insert(tuple,READ_OP_CONTEXT(rel_368_new_context_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context(?calleeCtx) :- 
   subset.callgraph._callgraph_edge_interim_direct_invoke(_,?callerCtx,?callerInstr),
   subset._merge.merge(?calleeCtx,?callerInstr,?callerCtx).
in file interprocedural.dl [111:3-115:50])_");
if(!(rel_429_subset_callgraph_callgraph_edge_interim_direct_invoke->empty()) && !(rel_283_delta_subset_merge_merge->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_283_delta_subset_merge_merge_op_ctxt,rel_283_delta_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
CREATE_OP_CONTEXT(rel_368_new_context_op_ctxt,rel_368_new_context->createContext());
CREATE_OP_CONTEXT(rel_429_subset_callgraph_callgraph_edge_interim_direct_invoke_op_ctxt,rel_429_subset_callgraph_callgraph_edge_interim_direct_invoke->createContext());
for(const auto& env0 : *rel_429_subset_callgraph_callgraph_edge_interim_direct_invoke) {
auto range = rel_283_delta_subset_merge_merge->lowerUpperRange_011(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[2]), ramBitCast(env0[1])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[2]), ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_283_delta_subset_merge_merge_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_366_context->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_366_context_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env1[0])}};
rel_368_new_context->insert(tuple,READ_OP_CONTEXT(rel_368_new_context_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context(?calleeCtx) :- 
   subset.callgraph._callgraph_edge_interim_indirect_call(_,?callerCtx,_,?callerInstr),
   subset._merge.merge(?calleeCtx,?callerInstr,?callerCtx).
in file interprocedural.dl [133:3-137:50])_");
if(!(rel_433_delta_subset_callgraph_callgraph_edge_interim_indirect_call->empty()) && !(rel_282_subset_merge_merge->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt,rel_282_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_283_delta_subset_merge_merge_op_ctxt,rel_283_delta_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
CREATE_OP_CONTEXT(rel_368_new_context_op_ctxt,rel_368_new_context->createContext());
CREATE_OP_CONTEXT(rel_433_delta_subset_callgraph_callgraph_edge_interim_indirect_call_op_ctxt,rel_433_delta_subset_callgraph_callgraph_edge_interim_indirect_call->createContext());
for(const auto& env0 : *rel_433_delta_subset_callgraph_callgraph_edge_interim_indirect_call) {
auto range = rel_282_subset_merge_merge->lowerUpperRange_011(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[3]), ramBitCast(env0[1])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[3]), ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_366_context->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_366_context_op_ctxt))) && !(rel_283_delta_subset_merge_merge->contains(Tuple<RamDomain,3>{{ramBitCast(env1[0]),ramBitCast(env0[3]),ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_283_delta_subset_merge_merge_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env1[0])}};
rel_368_new_context->insert(tuple,READ_OP_CONTEXT(rel_368_new_context_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context(?calleeCtx) :- 
   subset.callgraph._callgraph_edge_interim_indirect_call(_,?callerCtx,_,?callerInstr),
   subset._merge.merge(?calleeCtx,?callerInstr,?callerCtx).
in file interprocedural.dl [133:3-137:50])_");
if(!(rel_432_subset_callgraph_callgraph_edge_interim_indirect_call->empty()) && !(rel_283_delta_subset_merge_merge->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_283_delta_subset_merge_merge_op_ctxt,rel_283_delta_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
CREATE_OP_CONTEXT(rel_368_new_context_op_ctxt,rel_368_new_context->createContext());
CREATE_OP_CONTEXT(rel_432_subset_callgraph_callgraph_edge_interim_indirect_call_op_ctxt,rel_432_subset_callgraph_callgraph_edge_interim_indirect_call->createContext());
for(const auto& env0 : *rel_432_subset_callgraph_callgraph_edge_interim_indirect_call) {
auto range = rel_283_delta_subset_merge_merge->lowerUpperRange_011(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[3]), ramBitCast(env0[1])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[3]), ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_283_delta_subset_merge_merge_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_366_context->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_366_context_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env1[0])}};
rel_368_new_context->insert(tuple,READ_OP_CONTEXT(rel_368_new_context_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context(?calleeCtx) :- 
   subset.callgraph._callgraph_edge_interim_indirect_invoke(_,?callerCtx,_,?callerInstr),
   subset._merge.merge(?calleeCtx,?callerInstr,?callerCtx).
in file interprocedural.dl [154:3-158:50])_");
if(!(rel_436_delta_subset_callgraph_callgraph_edge_interim_indirect_invoke->empty()) && !(rel_282_subset_merge_merge->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt,rel_282_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_283_delta_subset_merge_merge_op_ctxt,rel_283_delta_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
CREATE_OP_CONTEXT(rel_368_new_context_op_ctxt,rel_368_new_context->createContext());
CREATE_OP_CONTEXT(rel_436_delta_subset_callgraph_callgraph_edge_interim_indirect_invoke_op_ctxt,rel_436_delta_subset_callgraph_callgraph_edge_interim_indirect_invoke->createContext());
for(const auto& env0 : *rel_436_delta_subset_callgraph_callgraph_edge_interim_indirect_invoke) {
auto range = rel_282_subset_merge_merge->lowerUpperRange_011(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[3]), ramBitCast(env0[1])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[3]), ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_282_subset_merge_merge_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_283_delta_subset_merge_merge->contains(Tuple<RamDomain,3>{{ramBitCast(env1[0]),ramBitCast(env0[3]),ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_283_delta_subset_merge_merge_op_ctxt))) && !(rel_366_context->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_366_context_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env1[0])}};
rel_368_new_context->insert(tuple,READ_OP_CONTEXT(rel_368_new_context_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context(?calleeCtx) :- 
   subset.callgraph._callgraph_edge_interim_indirect_invoke(_,?callerCtx,_,?callerInstr),
   subset._merge.merge(?calleeCtx,?callerInstr,?callerCtx).
in file interprocedural.dl [154:3-158:50])_");
if(!(rel_435_subset_callgraph_callgraph_edge_interim_indirect_invoke->empty()) && !(rel_283_delta_subset_merge_merge->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_283_delta_subset_merge_merge_op_ctxt,rel_283_delta_subset_merge_merge->createContext());
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
CREATE_OP_CONTEXT(rel_368_new_context_op_ctxt,rel_368_new_context->createContext());
CREATE_OP_CONTEXT(rel_435_subset_callgraph_callgraph_edge_interim_indirect_invoke_op_ctxt,rel_435_subset_callgraph_callgraph_edge_interim_indirect_invoke->createContext());
for(const auto& env0 : *rel_435_subset_callgraph_callgraph_edge_interim_indirect_invoke) {
auto range = rel_283_delta_subset_merge_merge->lowerUpperRange_011(Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[3]), ramBitCast(env0[1])}},Tuple<RamDomain,3>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[3]), ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_283_delta_subset_merge_merge_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_366_context->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_366_context_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(env1[0])}};
rel_368_new_context->insert(tuple,READ_OP_CONTEXT(rel_368_new_context_op_ctxt));
}
}
}
}
();}
signalHandler->setMsg(R"_(context([?head,nil]) :- 
   context([?head,[?tailHead,nil]]).
in file interface.dl [48:1-55:23])_");
if(!(rel_367_delta_context->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
CREATE_OP_CONTEXT(rel_367_delta_context_op_ctxt,rel_367_delta_context->createContext());
CREATE_OP_CONTEXT(rel_368_new_context_op_ctxt,rel_368_new_context->createContext());
for(const auto& env0 : *rel_367_delta_context) {
RamDomain const ref = env0[0];
if (ref == 0) continue;
const RamDomain *env1 = recordTable.unpack(ref,2);
{
if( !(rel_366_context->contains(Tuple<RamDomain,1>{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(RamSigned(0)))}}
))}},READ_OP_CONTEXT(rel_366_context_op_ctxt)))) {
RamDomain const ref = env1[1];
if (ref == 0) continue;
const RamDomain *env2 = recordTable.unpack(ref,2);
{
if( (ramBitCast<RamDomain>(env2[1]) == ramBitCast<RamDomain>(RamSigned(0)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(RamSigned(0)))}}
))}};
rel_368_new_context->insert(tuple,READ_OP_CONTEXT(rel_368_new_context_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(context([?head,[?tailHead,?droppedTailTail]]) :- 
   context([?head,[?tailHead,?tailTail]]),
   drop_last(?droppedTailTail,?tailTail).
in file interface.dl [57:1-63:49])_");
if(!(rel_367_delta_context->empty()) && !(rel_372_drop_last->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
CREATE_OP_CONTEXT(rel_367_delta_context_op_ctxt,rel_367_delta_context->createContext());
CREATE_OP_CONTEXT(rel_368_new_context_op_ctxt,rel_368_new_context->createContext());
CREATE_OP_CONTEXT(rel_372_drop_last_op_ctxt,rel_372_drop_last->createContext());
CREATE_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt,rel_373_delta_drop_last->createContext());
for(const auto& env0 : *rel_367_delta_context) {
RamDomain const ref = env0[0];
if (ref == 0) continue;
const RamDomain *env1 = recordTable.unpack(ref,2);
{
RamDomain const ref = env1[1];
if (ref == 0) continue;
const RamDomain *env2 = recordTable.unpack(ref,2);
{
auto range = rel_372_drop_last->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env2[1])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_372_drop_last_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_373_delta_drop_last->contains(Tuple<RamDomain,2>{{ramBitCast(env3[0]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt))) && !(rel_366_context->contains(Tuple<RamDomain,1>{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env2[0])),ramBitCast(ramBitCast(env3[0]))}}
)))}}
))}},READ_OP_CONTEXT(rel_366_context_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env2[0])),ramBitCast(ramBitCast(env3[0]))}}
)))}}
))}};
rel_368_new_context->insert(tuple,READ_OP_CONTEXT(rel_368_new_context_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(context([?head,[?tailHead,?droppedTailTail]]) :- 
   context([?head,[?tailHead,?tailTail]]),
   drop_last(?droppedTailTail,?tailTail).
in file interface.dl [57:1-63:49])_");
if(!(rel_366_context->empty()) && !(rel_373_delta_drop_last->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
CREATE_OP_CONTEXT(rel_368_new_context_op_ctxt,rel_368_new_context->createContext());
CREATE_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt,rel_373_delta_drop_last->createContext());
for(const auto& env0 : *rel_366_context) {
RamDomain const ref = env0[0];
if (ref == 0) continue;
const RamDomain *env1 = recordTable.unpack(ref,2);
{
RamDomain const ref = env1[1];
if (ref == 0) continue;
const RamDomain *env2 = recordTable.unpack(ref,2);
{
auto range = rel_373_delta_drop_last->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env2[1])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_366_context->contains(Tuple<RamDomain,1>{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env2[0])),ramBitCast(ramBitCast(env3[0]))}}
)))}}
))}},READ_OP_CONTEXT(rel_366_context_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env2[0])),ramBitCast(ramBitCast(env3[0]))}}
)))}}
))}};
rel_368_new_context->insert(tuple,READ_OP_CONTEXT(rel_368_new_context_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(context([?newItem,?callerCtx]) :- 
   !insensitive(),
   subset._merge._reachable_call(?callerCtx,?callerInstr),
   context_depth(?callerCtxDepth,?callerCtx),
   max_context_depth(?maxDepth),
   ?callerCtxDepth < ?maxDepth,
   context_item_by_invoc(?callerInstr,?newItem).
in file interface.dl [127:3-138:38])_");
if(!(rel_369_context_depth->empty()) && !(rel_193_context_item_by_invoc->empty()) && !(rel_277_delta_subset_merge_reachable_call->empty()) && rel_25_insensitive->empty() && !(rel_26_max_context_depth->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_26_max_context_depth_op_ctxt,rel_26_max_context_depth->createContext());
CREATE_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt,rel_193_context_item_by_invoc->createContext());
CREATE_OP_CONTEXT(rel_277_delta_subset_merge_reachable_call_op_ctxt,rel_277_delta_subset_merge_reachable_call->createContext());
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
CREATE_OP_CONTEXT(rel_368_new_context_op_ctxt,rel_368_new_context->createContext());
CREATE_OP_CONTEXT(rel_369_context_depth_op_ctxt,rel_369_context_depth->createContext());
CREATE_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt,rel_370_delta_context_depth->createContext());
for(const auto& env0 : *rel_277_delta_subset_merge_reachable_call) {
auto range = rel_369_context_depth->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_369_context_depth_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_370_delta_context_depth->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt)))) {
auto range = rel_26_max_context_depth->lowerUpperRange_2(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},Tuple<RamDomain,1>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_26_max_context_depth_op_ctxt));
for(const auto& env2 : range) {
if( (ramBitCast<RamDomain>(env1[0]) != ramBitCast<RamDomain>(env2[0]))) {
auto range = rel_193_context_item_by_invoc->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_366_context->contains(Tuple<RamDomain,1>{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env3[1])),ramBitCast(ramBitCast(env0[0]))}}
))}},READ_OP_CONTEXT(rel_366_context_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env3[1])),ramBitCast(ramBitCast(env0[0]))}}
))}};
rel_368_new_context->insert(tuple,READ_OP_CONTEXT(rel_368_new_context_op_ctxt));
}
}
break;
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(context([?newItem,?callerCtx]) :- 
   !insensitive(),
   subset._merge._reachable_call(?callerCtx,?callerInstr),
   context_depth(?callerCtxDepth,?callerCtx),
   max_context_depth(?maxDepth),
   ?callerCtxDepth < ?maxDepth,
   context_item_by_invoc(?callerInstr,?newItem).
in file interface.dl [127:3-138:38])_");
if(!(rel_370_delta_context_depth->empty()) && !(rel_193_context_item_by_invoc->empty()) && !(rel_276_subset_merge_reachable_call->empty()) && rel_25_insensitive->empty() && !(rel_26_max_context_depth->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_26_max_context_depth_op_ctxt,rel_26_max_context_depth->createContext());
CREATE_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt,rel_193_context_item_by_invoc->createContext());
CREATE_OP_CONTEXT(rel_276_subset_merge_reachable_call_op_ctxt,rel_276_subset_merge_reachable_call->createContext());
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
CREATE_OP_CONTEXT(rel_368_new_context_op_ctxt,rel_368_new_context->createContext());
CREATE_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt,rel_370_delta_context_depth->createContext());
for(const auto& env0 : *rel_276_subset_merge_reachable_call) {
auto range = rel_370_delta_context_depth->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_26_max_context_depth->lowerUpperRange_2(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},Tuple<RamDomain,1>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_26_max_context_depth_op_ctxt));
for(const auto& env2 : range) {
if( (ramBitCast<RamDomain>(env1[0]) != ramBitCast<RamDomain>(env2[0]))) {
auto range = rel_193_context_item_by_invoc->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_366_context->contains(Tuple<RamDomain,1>{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env3[1])),ramBitCast(ramBitCast(env0[0]))}}
))}},READ_OP_CONTEXT(rel_366_context_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env3[1])),ramBitCast(ramBitCast(env0[0]))}}
))}};
rel_368_new_context->insert(tuple,READ_OP_CONTEXT(rel_368_new_context_op_ctxt));
}
}
break;
}
}
}
}
}
();}
signalHandler->setMsg(R"_(context([?newItem,?droppedCallerCtx]) :- 
   !insensitive(),
   subset._merge._reachable_call(?callerCtx,?callerInstr),
   context_depth(?maxDepth,?callerCtx),
   max_context_depth(?maxDepth),
   drop_last(?droppedCallerCtx,?callerCtx),
   context_item_by_invoc(?callerInstr,?newItem).
in file interface.dl [141:3-153:45])_");
if(!(rel_369_context_depth->empty()) && !(rel_193_context_item_by_invoc->empty()) && !(rel_277_delta_subset_merge_reachable_call->empty()) && !(rel_372_drop_last->empty()) && rel_25_insensitive->empty() && !(rel_26_max_context_depth->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_26_max_context_depth_op_ctxt,rel_26_max_context_depth->createContext());
CREATE_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt,rel_193_context_item_by_invoc->createContext());
CREATE_OP_CONTEXT(rel_277_delta_subset_merge_reachable_call_op_ctxt,rel_277_delta_subset_merge_reachable_call->createContext());
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
CREATE_OP_CONTEXT(rel_368_new_context_op_ctxt,rel_368_new_context->createContext());
CREATE_OP_CONTEXT(rel_369_context_depth_op_ctxt,rel_369_context_depth->createContext());
CREATE_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt,rel_370_delta_context_depth->createContext());
CREATE_OP_CONTEXT(rel_372_drop_last_op_ctxt,rel_372_drop_last->createContext());
CREATE_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt,rel_373_delta_drop_last->createContext());
for(const auto& env0 : *rel_277_delta_subset_merge_reachable_call) {
auto range = rel_369_context_depth->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_369_context_depth_op_ctxt));
for(const auto& env1 : range) {
if( rel_26_max_context_depth->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_26_max_context_depth_op_ctxt)) && !(rel_370_delta_context_depth->contains(Tuple<RamDomain,2>{{ramBitCast(env1[0]),ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt)))) {
auto range = rel_372_drop_last->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_372_drop_last_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_373_delta_drop_last->contains(Tuple<RamDomain,2>{{ramBitCast(env2[0]),ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt)))) {
auto range = rel_193_context_item_by_invoc->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_366_context->contains(Tuple<RamDomain,1>{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env3[1])),ramBitCast(ramBitCast(env2[0]))}}
))}},READ_OP_CONTEXT(rel_366_context_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env3[1])),ramBitCast(ramBitCast(env2[0]))}}
))}};
rel_368_new_context->insert(tuple,READ_OP_CONTEXT(rel_368_new_context_op_ctxt));
}
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(context([?newItem,?droppedCallerCtx]) :- 
   !insensitive(),
   subset._merge._reachable_call(?callerCtx,?callerInstr),
   context_depth(?maxDepth,?callerCtx),
   max_context_depth(?maxDepth),
   drop_last(?droppedCallerCtx,?callerCtx),
   context_item_by_invoc(?callerInstr,?newItem).
in file interface.dl [141:3-153:45])_");
if(!(rel_370_delta_context_depth->empty()) && !(rel_193_context_item_by_invoc->empty()) && !(rel_276_subset_merge_reachable_call->empty()) && !(rel_372_drop_last->empty()) && rel_25_insensitive->empty() && !(rel_26_max_context_depth->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_26_max_context_depth_op_ctxt,rel_26_max_context_depth->createContext());
CREATE_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt,rel_193_context_item_by_invoc->createContext());
CREATE_OP_CONTEXT(rel_276_subset_merge_reachable_call_op_ctxt,rel_276_subset_merge_reachable_call->createContext());
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
CREATE_OP_CONTEXT(rel_368_new_context_op_ctxt,rel_368_new_context->createContext());
CREATE_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt,rel_370_delta_context_depth->createContext());
CREATE_OP_CONTEXT(rel_372_drop_last_op_ctxt,rel_372_drop_last->createContext());
CREATE_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt,rel_373_delta_drop_last->createContext());
for(const auto& env0 : *rel_276_subset_merge_reachable_call) {
auto range = rel_370_delta_context_depth->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt));
for(const auto& env1 : range) {
if( rel_26_max_context_depth->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_26_max_context_depth_op_ctxt))) {
auto range = rel_372_drop_last->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_372_drop_last_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_373_delta_drop_last->contains(Tuple<RamDomain,2>{{ramBitCast(env2[0]),ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt)))) {
auto range = rel_193_context_item_by_invoc->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_366_context->contains(Tuple<RamDomain,1>{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env3[1])),ramBitCast(ramBitCast(env2[0]))}}
))}},READ_OP_CONTEXT(rel_366_context_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env3[1])),ramBitCast(ramBitCast(env2[0]))}}
))}};
rel_368_new_context->insert(tuple,READ_OP_CONTEXT(rel_368_new_context_op_ctxt));
}
}
}
}
break;
}
}
}
}
();}
signalHandler->setMsg(R"_(context([?newItem,?droppedCallerCtx]) :- 
   !insensitive(),
   subset._merge._reachable_call(?callerCtx,?callerInstr),
   context_depth(?maxDepth,?callerCtx),
   max_context_depth(?maxDepth),
   drop_last(?droppedCallerCtx,?callerCtx),
   context_item_by_invoc(?callerInstr,?newItem).
in file interface.dl [141:3-153:45])_");
if(!(rel_369_context_depth->empty()) && !(rel_193_context_item_by_invoc->empty()) && !(rel_276_subset_merge_reachable_call->empty()) && !(rel_373_delta_drop_last->empty()) && rel_25_insensitive->empty() && !(rel_26_max_context_depth->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_26_max_context_depth_op_ctxt,rel_26_max_context_depth->createContext());
CREATE_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt,rel_193_context_item_by_invoc->createContext());
CREATE_OP_CONTEXT(rel_276_subset_merge_reachable_call_op_ctxt,rel_276_subset_merge_reachable_call->createContext());
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
CREATE_OP_CONTEXT(rel_368_new_context_op_ctxt,rel_368_new_context->createContext());
CREATE_OP_CONTEXT(rel_369_context_depth_op_ctxt,rel_369_context_depth->createContext());
CREATE_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt,rel_373_delta_drop_last->createContext());
for(const auto& env0 : *rel_276_subset_merge_reachable_call) {
auto range = rel_369_context_depth->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_369_context_depth_op_ctxt));
for(const auto& env1 : range) {
if( rel_26_max_context_depth->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_26_max_context_depth_op_ctxt))) {
auto range = rel_373_delta_drop_last->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_193_context_item_by_invoc->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_193_context_item_by_invoc_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_366_context->contains(Tuple<RamDomain,1>{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env3[1])),ramBitCast(ramBitCast(env2[0]))}}
))}},READ_OP_CONTEXT(rel_366_context_op_ctxt)))) {
Tuple<RamDomain,1> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env3[1])),ramBitCast(ramBitCast(env2[0]))}}
))}};
rel_368_new_context->insert(tuple,READ_OP_CONTEXT(rel_368_new_context_op_ctxt));
}
}
}
break;
}
}
}
}
();}
signalHandler->setMsg(R"_(context_depth((1+tailLen),[head,tail]) :- 
   context([head,tail]),
   context_depth(tailLen,tail).
in file interface.dl [38:1-40:32])_");
if(!(rel_367_delta_context->empty()) && !(rel_369_context_depth->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_367_delta_context_op_ctxt,rel_367_delta_context->createContext());
CREATE_OP_CONTEXT(rel_369_context_depth_op_ctxt,rel_369_context_depth->createContext());
CREATE_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt,rel_370_delta_context_depth->createContext());
CREATE_OP_CONTEXT(rel_371_new_context_depth_op_ctxt,rel_371_new_context_depth->createContext());
for(const auto& env0 : *rel_367_delta_context) {
RamDomain const ref = env0[0];
if (ref == 0) continue;
const RamDomain *env1 = recordTable.unpack(ref,2);
{
auto range = rel_369_context_depth->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env1[1])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_369_context_depth_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_370_delta_context_depth->contains(Tuple<RamDomain,2>{{ramBitCast(env2[0]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt))) && !(rel_369_context_depth->contains(Tuple<RamDomain,2>{{ramBitCast((ramBitCast<RamSigned>(RamSigned(1)) + ramBitCast<RamSigned>(env2[0]))),ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(env1[1]))}}
))}},READ_OP_CONTEXT(rel_369_context_depth_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast((ramBitCast<RamSigned>(RamSigned(1)) + ramBitCast<RamSigned>(env2[0]))),ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(env1[1]))}}
))}};
rel_371_new_context_depth->insert(tuple,READ_OP_CONTEXT(rel_371_new_context_depth_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(context_depth((1+tailLen),[head,tail]) :- 
   context([head,tail]),
   context_depth(tailLen,tail).
in file interface.dl [38:1-40:32])_");
if(!(rel_366_context->empty()) && !(rel_370_delta_context_depth->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
CREATE_OP_CONTEXT(rel_369_context_depth_op_ctxt,rel_369_context_depth->createContext());
CREATE_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt,rel_370_delta_context_depth->createContext());
CREATE_OP_CONTEXT(rel_371_new_context_depth_op_ctxt,rel_371_new_context_depth->createContext());
for(const auto& env0 : *rel_366_context) {
RamDomain const ref = env0[0];
if (ref == 0) continue;
const RamDomain *env1 = recordTable.unpack(ref,2);
{
auto range = rel_370_delta_context_depth->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env1[1])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_369_context_depth->contains(Tuple<RamDomain,2>{{ramBitCast((ramBitCast<RamSigned>(RamSigned(1)) + ramBitCast<RamSigned>(env2[0]))),ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(env1[1]))}}
))}},READ_OP_CONTEXT(rel_369_context_depth_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast((ramBitCast<RamSigned>(RamSigned(1)) + ramBitCast<RamSigned>(env2[0]))),ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(env1[1]))}}
))}};
rel_371_new_context_depth->insert(tuple,READ_OP_CONTEXT(rel_371_new_context_depth_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(drop_last(nil,?in) :- 
   context_depth(1,?in).
in file interface.dl [44:1-46:25])_");
if(!(rel_370_delta_context_depth->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt,rel_370_delta_context_depth->createContext());
CREATE_OP_CONTEXT(rel_372_drop_last_op_ctxt,rel_372_drop_last->createContext());
CREATE_OP_CONTEXT(rel_374_new_drop_last_op_ctxt,rel_374_new_drop_last->createContext());
auto range = rel_370_delta_context_depth->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(RamSigned(1)), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(RamSigned(1)), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_370_delta_context_depth_op_ctxt));
for(const auto& env0 : range) {
if( !(rel_372_drop_last->contains(Tuple<RamDomain,2>{{ramBitCast(RamSigned(0)),ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_372_drop_last_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(RamSigned(0)),ramBitCast(env0[1])}};
rel_374_new_drop_last->insert(tuple,READ_OP_CONTEXT(rel_374_new_drop_last_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(drop_last([?head,nil],[?head,[?tailHead,nil]]) :- 
   context([?head,[?tailHead,nil]]).
in file interface.dl [48:1-55:23])_");
if(!(rel_367_delta_context->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_367_delta_context_op_ctxt,rel_367_delta_context->createContext());
CREATE_OP_CONTEXT(rel_372_drop_last_op_ctxt,rel_372_drop_last->createContext());
CREATE_OP_CONTEXT(rel_374_new_drop_last_op_ctxt,rel_374_new_drop_last->createContext());
for(const auto& env0 : *rel_367_delta_context) {
RamDomain const ref = env0[0];
if (ref == 0) continue;
const RamDomain *env1 = recordTable.unpack(ref,2);
{
RamDomain const ref = env1[1];
if (ref == 0) continue;
const RamDomain *env2 = recordTable.unpack(ref,2);
{
if( (ramBitCast<RamDomain>(env2[1]) == ramBitCast<RamDomain>(RamSigned(0))) && !(rel_372_drop_last->contains(Tuple<RamDomain,2>{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(RamSigned(0)))}}
)),ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env2[0])),ramBitCast(ramBitCast(RamSigned(0)))}}
)))}}
))}},READ_OP_CONTEXT(rel_372_drop_last_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(RamSigned(0)))}}
)),ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env2[0])),ramBitCast(ramBitCast(RamSigned(0)))}}
)))}}
))}};
rel_374_new_drop_last->insert(tuple,READ_OP_CONTEXT(rel_374_new_drop_last_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(drop_last([?head,[?tailHead,?droppedTailTail]],[?head,[?tailHead,?tailTail]]) :- 
   context([?head,[?tailHead,?tailTail]]),
   drop_last(?droppedTailTail,?tailTail).
in file interface.dl [57:1-63:49])_");
if(!(rel_367_delta_context->empty()) && !(rel_372_drop_last->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_367_delta_context_op_ctxt,rel_367_delta_context->createContext());
CREATE_OP_CONTEXT(rel_372_drop_last_op_ctxt,rel_372_drop_last->createContext());
CREATE_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt,rel_373_delta_drop_last->createContext());
CREATE_OP_CONTEXT(rel_374_new_drop_last_op_ctxt,rel_374_new_drop_last->createContext());
for(const auto& env0 : *rel_367_delta_context) {
RamDomain const ref = env0[0];
if (ref == 0) continue;
const RamDomain *env1 = recordTable.unpack(ref,2);
{
RamDomain const ref = env1[1];
if (ref == 0) continue;
const RamDomain *env2 = recordTable.unpack(ref,2);
{
auto range = rel_372_drop_last->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env2[1])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_372_drop_last_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_373_delta_drop_last->contains(Tuple<RamDomain,2>{{ramBitCast(env3[0]),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt))) && !(rel_372_drop_last->contains(Tuple<RamDomain,2>{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env2[0])),ramBitCast(ramBitCast(env3[0]))}}
)))}}
)),ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env2[0])),ramBitCast(ramBitCast(env2[1]))}}
)))}}
))}},READ_OP_CONTEXT(rel_372_drop_last_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env2[0])),ramBitCast(ramBitCast(env3[0]))}}
)))}}
)),ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env2[0])),ramBitCast(ramBitCast(env2[1]))}}
)))}}
))}};
rel_374_new_drop_last->insert(tuple,READ_OP_CONTEXT(rel_374_new_drop_last_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(drop_last([?head,[?tailHead,?droppedTailTail]],[?head,[?tailHead,?tailTail]]) :- 
   context([?head,[?tailHead,?tailTail]]),
   drop_last(?droppedTailTail,?tailTail).
in file interface.dl [57:1-63:49])_");
if(!(rel_366_context->empty()) && !(rel_373_delta_drop_last->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_366_context_op_ctxt,rel_366_context->createContext());
CREATE_OP_CONTEXT(rel_372_drop_last_op_ctxt,rel_372_drop_last->createContext());
CREATE_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt,rel_373_delta_drop_last->createContext());
CREATE_OP_CONTEXT(rel_374_new_drop_last_op_ctxt,rel_374_new_drop_last->createContext());
for(const auto& env0 : *rel_366_context) {
RamDomain const ref = env0[0];
if (ref == 0) continue;
const RamDomain *env1 = recordTable.unpack(ref,2);
{
RamDomain const ref = env1[1];
if (ref == 0) continue;
const RamDomain *env2 = recordTable.unpack(ref,2);
{
auto range = rel_373_delta_drop_last->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env2[1])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_373_delta_drop_last_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_372_drop_last->contains(Tuple<RamDomain,2>{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env2[0])),ramBitCast(ramBitCast(env3[0]))}}
)))}}
)),ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env2[0])),ramBitCast(ramBitCast(env2[1]))}}
)))}}
))}},READ_OP_CONTEXT(rel_372_drop_last_op_ctxt)))) {
Tuple<RamDomain,2> tuple{{ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env2[0])),ramBitCast(ramBitCast(env3[0]))}}
)))}}
)),ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env1[0])),ramBitCast(ramBitCast(pack(recordTable,Tuple<RamDomain,2>{{ramBitCast(ramBitCast(env2[0])),ramBitCast(ramBitCast(env2[1]))}}
)))}}
))}};
rel_374_new_drop_last->insert(tuple,READ_OP_CONTEXT(rel_374_new_drop_last_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(static_subobjects._alloc_subregion(cat(?alloc,"[",to_string(?index),"]"),?alloc,cat("[",to_string(?index),"]"),?alloc,cat("[",to_string(?index),"]"),?type) :- 
   static_allocation_type(?alloc,?type),
   static_subobjects._non_func_basic_allocation(?alloc),
   static_subobjects.index_in_bounds(?alloc,?index).
in file allocations-subobjects.dl [427:3-435:51])_");
if(!(rel_378_static_subobjects_non_func_basic_allocation->empty()) && !(rel_387_static_subobjects_index_in_bounds->empty()) && !(rel_322_delta_static_allocation_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt,rel_377_new_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_378_static_subobjects_non_func_basic_allocation_op_ctxt,rel_378_static_subobjects_non_func_basic_allocation->createContext());
CREATE_OP_CONTEXT(rel_379_delta_static_subobjects_non_func_basic_allocation_op_ctxt,rel_379_delta_static_subobjects_non_func_basic_allocation->createContext());
CREATE_OP_CONTEXT(rel_387_static_subobjects_index_in_bounds_op_ctxt,rel_387_static_subobjects_index_in_bounds->createContext());
CREATE_OP_CONTEXT(rel_388_delta_static_subobjects_index_in_bounds_op_ctxt,rel_388_delta_static_subobjects_index_in_bounds->createContext());
for(const auto& env0 : *rel_322_delta_static_allocation_type) {
if( rel_378_static_subobjects_non_func_basic_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_378_static_subobjects_non_func_basic_allocation_op_ctxt)) && !(rel_379_delta_static_subobjects_non_func_basic_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_379_delta_static_subobjects_non_func_basic_allocation_op_ctxt)))) {
auto range = rel_387_static_subobjects_index_in_bounds->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_387_static_subobjects_index_in_bounds_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_375_static_subobjects_alloc_subregion->contains(Tuple<RamDomain,6>{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env1[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env1[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env1[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt))) && !(rel_388_delta_static_subobjects_index_in_bounds->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_388_delta_static_subobjects_index_in_bounds_op_ctxt)))) {
Tuple<RamDomain,6> tuple{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env1[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env1[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env1[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[1])}};
rel_377_new_static_subobjects_alloc_subregion->insert(tuple,READ_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(static_subobjects._alloc_subregion(cat(?alloc,"[",to_string(?index),"]"),?alloc,cat("[",to_string(?index),"]"),?alloc,cat("[",to_string(?index),"]"),?type) :- 
   static_allocation_type(?alloc,?type),
   static_subobjects._non_func_basic_allocation(?alloc),
   static_subobjects.index_in_bounds(?alloc,?index).
in file allocations-subobjects.dl [427:3-435:51])_");
if(!(rel_379_delta_static_subobjects_non_func_basic_allocation->empty()) && !(rel_387_static_subobjects_index_in_bounds->empty()) && !(rel_321_static_allocation_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt,rel_377_new_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_379_delta_static_subobjects_non_func_basic_allocation_op_ctxt,rel_379_delta_static_subobjects_non_func_basic_allocation->createContext());
CREATE_OP_CONTEXT(rel_387_static_subobjects_index_in_bounds_op_ctxt,rel_387_static_subobjects_index_in_bounds->createContext());
CREATE_OP_CONTEXT(rel_388_delta_static_subobjects_index_in_bounds_op_ctxt,rel_388_delta_static_subobjects_index_in_bounds->createContext());
for(const auto& env0 : *rel_321_static_allocation_type) {
if( rel_379_delta_static_subobjects_non_func_basic_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_379_delta_static_subobjects_non_func_basic_allocation_op_ctxt))) {
auto range = rel_387_static_subobjects_index_in_bounds->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_387_static_subobjects_index_in_bounds_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_375_static_subobjects_alloc_subregion->contains(Tuple<RamDomain,6>{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env1[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env1[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env1[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt))) && !(rel_388_delta_static_subobjects_index_in_bounds->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_388_delta_static_subobjects_index_in_bounds_op_ctxt)))) {
Tuple<RamDomain,6> tuple{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env1[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env1[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env1[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[1])}};
rel_377_new_static_subobjects_alloc_subregion->insert(tuple,READ_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(static_subobjects._alloc_subregion(cat(?alloc,"[",to_string(?index),"]"),?alloc,cat("[",to_string(?index),"]"),?alloc,cat("[",to_string(?index),"]"),?type) :- 
   static_allocation_type(?alloc,?type),
   static_subobjects._non_func_basic_allocation(?alloc),
   static_subobjects.index_in_bounds(?alloc,?index).
in file allocations-subobjects.dl [427:3-435:51])_");
if(!(rel_378_static_subobjects_non_func_basic_allocation->empty()) && !(rel_388_delta_static_subobjects_index_in_bounds->empty()) && !(rel_321_static_allocation_type->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt,rel_377_new_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_378_static_subobjects_non_func_basic_allocation_op_ctxt,rel_378_static_subobjects_non_func_basic_allocation->createContext());
CREATE_OP_CONTEXT(rel_388_delta_static_subobjects_index_in_bounds_op_ctxt,rel_388_delta_static_subobjects_index_in_bounds->createContext());
for(const auto& env0 : *rel_321_static_allocation_type) {
if( rel_378_static_subobjects_non_func_basic_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_378_static_subobjects_non_func_basic_allocation_op_ctxt))) {
auto range = rel_388_delta_static_subobjects_index_in_bounds->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_388_delta_static_subobjects_index_in_bounds_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_375_static_subobjects_alloc_subregion->contains(Tuple<RamDomain,6>{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env1[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env1[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env1[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)))) {
Tuple<RamDomain,6> tuple{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env1[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env1[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env1[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[1])}};
rel_377_new_static_subobjects_alloc_subregion->insert(tuple,READ_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(static_subobjects._alloc_subregion(cat(?alloc,".?/",to_string(?field)),?alloc,cat("/",to_string(?field)),?root,cat(?path,cat("/",to_string(?field))),?fieldType) :- 
   static_allocation_type(?alloc,?type),
   static_subobjects._alloc_subregion(?alloc,_,_,?root,?path,_),
   struct_type(?type),
   struct_type_field(?type,?field,?fieldType).
in file allocations-subobjects.dl [332:3-342:55])_");
if(!(rel_52_struct_type->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_322_delta_static_allocation_type->empty()) && !(rel_40_struct_type_field->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_52_struct_type_op_ctxt,rel_52_struct_type->createContext());
CREATE_OP_CONTEXT(rel_40_struct_type_field_op_ctxt,rel_40_struct_type_field->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt,rel_377_new_static_subobjects_alloc_subregion->createContext());
for(const auto& env0 : *rel_322_delta_static_allocation_type) {
if( rel_52_struct_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_52_struct_type_op_ctxt))) {
auto range = rel_375_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt));
for(const auto& env1 : range) {
if( !(!rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_100110(Tuple<RamDomain,6>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env1[3]), ramBitCast(env1[4]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env1[3]), ramBitCast(env1[4]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt)).empty())) {
auto range = rel_40_struct_type_field->lowerUpperRange_100(Tuple<RamDomain,3>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_40_struct_type_field_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_375_static_subobjects_alloc_subregion->contains(Tuple<RamDomain,6>{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(RamSigned(69)) + symTable.decode(symTable.encode(std::to_string(env2[1]))))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(70)) + symTable.decode(symTable.encode(std::to_string(env2[1]))))),ramBitCast(env1[3]),ramBitCast(symTable.encode(symTable.decode(env1[4]) + symTable.decode(symTable.encode(symTable.decode(RamSigned(70)) + symTable.decode(symTable.encode(std::to_string(env2[1]))))))),ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)))) {
Tuple<RamDomain,6> tuple{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(RamSigned(69)) + symTable.decode(symTable.encode(std::to_string(env2[1]))))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(70)) + symTable.decode(symTable.encode(std::to_string(env2[1]))))),ramBitCast(env1[3]),ramBitCast(symTable.encode(symTable.decode(env1[4]) + symTable.decode(symTable.encode(symTable.decode(RamSigned(70)) + symTable.decode(symTable.encode(std::to_string(env2[1]))))))),ramBitCast(env2[2])}};
rel_377_new_static_subobjects_alloc_subregion->insert(tuple,READ_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt));
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(static_subobjects._alloc_subregion(cat(?alloc,".?/",to_string(?field)),?alloc,cat("/",to_string(?field)),?root,cat(?path,cat("/",to_string(?field))),?fieldType) :- 
   static_allocation_type(?alloc,?type),
   static_subobjects._alloc_subregion(?alloc,_,_,?root,?path,_),
   struct_type(?type),
   struct_type_field(?type,?field,?fieldType).
in file allocations-subobjects.dl [332:3-342:55])_");
if(!(rel_52_struct_type->empty()) && !(rel_376_delta_static_subobjects_alloc_subregion->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_40_struct_type_field->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_52_struct_type_op_ctxt,rel_52_struct_type->createContext());
CREATE_OP_CONTEXT(rel_40_struct_type_field_op_ctxt,rel_40_struct_type_field->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt,rel_377_new_static_subobjects_alloc_subregion->createContext());
for(const auto& env0 : *rel_321_static_allocation_type) {
if( rel_52_struct_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_52_struct_type_op_ctxt))) {
auto range = rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_40_struct_type_field->lowerUpperRange_100(Tuple<RamDomain,3>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_40_struct_type_field_op_ctxt));
for(const auto& env2 : range) {
if( !(rel_375_static_subobjects_alloc_subregion->contains(Tuple<RamDomain,6>{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(RamSigned(69)) + symTable.decode(symTable.encode(std::to_string(env2[1]))))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(70)) + symTable.decode(symTable.encode(std::to_string(env2[1]))))),ramBitCast(env1[3]),ramBitCast(symTable.encode(symTable.decode(env1[4]) + symTable.decode(symTable.encode(symTable.decode(RamSigned(70)) + symTable.decode(symTable.encode(std::to_string(env2[1]))))))),ramBitCast(env2[2])}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)))) {
Tuple<RamDomain,6> tuple{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(RamSigned(69)) + symTable.decode(symTable.encode(std::to_string(env2[1]))))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(70)) + symTable.decode(symTable.encode(std::to_string(env2[1]))))),ramBitCast(env1[3]),ramBitCast(symTable.encode(symTable.decode(env1[4]) + symTable.decode(symTable.encode(symTable.decode(RamSigned(70)) + symTable.decode(symTable.encode(std::to_string(env2[1]))))))),ramBitCast(env2[2])}};
rel_377_new_static_subobjects_alloc_subregion->insert(tuple,READ_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(static_subobjects._alloc_subregion(cat(?alloc,?component),?alloc,?component,?alloc,as(?component, Path),?type) :- 
   static_allocation_type(?alloc,?type),
   static_subobjects._non_func_basic_allocation(?alloc),
   path_component_at_any_index(?component),
   path_component(?component).
in file allocations-subobjects.dl [354:3-362:39])_");
if(!(rel_378_static_subobjects_non_func_basic_allocation->empty()) && !(rel_222_path_component_at_any_index->empty()) && !(rel_322_delta_static_allocation_type->empty()) && !(rel_330_path_component->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_222_path_component_at_any_index_op_ctxt,rel_222_path_component_at_any_index->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_330_path_component_op_ctxt,rel_330_path_component->createContext());
CREATE_OP_CONTEXT(rel_331_delta_path_component_op_ctxt,rel_331_delta_path_component->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt,rel_377_new_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_378_static_subobjects_non_func_basic_allocation_op_ctxt,rel_378_static_subobjects_non_func_basic_allocation->createContext());
CREATE_OP_CONTEXT(rel_379_delta_static_subobjects_non_func_basic_allocation_op_ctxt,rel_379_delta_static_subobjects_non_func_basic_allocation->createContext());
for(const auto& env0 : *rel_322_delta_static_allocation_type) {
if( rel_378_static_subobjects_non_func_basic_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_378_static_subobjects_non_func_basic_allocation_op_ctxt)) && !(rel_379_delta_static_subobjects_non_func_basic_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_379_delta_static_subobjects_non_func_basic_allocation_op_ctxt)))) {
for(const auto& env1 : *rel_222_path_component_at_any_index) {
if( rel_330_path_component->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_330_path_component_op_ctxt)) && !(rel_331_delta_path_component->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_331_delta_path_component_op_ctxt))) && !(rel_375_static_subobjects_alloc_subregion->contains(Tuple<RamDomain,6>{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(env1[0]))),ramBitCast(env0[0]),ramBitCast(env1[0]),ramBitCast(env0[0]),ramBitCast(env1[0]),ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)))) {
Tuple<RamDomain,6> tuple{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(env1[0]))),ramBitCast(env0[0]),ramBitCast(env1[0]),ramBitCast(env0[0]),ramBitCast(env1[0]),ramBitCast(env0[1])}};
rel_377_new_static_subobjects_alloc_subregion->insert(tuple,READ_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(static_subobjects._alloc_subregion(cat(?alloc,?component),?alloc,?component,?alloc,as(?component, Path),?type) :- 
   static_allocation_type(?alloc,?type),
   static_subobjects._non_func_basic_allocation(?alloc),
   path_component_at_any_index(?component),
   path_component(?component).
in file allocations-subobjects.dl [354:3-362:39])_");
if(!(rel_379_delta_static_subobjects_non_func_basic_allocation->empty()) && !(rel_222_path_component_at_any_index->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_330_path_component->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_222_path_component_at_any_index_op_ctxt,rel_222_path_component_at_any_index->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_330_path_component_op_ctxt,rel_330_path_component->createContext());
CREATE_OP_CONTEXT(rel_331_delta_path_component_op_ctxt,rel_331_delta_path_component->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt,rel_377_new_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_379_delta_static_subobjects_non_func_basic_allocation_op_ctxt,rel_379_delta_static_subobjects_non_func_basic_allocation->createContext());
for(const auto& env0 : *rel_321_static_allocation_type) {
if( rel_379_delta_static_subobjects_non_func_basic_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_379_delta_static_subobjects_non_func_basic_allocation_op_ctxt))) {
for(const auto& env1 : *rel_222_path_component_at_any_index) {
if( rel_330_path_component->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_330_path_component_op_ctxt)) && !(rel_331_delta_path_component->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_331_delta_path_component_op_ctxt))) && !(rel_375_static_subobjects_alloc_subregion->contains(Tuple<RamDomain,6>{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(env1[0]))),ramBitCast(env0[0]),ramBitCast(env1[0]),ramBitCast(env0[0]),ramBitCast(env1[0]),ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)))) {
Tuple<RamDomain,6> tuple{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(env1[0]))),ramBitCast(env0[0]),ramBitCast(env1[0]),ramBitCast(env0[0]),ramBitCast(env1[0]),ramBitCast(env0[1])}};
rel_377_new_static_subobjects_alloc_subregion->insert(tuple,READ_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(static_subobjects._alloc_subregion(cat(?alloc,?component),?alloc,?component,?alloc,as(?component, Path),?type) :- 
   static_allocation_type(?alloc,?type),
   static_subobjects._non_func_basic_allocation(?alloc),
   path_component_at_any_index(?component),
   path_component(?component).
in file allocations-subobjects.dl [354:3-362:39])_");
if(!(rel_378_static_subobjects_non_func_basic_allocation->empty()) && !(rel_222_path_component_at_any_index->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_331_delta_path_component->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_222_path_component_at_any_index_op_ctxt,rel_222_path_component_at_any_index->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_331_delta_path_component_op_ctxt,rel_331_delta_path_component->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt,rel_377_new_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_378_static_subobjects_non_func_basic_allocation_op_ctxt,rel_378_static_subobjects_non_func_basic_allocation->createContext());
for(const auto& env0 : *rel_321_static_allocation_type) {
if( rel_378_static_subobjects_non_func_basic_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_378_static_subobjects_non_func_basic_allocation_op_ctxt))) {
for(const auto& env1 : *rel_222_path_component_at_any_index) {
if( rel_331_delta_path_component->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_331_delta_path_component_op_ctxt)) && !(rel_375_static_subobjects_alloc_subregion->contains(Tuple<RamDomain,6>{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(env1[0]))),ramBitCast(env0[0]),ramBitCast(env1[0]),ramBitCast(env0[0]),ramBitCast(env1[0]),ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)))) {
Tuple<RamDomain,6> tuple{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(env1[0]))),ramBitCast(env0[0]),ramBitCast(env1[0]),ramBitCast(env0[0]),ramBitCast(env1[0]),ramBitCast(env0[1])}};
rel_377_new_static_subobjects_alloc_subregion->insert(tuple,READ_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(static_subobjects._alloc_subregion(cat(?alloc,?component),?alloc,?component,?root,cat(?path,?component),?elementType) :- 
   static_allocation_type(?alloc,?type),
   array_type_has_component(?type,?elementType),
   static_subobjects._alloc_subregion(?alloc,_,_,?root,?path,_),
   path_component_at_any_index(?component).
in file allocations-subobjects.dl [367:3-375:41])_");
if(!(rel_42_array_type_has_component->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_322_delta_static_allocation_type->empty()) && !(rel_222_path_component_at_any_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_42_array_type_has_component_op_ctxt,rel_42_array_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_222_path_component_at_any_index_op_ctxt,rel_222_path_component_at_any_index->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt,rel_377_new_static_subobjects_alloc_subregion->createContext());
for(const auto& env0 : *rel_322_delta_static_allocation_type) {
auto range = rel_42_array_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_42_array_type_has_component_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_375_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt));
for(const auto& env2 : range) {
if( !(!rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_100110(Tuple<RamDomain,6>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env2[3]), ramBitCast(env2[4]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env2[3]), ramBitCast(env2[4]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt)).empty())) {
for(const auto& env3 : *rel_222_path_component_at_any_index) {
if( !(rel_375_static_subobjects_alloc_subregion->contains(Tuple<RamDomain,6>{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(env3[0]))),ramBitCast(env0[0]),ramBitCast(env3[0]),ramBitCast(env2[3]),ramBitCast(symTable.encode(symTable.decode(env2[4]) + symTable.decode(env3[0]))),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)))) {
Tuple<RamDomain,6> tuple{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(env3[0]))),ramBitCast(env0[0]),ramBitCast(env3[0]),ramBitCast(env2[3]),ramBitCast(symTable.encode(symTable.decode(env2[4]) + symTable.decode(env3[0]))),ramBitCast(env1[1])}};
rel_377_new_static_subobjects_alloc_subregion->insert(tuple,READ_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt));
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(static_subobjects._alloc_subregion(cat(?alloc,?component),?alloc,?component,?root,cat(?path,?component),?elementType) :- 
   static_allocation_type(?alloc,?type),
   array_type_has_component(?type,?elementType),
   static_subobjects._alloc_subregion(?alloc,_,_,?root,?path,_),
   path_component_at_any_index(?component).
in file allocations-subobjects.dl [367:3-375:41])_");
if(!(rel_42_array_type_has_component->empty()) && !(rel_376_delta_static_subobjects_alloc_subregion->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_222_path_component_at_any_index->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_42_array_type_has_component_op_ctxt,rel_42_array_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_222_path_component_at_any_index_op_ctxt,rel_222_path_component_at_any_index->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt,rel_377_new_static_subobjects_alloc_subregion->createContext());
for(const auto& env0 : *rel_321_static_allocation_type) {
auto range = rel_42_array_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_42_array_type_has_component_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt));
for(const auto& env2 : range) {
for(const auto& env3 : *rel_222_path_component_at_any_index) {
if( !(rel_375_static_subobjects_alloc_subregion->contains(Tuple<RamDomain,6>{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(env3[0]))),ramBitCast(env0[0]),ramBitCast(env3[0]),ramBitCast(env2[3]),ramBitCast(symTable.encode(symTable.decode(env2[4]) + symTable.decode(env3[0]))),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)))) {
Tuple<RamDomain,6> tuple{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(env3[0]))),ramBitCast(env0[0]),ramBitCast(env3[0]),ramBitCast(env2[3]),ramBitCast(symTable.encode(symTable.decode(env2[4]) + symTable.decode(env3[0]))),ramBitCast(env1[1])}};
rel_377_new_static_subobjects_alloc_subregion->insert(tuple,READ_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(static_subobjects._alloc_subregion(cat(?alloc,"[",to_string(?index),"]"),?alloc,cat("[",to_string(?index),"]"),?root,cat(?path,cat("[",to_string(?index),"]")),?elementType) :- 
   static_subobjects._alloc_subregion(?alloc,_,_,?root,?path,_),
   static_allocation_type(?alloc,?type),
   array_type_has_component(?type,?elementType),
   static_subobjects.index_in_bounds(?alloc,?index).
in file allocations-subobjects.dl [440:3-452:51])_");
if(!(rel_321_static_allocation_type->empty()) && !(rel_42_array_type_has_component->empty()) && !(rel_376_delta_static_subobjects_alloc_subregion->empty()) && !(rel_387_static_subobjects_index_in_bounds->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_42_array_type_has_component_op_ctxt,rel_42_array_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt,rel_377_new_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_387_static_subobjects_index_in_bounds_op_ctxt,rel_387_static_subobjects_index_in_bounds->createContext());
CREATE_OP_CONTEXT(rel_388_delta_static_subobjects_index_in_bounds_op_ctxt,rel_388_delta_static_subobjects_index_in_bounds->createContext());
for(const auto& env0 : *rel_376_delta_static_subobjects_alloc_subregion) {
auto range = rel_321_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_322_delta_static_allocation_type->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env1[1])}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt)))) {
auto range = rel_42_array_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_42_array_type_has_component_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_387_static_subobjects_index_in_bounds->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_387_static_subobjects_index_in_bounds_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_375_static_subobjects_alloc_subregion->contains(Tuple<RamDomain,6>{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env3[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env3[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[3]),ramBitCast(symTable.encode(symTable.decode(env0[4]) + symTable.decode(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env3[1]))) + symTable.decode(RamSigned(64)))))),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt))) && !(rel_388_delta_static_subobjects_index_in_bounds->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_388_delta_static_subobjects_index_in_bounds_op_ctxt)))) {
Tuple<RamDomain,6> tuple{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env3[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env3[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[3]),ramBitCast(symTable.encode(symTable.decode(env0[4]) + symTable.decode(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env3[1]))) + symTable.decode(RamSigned(64)))))),ramBitCast(env2[1])}};
rel_377_new_static_subobjects_alloc_subregion->insert(tuple,READ_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt));
}
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(static_subobjects._alloc_subregion(cat(?alloc,"[",to_string(?index),"]"),?alloc,cat("[",to_string(?index),"]"),?root,cat(?path,cat("[",to_string(?index),"]")),?elementType) :- 
   static_subobjects._alloc_subregion(?alloc,_,_,?root,?path,_),
   static_allocation_type(?alloc,?type),
   array_type_has_component(?type,?elementType),
   static_subobjects.index_in_bounds(?alloc,?index).
in file allocations-subobjects.dl [440:3-452:51])_");
if(!(rel_322_delta_static_allocation_type->empty()) && !(rel_42_array_type_has_component->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_387_static_subobjects_index_in_bounds->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_42_array_type_has_component_op_ctxt,rel_42_array_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt,rel_377_new_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_387_static_subobjects_index_in_bounds_op_ctxt,rel_387_static_subobjects_index_in_bounds->createContext());
CREATE_OP_CONTEXT(rel_388_delta_static_subobjects_index_in_bounds_op_ctxt,rel_388_delta_static_subobjects_index_in_bounds->createContext());
for(const auto& env0 : *rel_375_static_subobjects_alloc_subregion) {
auto range = rel_322_delta_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_42_array_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_42_array_type_has_component_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_387_static_subobjects_index_in_bounds->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_387_static_subobjects_index_in_bounds_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_375_static_subobjects_alloc_subregion->contains(Tuple<RamDomain,6>{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env3[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env3[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[3]),ramBitCast(symTable.encode(symTable.decode(env0[4]) + symTable.decode(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env3[1]))) + symTable.decode(RamSigned(64)))))),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt))) && !(rel_388_delta_static_subobjects_index_in_bounds->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(env3[1])}},READ_OP_CONTEXT(rel_388_delta_static_subobjects_index_in_bounds_op_ctxt)))) {
Tuple<RamDomain,6> tuple{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env3[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env3[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[3]),ramBitCast(symTable.encode(symTable.decode(env0[4]) + symTable.decode(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env3[1]))) + symTable.decode(RamSigned(64)))))),ramBitCast(env2[1])}};
rel_377_new_static_subobjects_alloc_subregion->insert(tuple,READ_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(static_subobjects._alloc_subregion(cat(?alloc,"[",to_string(?index),"]"),?alloc,cat("[",to_string(?index),"]"),?root,cat(?path,cat("[",to_string(?index),"]")),?elementType) :- 
   static_subobjects._alloc_subregion(?alloc,_,_,?root,?path,_),
   static_allocation_type(?alloc,?type),
   array_type_has_component(?type,?elementType),
   static_subobjects.index_in_bounds(?alloc,?index).
in file allocations-subobjects.dl [440:3-452:51])_");
if(!(rel_321_static_allocation_type->empty()) && !(rel_42_array_type_has_component->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_388_delta_static_subobjects_index_in_bounds->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_42_array_type_has_component_op_ctxt,rel_42_array_type_has_component->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt,rel_377_new_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_388_delta_static_subobjects_index_in_bounds_op_ctxt,rel_388_delta_static_subobjects_index_in_bounds->createContext());
for(const auto& env0 : *rel_375_static_subobjects_alloc_subregion) {
auto range = rel_321_static_allocation_type->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt));
for(const auto& env1 : range) {
auto range = rel_42_array_type_has_component->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env1[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_42_array_type_has_component_op_ctxt));
for(const auto& env2 : range) {
auto range = rel_388_delta_static_subobjects_index_in_bounds->lowerUpperRange_10(Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,2>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_388_delta_static_subobjects_index_in_bounds_op_ctxt));
for(const auto& env3 : range) {
if( !(rel_375_static_subobjects_alloc_subregion->contains(Tuple<RamDomain,6>{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env3[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env3[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[3]),ramBitCast(symTable.encode(symTable.decode(env0[4]) + symTable.decode(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env3[1]))) + symTable.decode(RamSigned(64)))))),ramBitCast(env2[1])}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)))) {
Tuple<RamDomain,6> tuple{{ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env3[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[0]),ramBitCast(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env3[1]))) + symTable.decode(RamSigned(64)))),ramBitCast(env0[3]),ramBitCast(symTable.encode(symTable.decode(env0[4]) + symTable.decode(symTable.encode(symTable.decode(RamSigned(62)) + symTable.decode(symTable.encode(std::to_string(env3[1]))) + symTable.decode(RamSigned(64)))))),ramBitCast(env2[1])}};
rel_377_new_static_subobjects_alloc_subregion->insert(tuple,READ_OP_CONTEXT(rel_377_new_static_subobjects_alloc_subregion_op_ctxt));
}
}
}
}
}
}
();}
signalHandler->setMsg(R"_(static_subobjects._non_func_basic_allocation(?alloc) :- 
   basic_allocation(?alloc),
   !global_allocation_by_func(_,?alloc).
in file allocations-subobjects.dl [317:3-319:44])_");
if(!(rel_301_delta_basic_allocation->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_154_global_allocation_by_func_op_ctxt,rel_154_global_allocation_by_func->createContext());
CREATE_OP_CONTEXT(rel_301_delta_basic_allocation_op_ctxt,rel_301_delta_basic_allocation->createContext());
CREATE_OP_CONTEXT(rel_378_static_subobjects_non_func_basic_allocation_op_ctxt,rel_378_static_subobjects_non_func_basic_allocation->createContext());
CREATE_OP_CONTEXT(rel_380_new_static_subobjects_non_func_basic_allocation_op_ctxt,rel_380_new_static_subobjects_non_func_basic_allocation->createContext());
for(const auto& env0 : *rel_301_delta_basic_allocation) {
if( !(rel_378_static_subobjects_non_func_basic_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_378_static_subobjects_non_func_basic_allocation_op_ctxt))) && !(!rel_154_global_allocation_by_func->lowerUpperRange_01(Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast(env0[0])}},Tuple<RamDomain,2>{{ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_154_global_allocation_by_func_op_ctxt)).empty())) {
Tuple<RamDomain,1> tuple{{ramBitCast(env0[0])}};
rel_380_new_static_subobjects_non_func_basic_allocation->insert(tuple,READ_OP_CONTEXT(rel_380_new_static_subobjects_non_func_basic_allocation_op_ctxt));
}
}
}
();}
signalHandler->setMsg(R"_(static_subobjects.alloc_subregion_at_field(?alloc,?field,cat(?alloc,".?/",to_string(?field))) :- 
   static_allocation_type(?alloc,?type),
   static_subobjects._alloc_subregion(?alloc,_,_,_,_,_),
   struct_type(?type),
   struct_type_field(?type,?field,_).
in file allocations-subobjects.dl [332:3-342:55])_");
if(!(rel_52_struct_type->empty()) && !(rel_375_static_subobjects_alloc_subregion->empty()) && !(rel_322_delta_static_allocation_type->empty()) && !(rel_40_struct_type_field->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_52_struct_type_op_ctxt,rel_52_struct_type->createContext());
CREATE_OP_CONTEXT(rel_40_struct_type_field_op_ctxt,rel_40_struct_type_field->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt,rel_375_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_381_static_subobjects_alloc_subregion_at_field->createContext());
CREATE_OP_CONTEXT(rel_383_new_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_383_new_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_322_delta_static_allocation_type) {
if( !rel_375_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_375_static_subobjects_alloc_subregion_op_ctxt)).empty() && rel_52_struct_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_52_struct_type_op_ctxt)) && !(!rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt)).empty())) {
auto range = rel_40_struct_type_field->lowerUpperRange_100(Tuple<RamDomain,3>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_40_struct_type_field_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_381_static_subobjects_alloc_subregion_at_field->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env1[1]),ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(RamSigned(69)) + symTable.decode(symTable.encode(std::to_string(env1[1])))))}},READ_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env1[1]),ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(RamSigned(69)) + symTable.decode(symTable.encode(std::to_string(env1[1])))))}};
rel_383_new_static_subobjects_alloc_subregion_at_field->insert(tuple,READ_OP_CONTEXT(rel_383_new_static_subobjects_alloc_subregion_at_field_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(static_subobjects.alloc_subregion_at_field(?alloc,?field,cat(?alloc,".?/",to_string(?field))) :- 
   static_allocation_type(?alloc,?type),
   static_subobjects._alloc_subregion(?alloc,_,_,_,_,_),
   struct_type(?type),
   struct_type_field(?type,?field,_).
in file allocations-subobjects.dl [332:3-342:55])_");
if(!(rel_52_struct_type->empty()) && !(rel_376_delta_static_subobjects_alloc_subregion->empty()) && !(rel_321_static_allocation_type->empty()) && !(rel_40_struct_type_field->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_52_struct_type_op_ctxt,rel_52_struct_type->createContext());
CREATE_OP_CONTEXT(rel_40_struct_type_field_op_ctxt,rel_40_struct_type_field->createContext());
CREATE_OP_CONTEXT(rel_321_static_allocation_type_op_ctxt,rel_321_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt,rel_376_delta_static_subobjects_alloc_subregion->createContext());
CREATE_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_381_static_subobjects_alloc_subregion_at_field->createContext());
CREATE_OP_CONTEXT(rel_383_new_static_subobjects_alloc_subregion_at_field_op_ctxt,rel_383_new_static_subobjects_alloc_subregion_at_field->createContext());
for(const auto& env0 : *rel_321_static_allocation_type) {
if( !rel_376_delta_static_subobjects_alloc_subregion->lowerUpperRange_100000(Tuple<RamDomain,6>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,6>{{ramBitCast(env0[0]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_376_delta_static_subobjects_alloc_subregion_op_ctxt)).empty() && rel_52_struct_type->contains(Tuple<RamDomain,1>{{ramBitCast(env0[1])}},READ_OP_CONTEXT(rel_52_struct_type_op_ctxt))) {
auto range = rel_40_struct_type_field->lowerUpperRange_100(Tuple<RamDomain,3>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MIN_RAM_SIGNED), ramBitCast<RamDomain>(MIN_RAM_SIGNED)}},Tuple<RamDomain,3>{{ramBitCast(env0[1]), ramBitCast<RamDomain>(MAX_RAM_SIGNED), ramBitCast<RamDomain>(MAX_RAM_SIGNED)}},READ_OP_CONTEXT(rel_40_struct_type_field_op_ctxt));
for(const auto& env1 : range) {
if( !(rel_381_static_subobjects_alloc_subregion_at_field->contains(Tuple<RamDomain,3>{{ramBitCast(env0[0]),ramBitCast(env1[1]),ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(RamSigned(69)) + symTable.decode(symTable.encode(std::to_string(env1[1])))))}},READ_OP_CONTEXT(rel_381_static_subobjects_alloc_subregion_at_field_op_ctxt)))) {
Tuple<RamDomain,3> tuple{{ramBitCast(env0[0]),ramBitCast(env1[1]),ramBitCast(symTable.encode(symTable.decode(env0[0]) + symTable.decode(RamSigned(69)) + symTable.decode(symTable.encode(std::to_string(env1[1])))))}};
rel_383_new_static_subobjects_alloc_subregion_at_field->insert(tuple,READ_OP_CONTEXT(rel_383_new_static_subobjects_alloc_subregion_at_field_op_ctxt));
}
}
}
}
}
();}
signalHandler->setMsg(R"_(static_subobjects.alloc_subregion_at_any_array_index(?alloc,cat(?alloc,?component)) :- 
   static_allocation_type(?alloc,_),
   static_subobjects._non_func_basic_allocation(?alloc),
   path_component_at_any_index(?component),
   path_component(?component).
in file allocations-subobjects.dl [354:3-362:39])_");
if(!(rel_378_static_subobjects_non_func_basic_allocation->empty()) && !(rel_222_path_component_at_any_index->empty()) && !(rel_322_delta_static_allocation_type->empty()) && !(rel_330_path_component->empty())) {
[&](){
CREATE_OP_CONTEXT(rel_222_path_component_at_any_index_op_ctxt,rel_222_path_component_at_any_index->createContext());
CREATE_OP_CONTEXT(rel_322_delta_static_allocation_type_op_ctxt,rel_322_delta_static_allocation_type->createContext());
CREATE_OP_CONTEXT(rel_330_path_component_op_ctxt,rel_330_path_component->createContext());
CREATE_OP_CONTEXT(rel_331_delta_path_component_op_ctxt,rel_331_delta_path_component->createContext());
CREATE_OP_CONTEXT(rel_378_static_subobjects_non_func_basic_allocation_op_ctxt,rel_378_static_subobjects_non_func_basic_allocation->createContext());
CREATE_OP_CONTEXT(rel_379_delta_static_subobjects_non_func_basic_allocation_op_ctxt,rel_379_delta_static_subobjects_non_func_basic_allocation->createContext());
CREATE_OP_CONTEXT(rel_384_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_384_static_subobjects_alloc_subregion_at_any_array_index->createContext());
CREATE_OP_CONTEXT(rel_386_new_static_subobjects_alloc_subregion_at_any_array_index_op_ctxt,rel_386_new_static_subobjects_alloc_subregion_at_any_array_index->createContext());
for(const auto& env0 : *rel_322_delta_static_allocation_type) {
if( rel_378_static_subobjects_non_func_basic_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_378_static_subobjects_non_func_basic_allocation_op_ctxt)) && !(rel_379_delta_static_subobjects_non_func_basic_allocation->contains(Tuple<RamDomain,1>{{ramBitCast(env0[0])}},READ_OP_CONTEXT(rel_379_delta_static_subobjects_non_func_basic_allocation_op_ctxt)))) {
for(const auto& env1 : *rel_222_path_component_at_any_index) {
if( rel_330_path_component->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_330_path_component_op_ctxt)) && !(rel_331_delta_path_component->contains(Tuple<RamDomain,1>{{ramBitCast(env1[0])}},READ_OP_CONTEXT(rel_331_delta_path_component_op_ctxt))) && !(rel_384_static_subobjects_alloc_subregion_at_any_array_index->contains(Tuple<RamDomain,2>{{ramBitCast(env0[0]),ramBitCast(symTable.encode(symT