<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="486.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="469" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="469" > </text>
<g id="frames">
<g >
<title>DSExample (735,415,726,104 samples, 100.00%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >DSExample</text>
</g>
<g >
<title>__mod_lruvec_page_state (364,568,270 samples, 0.05%)</title><rect x="1162.0" y="117" width="0.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1165.02" y="127.5" ></text>
</g>
<g >
<title>rmqueue_bulk (395,881,955 samples, 0.05%)</title><rect x="1055.3" y="165" width="0.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1058.35" y="175.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (99,668,328 samples, 0.01%)</title><rect x="34.3" y="389" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="37.29" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (66,439,211 samples, 0.01%)</title><rect x="238.4" y="293" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="241.35" y="303.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (66,428,163 samples, 0.01%)</title><rect x="1166.1" y="85" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1169.06" y="95.5" ></text>
</g>
<g >
<title>alloc_pages (99,658,123 samples, 0.01%)</title><rect x="1035.4" y="197" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1038.42" y="207.5" ></text>
</g>
<g >
<title>__cgroup_throttle_swaprate (66,407,186 samples, 0.01%)</title><rect x="1024.7" y="245" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1027.66" y="255.5" ></text>
</g>
<g >
<title>get_page_from_freelist (66,441,405 samples, 0.01%)</title><rect x="1035.5" y="165" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1038.47" y="175.5" ></text>
</g>
<g >
<title>rmqueue (795,382,587 samples, 0.11%)</title><rect x="1054.7" y="181" width="1.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1057.71" y="191.5" ></text>
</g>
<g >
<title>pte_alloc_one (132,884,437 samples, 0.02%)</title><rect x="1035.4" y="213" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1038.42" y="223.5" ></text>
</g>
<g >
<title>__count_memcg_events (265,664,665 samples, 0.04%)</title><rect x="1023.4" y="277" width="0.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1026.38" y="287.5" ></text>
</g>
<g >
<title>BinaryNode::getLeftChild (6,310,233,279 samples, 0.86%)</title><rect x="978.7" y="341" width="10.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="981.67" y="351.5" ></text>
</g>
<g >
<title>read (88,172,642 samples, 0.01%)</title><rect x="1160.9" y="389" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1163.92" y="399.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::operator (1,893,082,139 samples, 0.26%)</title><rect x="1130.8" y="341" width="3.0" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1133.78" y="351.5" ></text>
</g>
<g >
<title>down_read_trylock (66,448,748 samples, 0.01%)</title><rect x="1151.7" y="325" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1154.67" y="335.5" ></text>
</g>
<g >
<title>sugov_update_single_freq (66,443,120 samples, 0.01%)</title><rect x="1063.9" y="181" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1066.87" y="191.5" ></text>
</g>
<g >
<title>BinaryNode::getRightChild (10,260,788,187 samples, 1.40%)</title><rect x="988.8" y="341" width="16.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="991.80" y="351.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (66,421,632 samples, 0.01%)</title><rect x="1063.2" y="277" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1066.17" y="287.5" ></text>
</g>
<g >
<title>alloc_pages_vma (12,880,755,503 samples, 1.75%)</title><rect x="1035.7" y="229" width="20.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1038.69" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (166,125,017 samples, 0.02%)</title><rect x="1063.8" y="293" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1066.76" y="303.5" ></text>
</g>
<g >
<title>irqentry_exit (132,830,709 samples, 0.02%)</title><rect x="1063.2" y="309" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1066.17" y="319.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (165,994,077 samples, 0.02%)</title><rect x="1058.1" y="133" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1061.11" y="143.5" ></text>
</g>
<g >
<title>should_fail_alloc_page (66,381,109 samples, 0.01%)</title><rect x="1056.2" y="213" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1059.25" y="223.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (3,254,224,963 samples, 0.44%)</title><rect x="1161.1" y="357" width="5.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1164.11" y="367.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (711,728,231 samples, 0.10%)</title><rect x="1164.9" y="53" width="1.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1167.92" y="63.5" ></text>
</g>
<g >
<title>operator new (1,188,625,280 samples, 0.16%)</title><rect x="1067.9" y="357" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1070.92" y="367.5" ></text>
</g>
<g >
<title>handle_softirqs (66,449,287 samples, 0.01%)</title><rect x="1064.0" y="293" width="0.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1067.03" y="303.5" ></text>
</g>
<g >
<title>BinaryNode::setRightChild (3,487,809,425 samples, 0.47%)</title><rect x="38.5" y="373" width="5.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="41.55" y="383.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (132,811,360 samples, 0.02%)</title><rect x="1152.4" y="245" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1155.41" y="255.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (31,741,625,738 samples, 4.32%)</title><rect x="1012.8" y="341" width="51.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1015.83" y="351.5" >asm_e..</text>
</g>
<g >
<title>pmd_page_vaddr (66,405,796 samples, 0.01%)</title><rect x="1062.2" y="245" width="0.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1065.16" y="255.5" ></text>
</g>
<g >
<title>__alloc_pages (12,482,157,090 samples, 1.70%)</title><rect x="1036.2" y="213" width="20.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1039.17" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (232,574,304 samples, 0.03%)</title><rect x="1063.8" y="341" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1066.76" y="351.5" ></text>
</g>
<g >
<title>down_read_trylock (1,826,799,765 samples, 0.25%)</title><rect x="1019.4" y="293" width="3.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1022.44" y="303.5" ></text>
</g>
<g >
<title>[unknown] (103,392,638 samples, 0.01%)</title><rect x="1153.9" y="389" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1156.90" y="399.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (1,958,710,321 samples, 0.27%)</title><rect x="1056.5" y="229" width="3.2" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1059.51" y="239.5" ></text>
</g>
<g >
<title>BinaryNode::getData (114,363,451,824 samples, 15.55%)</title><rect x="55.0" y="357" width="183.5" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="58.01" y="367.5" >BinaryNode::getData</text>
</g>
<g >
<title>cpufreq_quick_get (88,172,642 samples, 0.01%)</title><rect x="1160.9" y="213" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1163.92" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (99,664,865 samples, 0.01%)</title><rect x="238.4" y="325" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="241.35" y="335.5" ></text>
</g>
<g >
<title>do_anonymous_page (23,108,185,904 samples, 3.14%)</title><rect x="1025.0" y="245" width="37.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1028.03" y="255.5" >do_..</text>
</g>
<g >
<title>error_entry (1,660,349,935 samples, 0.23%)</title><rect x="1064.2" y="341" width="2.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1067.19" y="351.5" ></text>
</g>
<g >
<title>clear_page_erms (10,093,786,697 samples, 1.37%)</title><rect x="1038.5" y="181" width="16.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1041.46" y="191.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,062,150,571 samples, 0.14%)</title><rect x="1151.9" y="309" width="1.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1154.88" y="319.5" ></text>
</g>
<g >
<title>charge_memcg (199,059,509 samples, 0.03%)</title><rect x="1152.1" y="245" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1155.09" y="255.5" ></text>
</g>
<g >
<title>ksys_read (88,172,642 samples, 0.01%)</title><rect x="1160.9" y="309" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1163.92" y="319.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (66,370,436 samples, 0.01%)</title><rect x="1058.9" y="181" width="0.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1061.86" y="191.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (66,409,077 samples, 0.01%)</title><rect x="1063.3" y="277" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1066.28" y="287.5" ></text>
</g>
<g >
<title>do_group_exit (3,254,224,963 samples, 0.44%)</title><rect x="1161.1" y="293" width="5.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1164.11" y="303.5" ></text>
</g>
<g >
<title>get_page_from_freelist (498,151,237 samples, 0.07%)</title><rect x="1152.6" y="229" width="0.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1155.63" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock (66,448,486 samples, 0.01%)</title><rect x="1055.2" y="165" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1058.24" y="175.5" ></text>
</g>
<g >
<title>task_tick_fair (66,443,120 samples, 0.01%)</title><rect x="1063.9" y="197" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1066.87" y="207.5" ></text>
</g>
<g >
<title>up_read (232,403,186 samples, 0.03%)</title><rect x="1063.4" y="309" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1066.39" y="319.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1,295,039,757 samples, 0.18%)</title><rect x="1059.7" y="229" width="2.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1062.66" y="239.5" ></text>
</g>
<g >
<title>mmput (3,254,224,963 samples, 0.44%)</title><rect x="1161.1" y="245" width="5.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1164.11" y="255.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (1,129,049,282 samples, 0.15%)</title><rect x="1059.8" y="213" width="1.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1062.82" y="223.5" ></text>
</g>
<g >
<title>exc_page_fault (99,668,328 samples, 0.01%)</title><rect x="34.3" y="373" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="37.29" y="383.5" ></text>
</g>
<g >
<title>page_mapping (132,880,855 samples, 0.02%)</title><rect x="1058.4" y="165" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1061.43" y="175.5" ></text>
</g>
<g >
<title>seq_read_iter (88,172,642 samples, 0.01%)</title><rect x="1160.9" y="245" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1163.92" y="255.5" ></text>
</g>
<g >
<title>BinaryNode::setLeftChild (1,062,964,666 samples, 0.14%)</title><rect x="370.8" y="357" width="1.8" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="373.85" y="367.5" ></text>
</g>
<g >
<title>exit_mmap (3,254,224,963 samples, 0.44%)</title><rect x="1161.1" y="229" width="5.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1164.11" y="239.5" ></text>
</g>
<g >
<title>[libjemalloc.so.2] (15,236,223,772 samples, 2.07%)</title><rect x="10.0" y="405" width="24.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >[..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (232,574,304 samples, 0.03%)</title><rect x="1063.8" y="325" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1066.76" y="335.5" ></text>
</g>
<g >
<title>pmd_page_vaddr (99,681,757 samples, 0.01%)</title><rect x="1061.9" y="229" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1064.90" y="239.5" ></text>
</g>
<g >
<title>kernel_init_free_pages.part.0 (66,444,737 samples, 0.01%)</title><rect x="1056.0" y="197" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1059.04" y="207.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (66,396,213 samples, 0.01%)</title><rect x="1162.3" y="69" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1165.28" y="79.5" ></text>
</g>
<g >
<title>exc_page_fault (1,261,357,869 samples, 0.17%)</title><rect x="1151.6" y="357" width="2.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1154.61" y="367.5" ></text>
</g>
<g >
<title>__get_vma_policy (66,426,122 samples, 0.01%)</title><rect x="1026.5" y="229" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1029.47" y="239.5" ></text>
</g>
<g >
<title>numa_BST_init (676,233,696,292 samples, 91.95%)</title><rect x="48.8" y="373" width="1085.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="51.78" y="383.5" >numa_BST_init</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (66,404,711 samples, 0.01%)</title><rect x="370.7" y="341" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="373.74" y="351.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (3,254,224,963 samples, 0.44%)</title><rect x="1161.1" y="373" width="5.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1164.11" y="383.5" ></text>
</g>
<g >
<title>__pte_alloc (132,884,437 samples, 0.02%)</title><rect x="1035.4" y="229" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1038.42" y="239.5" ></text>
</g>
<g >
<title>pud_val (165,382,575 samples, 0.02%)</title><rect x="1062.5" y="261" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1065.48" y="271.5" ></text>
</g>
<g >
<title>__irqentry_text_end (4,715,326,587 samples, 0.64%)</title><rect x="1005.3" y="341" width="7.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1008.26" y="351.5" ></text>
</g>
<g >
<title>uncharge_page (67,689,791 samples, 0.01%)</title><rect x="1163.5" y="69" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1166.51" y="79.5" ></text>
</g>
<g >
<title>try_charge_memcg (1,062,575,323 samples, 0.14%)</title><rect x="1030.9" y="197" width="1.8" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1033.95" y="207.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (432,009,100 samples, 0.06%)</title><rect x="1163.6" y="85" width="0.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1166.61" y="95.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (232,054,397 samples, 0.03%)</title><rect x="1162.1" y="101" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1165.12" y="111.5" ></text>
</g>
<g >
<title>clear_page_erms (66,441,405 samples, 0.01%)</title><rect x="1035.5" y="149" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1038.47" y="159.5" ></text>
</g>
<g >
<title>do_anonymous_page (962,882,828 samples, 0.13%)</title><rect x="1152.0" y="277" width="1.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1154.99" y="287.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (298,733,936 samples, 0.04%)</title><rect x="1060.5" y="181" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1063.46" y="191.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (688,322,353,671 samples, 93.60%)</title><rect x="34.4" y="389" width="1104.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="37.45" y="399.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>cgroup_rstat_updated (165,904,049 samples, 0.02%)</title><rect x="1060.7" y="165" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1063.67" y="175.5" ></text>
</g>
<g >
<title>alloc_pages_vma (99,651,738 samples, 0.01%)</title><rect x="1024.9" y="245" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1027.87" y="255.5" ></text>
</g>
<g >
<title>unmap_vmas (3,254,224,963 samples, 0.44%)</title><rect x="1161.1" y="213" width="5.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1164.11" y="223.5" ></text>
</g>
<g >
<title>unmap_single_vma (3,254,224,963 samples, 0.44%)</title><rect x="1161.1" y="197" width="5.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1164.11" y="207.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (3,254,224,963 samples, 0.44%)</title><rect x="1161.1" y="165" width="5.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1164.11" y="175.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (166,125,017 samples, 0.02%)</title><rect x="1063.8" y="309" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1066.76" y="319.5" ></text>
</g>
<g >
<title>unmap_page_range (3,254,224,963 samples, 0.44%)</title><rect x="1161.1" y="181" width="5.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1164.11" y="191.5" ></text>
</g>
<g >
<title>__handle_mm_fault (24,269,737,677 samples, 3.30%)</title><rect x="1023.8" y="277" width="38.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1026.81" y="287.5" >__h..</text>
</g>
<g >
<title>__mod_node_page_state (99,471,717 samples, 0.01%)</title><rect x="1164.1" y="69" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1167.15" y="79.5" ></text>
</g>
<g >
<title>memcg_check_events (132,791,554 samples, 0.02%)</title><rect x="1035.2" y="213" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1038.15" y="223.5" ></text>
</g>
<g >
<title>__mod_node_page_state (398,680,719 samples, 0.05%)</title><rect x="1060.9" y="181" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1063.94" y="191.5" ></text>
</g>
<g >
<title>cpufreq_cpu_get (88,172,642 samples, 0.01%)</title><rect x="1160.9" y="197" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1163.92" y="207.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (165,999,909 samples, 0.02%)</title><rect x="1163.9" y="53" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1166.88" y="63.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (66,033,313 samples, 0.01%)</title><rect x="1161.9" y="133" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1164.86" y="143.5" ></text>
</g>
<g >
<title>free_unref_page_list (1,009,988,156 samples, 0.14%)</title><rect x="1164.4" y="85" width="1.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1167.44" y="95.5" ></text>
</g>
<g >
<title>handle_pte_fault (66,439,991 samples, 0.01%)</title><rect x="34.3" y="309" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="37.34" y="319.5" ></text>
</g>
<g >
<title>zap_pte_range (3,155,251,425 samples, 0.43%)</title><rect x="1161.3" y="149" width="5.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1164.27" y="159.5" ></text>
</g>
<g >
<title>arch_do_signal_or_restart (3,254,224,963 samples, 0.44%)</title><rect x="1161.1" y="325" width="5.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1164.11" y="335.5" ></text>
</g>
<g >
<title>BinarySearchTree::insert (432,152,564,104 samples, 58.76%)</title><rect x="374.5" y="357" width="693.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="377.52" y="367.5" >BinarySearchTree::insert</text>
</g>
<g >
<title>mem_cgroup_charge_statistics.constprop.0 (66,388,591 samples, 0.01%)</title><rect x="1152.2" y="229" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1155.20" y="239.5" ></text>
</g>
<g >
<title>malloc (13,568,823,089 samples, 1.85%)</title><rect x="1166.3" y="405" width="21.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1169.33" y="415.5" >m..</text>
</g>
<g >
<title>do_user_addr_fault (99,668,328 samples, 0.01%)</title><rect x="34.3" y="357" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="37.29" y="367.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::operator (17,733,926,694 samples, 2.41%)</title><rect x="1071.1" y="357" width="28.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1074.10" y="367.5" >st..</text>
</g>
<g >
<title>BinarySearchTree::insert (2,888,887,134 samples, 0.39%)</title><rect x="44.1" y="373" width="4.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="47.15" y="383.5" ></text>
</g>
<g >
<title>[unknown] (13,821,830,956 samples, 1.88%)</title><rect x="1138.9" y="405" width="22.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1141.88" y="415.5" >[..</text>
</g>
<g >
<title>__mod_lruvec_state (797,034,578 samples, 0.11%)</title><rect x="1060.3" y="197" width="1.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1063.30" y="207.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@@GLIBC_2.2.5 (564,508,023 samples, 0.08%)</title><rect x="1160.0" y="389" width="0.9" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1163.01" y="399.5" ></text>
</g>
<g >
<title>do_exit (3,254,224,963 samples, 0.44%)</title><rect x="1161.1" y="277" width="5.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1164.11" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,254,224,963 samples, 0.44%)</title><rect x="1161.1" y="389" width="5.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1164.11" y="399.5" ></text>
</g>
<g >
<title>exc_page_fault (28,188,589,796 samples, 3.83%)</title><rect x="1018.5" y="325" width="45.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1021.53" y="335.5" >exc_..</text>
</g>
<g >
<title>operator new@plt (797,154,861 samples, 0.11%)</title><rect x="1069.8" y="357" width="1.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1072.82" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (88,172,642 samples, 0.01%)</title><rect x="1160.9" y="357" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1163.92" y="367.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (232,333,634 samples, 0.03%)</title><rect x="1058.0" y="149" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1061.01" y="159.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (66,367,825 samples, 0.01%)</title><rect x="1154.1" y="389" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1157.07" y="399.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (99,313,804 samples, 0.01%)</title><rect x="1162.2" y="85" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1165.23" y="95.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;int&gt;::operator (21,351,899,856 samples, 2.90%)</title><rect x="1099.6" y="357" width="34.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1102.56" y="367.5" >st..</text>
</g>
<g >
<title>cpufreq_cpu_get_raw (88,172,642 samples, 0.01%)</title><rect x="1160.9" y="181" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1163.92" y="191.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics.constprop.0 (431,791,899 samples, 0.06%)</title><rect x="1030.2" y="197" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1033.20" y="207.5" ></text>
</g>
<g >
<title>handle_pte_fault (23,506,654,132 samples, 3.20%)</title><rect x="1024.6" y="261" width="37.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1027.60" y="271.5" >han..</text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (688,322,353,671 samples, 93.60%)</title><rect x="34.4" y="405" width="1104.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="37.45" y="415.5" >[libstdc++.so.6.0.30]</text>
</g>
<g >
<title>_dl_sysdep_start (315,139,931 samples, 0.04%)</title><rect x="1154.2" y="389" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1157.18" y="399.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (299,696,965 samples, 0.04%)</title><rect x="1163.7" y="69" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1166.67" y="79.5" ></text>
</g>
<g >
<title>irq_exit_rcu (66,449,287 samples, 0.01%)</title><rect x="1064.0" y="309" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1067.03" y="319.5" ></text>
</g>
<g >
<title>tick_sched_timer (166,125,017 samples, 0.02%)</title><rect x="1063.8" y="261" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1066.76" y="271.5" ></text>
</g>
<g >
<title>native_iret (199,346,272 samples, 0.03%)</title><rect x="1066.9" y="341" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1069.85" y="351.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (331,997,616 samples, 0.05%)</title><rect x="1057.9" y="165" width="0.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1060.90" y="175.5" ></text>
</g>
<g >
<title>show_cpuinfo (88,172,642 samples, 0.01%)</title><rect x="1160.9" y="229" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1163.92" y="239.5" ></text>
</g>
<g >
<title>[libjemalloc.so.2] (66,456,173 samples, 0.01%)</title><rect x="1153.9" y="373" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1156.90" y="383.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (132,830,709 samples, 0.02%)</title><rect x="1063.2" y="293" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1066.17" y="303.5" ></text>
</g>
<g >
<title>__cgroup_throttle_swaprate (298,990,105 samples, 0.04%)</title><rect x="1026.0" y="229" width="0.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1028.99" y="239.5" ></text>
</g>
<g >
<title>try_charge_memcg (66,217,114 samples, 0.01%)</title><rect x="1152.3" y="229" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1155.31" y="239.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (66,416,295 samples, 0.01%)</title><rect x="1153.4" y="261" width="0.1" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1156.43" y="271.5" ></text>
</g>
<g >
<title>operator new (232,318,517 samples, 0.03%)</title><rect x="1188.1" y="405" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1191.10" y="415.5" ></text>
</g>
<g >
<title>__mod_node_page_state (66,371,419 samples, 0.01%)</title><rect x="1162.5" y="101" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1165.50" y="111.5" ></text>
</g>
<g >
<title>tick_sched_timer (66,439,211 samples, 0.01%)</title><rect x="238.4" y="261" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="241.35" y="271.5" ></text>
</g>
<g >
<title>lock_page_lruvec_irqsave (132,888,538 samples, 0.02%)</title><rect x="1058.6" y="181" width="0.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1061.65" y="191.5" ></text>
</g>
<g >
<title>BinaryNode::setRightChild (1,222,222,242 samples, 0.17%)</title><rect x="372.6" y="357" width="1.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="375.55" y="367.5" ></text>
</g>
<g >
<title>__irqentry_text_end (99,602,883 samples, 0.01%)</title><rect x="1151.0" y="373" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1154.03" y="383.5" ></text>
</g>
<g >
<title>pthread_mutex_trylock@@GLIBC_2.34 (232,514,267 samples, 0.03%)</title><rect x="1188.5" y="405" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1191.48" y="415.5" ></text>
</g>
<g >
<title>do_user_addr_fault (27,391,450,128 samples, 3.72%)</title><rect x="1019.0" y="309" width="43.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1021.96" y="319.5" >do_u..</text>
</g>
<g >
<title>update_process_times (99,670,721 samples, 0.01%)</title><rect x="1063.9" y="229" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1066.87" y="239.5" ></text>
</g>
<g >
<title>__handle_mm_fault (66,439,991 samples, 0.01%)</title><rect x="34.3" y="325" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="37.34" y="335.5" ></text>
</g>
<g >
<title>exit_mm (3,254,224,963 samples, 0.44%)</title><rect x="1161.1" y="261" width="5.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1164.11" y="271.5" ></text>
</g>
<g >
<title>pthread_mutex_trylock@@GLIBC_2.34 (3,320,652,238 samples, 0.45%)</title><rect x="1154.7" y="389" width="5.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1157.68" y="399.5" ></text>
</g>
<g >
<title>vfs_read (88,172,642 samples, 0.01%)</title><rect x="1160.9" y="293" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1163.92" y="303.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (365,086,458 samples, 0.05%)</title><rect x="1152.0" y="261" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1155.04" y="271.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1,095,773,024 samples, 0.15%)</title><rect x="1056.9" y="181" width="1.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1059.89" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (88,172,642 samples, 0.01%)</title><rect x="1160.9" y="373" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1163.92" y="383.5" ></text>
</g>
<g >
<title>[libjemalloc.so.2] (9,363,597,659 samples, 1.27%)</title><rect x="1138.9" y="389" width="15.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1141.88" y="399.5" ></text>
</g>
<g >
<title>free_swap_cache (103,226,546 samples, 0.01%)</title><rect x="1166.2" y="117" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1169.17" y="127.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2,192,020,455 samples, 0.30%)</title><rect x="1162.8" y="133" width="3.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1165.82" y="143.5" ></text>
</g>
<g >
<title>BinaryNode::getRightChild (41,677,185,485 samples, 5.67%)</title><rect x="304.0" y="357" width="66.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="306.98" y="367.5" >BinaryN..</text>
</g>
<g >
<title>__hrtimer_run_queues (166,125,017 samples, 0.02%)</title><rect x="1063.8" y="277" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1066.76" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (24,967,247,816 samples, 3.39%)</title><rect x="1022.8" y="293" width="40.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1025.79" y="303.5" >han..</text>
</g>
<g >
<title>alloc_pages_vma (498,151,237 samples, 0.07%)</title><rect x="1152.6" y="261" width="0.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1155.63" y="271.5" ></text>
</g>
<g >
<title>clear_page_erms (398,521,087 samples, 0.05%)</title><rect x="1152.7" y="213" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1155.73" y="223.5" ></text>
</g>
<g >
<title>__mod_node_page_state (66,116,946 samples, 0.01%)</title><rect x="1162.4" y="85" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1165.39" y="95.5" ></text>
</g>
<g >
<title>BinaryNode::setLeftChild (2,556,668,240 samples, 0.35%)</title><rect x="34.4" y="373" width="4.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="37.45" y="383.5" ></text>
</g>
<g >
<title>lru_cache_add (1,925,486,914 samples, 0.26%)</title><rect x="1056.6" y="213" width="3.1" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1059.57" y="223.5" ></text>
</g>
<g >
<title>get_signal (3,254,224,963 samples, 0.44%)</title><rect x="1161.1" y="309" width="5.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1164.11" y="319.5" ></text>
</g>
<g >
<title>all (735,417,935,003 samples, 100%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1,527,118,427 samples, 0.21%)</title><rect x="1151.2" y="373" width="2.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1154.19" y="383.5" ></text>
</g>
<g >
<title>x64_sys_call (88,172,642 samples, 0.01%)</title><rect x="1160.9" y="341" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1163.92" y="351.5" ></text>
</g>
<g >
<title>__alloc_pages (498,151,237 samples, 0.07%)</title><rect x="1152.6" y="245" width="0.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1155.63" y="255.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (3,254,224,963 samples, 0.44%)</title><rect x="1161.1" y="341" width="5.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1164.11" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (66,439,211 samples, 0.01%)</title><rect x="238.4" y="277" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="241.35" y="287.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (1,726,850,541 samples, 0.23%)</title><rect x="1056.7" y="197" width="2.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1059.73" y="207.5" ></text>
</g>
<g >
<title>tick_sched_handle (99,670,721 samples, 0.01%)</title><rect x="1063.9" y="245" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1066.87" y="255.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2,088,793,909 samples, 0.28%)</title><rect x="1162.8" y="117" width="3.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1165.82" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,254,224,963 samples, 0.44%)</title><rect x="1161.1" y="405" width="5.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1164.11" y="415.5" ></text>
</g>
<g >
<title>get_page_from_freelist (11,520,210,099 samples, 1.57%)</title><rect x="1037.6" y="197" width="18.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1040.55" y="207.5" ></text>
</g>
<g >
<title>free_unref_page_commit.constprop.0 (843,968,580 samples, 0.11%)</title><rect x="1164.7" y="69" width="1.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1167.71" y="79.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (66,404,711 samples, 0.01%)</title><rect x="370.7" y="325" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="373.74" y="335.5" ></text>
</g>
<g >
<title>find_vma (99,639,178 samples, 0.01%)</title><rect x="1063.0" y="309" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1065.96" y="319.5" ></text>
</g>
<g >
<title>__alloc_pages (99,658,123 samples, 0.01%)</title><rect x="1035.4" y="181" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1038.42" y="191.5" ></text>
</g>
<g >
<title>release_pages (2,088,793,909 samples, 0.28%)</title><rect x="1162.8" y="101" width="3.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1165.82" y="111.5" ></text>
</g>
<g >
<title>__free_one_page (612,097,575 samples, 0.08%)</title><rect x="1165.1" y="37" width="1.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1168.08" y="47.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (99,664,865 samples, 0.01%)</title><rect x="238.4" y="341" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="241.35" y="351.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge_list (67,689,791 samples, 0.01%)</title><rect x="1163.5" y="85" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1166.51" y="95.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (5,478,826,534 samples, 0.74%)</title><rect x="1026.6" y="229" width="8.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1029.58" y="239.5" ></text>
</g>
<g >
<title>BinaryNode::getData (20,188,709,756 samples, 2.75%)</title><rect x="946.3" y="341" width="32.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="949.28" y="351.5" >Bi..</text>
</g>
<g >
<title>handle_mm_fault (99,668,328 samples, 0.01%)</title><rect x="34.3" y="341" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="37.29" y="351.5" ></text>
</g>
<g >
<title>BinaryNode::getLeftChild (40,798,380,785 samples, 5.55%)</title><rect x="238.5" y="357" width="65.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="241.51" y="367.5" >BinaryN..</text>
</g>
<g >
<title>std::uniform_int_distribution&lt;int&gt;::operator (3,155,292,580 samples, 0.43%)</title><rect x="1133.8" y="373" width="5.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1136.82" y="383.5" ></text>
</g>
<g >
<title>vmacache_find (232,364,951 samples, 0.03%)</title><rect x="1022.4" y="277" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1025.42" y="287.5" ></text>
</g>
<g >
<title>dl_main (315,139,931 samples, 0.04%)</title><rect x="1154.2" y="373" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1157.18" y="383.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (66,423,561 samples, 0.01%)</title><rect x="1059.5" y="197" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1062.50" y="207.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,095,379,647 samples, 0.15%)</title><rect x="1151.8" y="325" width="1.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1154.83" y="335.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1,228,130,077 samples, 0.17%)</title><rect x="1151.6" y="341" width="2.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1154.61" y="351.5" ></text>
</g>
<g >
<title>pmd_val (99,556,827 samples, 0.01%)</title><rect x="1062.3" y="261" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1065.32" y="271.5" ></text>
</g>
<g >
<title>page_remove_rmap (530,758,351 samples, 0.07%)</title><rect x="1162.0" y="133" width="0.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1164.96" y="143.5" ></text>
</g>
<g >
<title>sync_regs (464,432,272 samples, 0.06%)</title><rect x="1067.2" y="341" width="0.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1070.17" y="351.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1,560,241,353 samples, 0.21%)</title><rect x="1032.7" y="213" width="2.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1035.65" y="223.5" ></text>
</g>
<g >
<title>proc_reg_read_iter (88,172,642 samples, 0.01%)</title><rect x="1160.9" y="261" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1163.92" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_read (88,172,642 samples, 0.01%)</title><rect x="1160.9" y="325" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1163.92" y="335.5" ></text>
</g>
<g >
<title>scheduler_tick (99,670,721 samples, 0.01%)</title><rect x="1063.9" y="213" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1066.87" y="223.5" ></text>
</g>
<g >
<title>charge_memcg (3,719,347,914 samples, 0.51%)</title><rect x="1026.7" y="213" width="6.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1029.68" y="223.5" ></text>
</g>
<g >
<title>find_vma (265,593,648 samples, 0.04%)</title><rect x="1022.4" y="293" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1025.37" y="303.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (132,771,518 samples, 0.02%)</title><rect x="1023.6" y="261" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1026.59" y="271.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@@GLIBC_2.2.5 (664,212,814 samples, 0.09%)</title><rect x="1188.9" y="405" width="1.0" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1191.85" y="415.5" ></text>
</g>
<g >
<title>error_entry (66,454,148 samples, 0.01%)</title><rect x="1153.7" y="373" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1156.69" y="383.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,029,132,135 samples, 0.14%)</title><rect x="1151.9" y="293" width="1.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1154.88" y="303.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (166,112,729 samples, 0.02%)</title><rect x="1030.6" y="181" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1033.63" y="191.5" ></text>
</g>
<g >
<title>pfn_pte (99,647,097 samples, 0.01%)</title><rect x="1061.7" y="229" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1064.74" y="239.5" ></text>
</g>
<g >
<title>release_pages (298,920,577 samples, 0.04%)</title><rect x="1059.0" y="181" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1062.02" y="191.5" ></text>
</g>
<g >
<title>_dl_relocate_object (315,139,931 samples, 0.04%)</title><rect x="1154.2" y="357" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1157.18" y="367.5" ></text>
</g>
<g >
<title>new_sync_read (88,172,642 samples, 0.01%)</title><rect x="1160.9" y="277" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1163.92" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (66,439,211 samples, 0.01%)</title><rect x="238.4" y="309" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="241.35" y="319.5" ></text>
</g>
</g>
</svg>
