<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="518.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="501" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="501" > </text>
<g id="frames">
<g >
<title>__GI___lll_lock_wait (3,168,871,005 samples, 0.28%)</title><rect x="755.8" y="405" width="3.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="758.84" y="415.5" ></text>
</g>
<g >
<title>tick_sched_handle (119,873,314 samples, 0.01%)</title><rect x="382.8" y="277" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="385.76" y="287.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::remove (8,772,789,703 samples, 0.77%)</title><rect x="624.9" y="389" width="9.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="627.89" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,041,000,795 samples, 0.18%)</title><rect x="759.2" y="373" width="2.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="762.22" y="383.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getLeftChild (19,408,707,673 samples, 1.70%)</title><rect x="124.5" y="389" width="20.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="127.48" y="399.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (528,734,304 samples, 0.05%)</title><rect x="633.4" y="133" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="636.41" y="143.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (2,646,889,345 samples, 0.23%)</title><rect x="631.2" y="229" width="2.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="634.22" y="239.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (100,836,381 samples, 0.01%)</title><rect x="991.8" y="245" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="994.80" y="255.5" ></text>
</g>
<g >
<title>[libjemalloc.so.2] (1,433,713,338 samples, 0.13%)</title><rect x="1170.9" y="421" width="1.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1173.94" y="431.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;int&gt;::operator (56,328,400,179 samples, 4.93%)</title><rect x="691.7" y="389" width="58.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="694.72" y="399.5" >std::u..</text>
</g>
<g >
<title>do_user_addr_fault (145,701,854 samples, 0.01%)</title><rect x="158.2" y="341" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="161.18" y="351.5" ></text>
</g>
<g >
<title>wp_page_copy (133,279,758 samples, 0.01%)</title><rect x="11.8" y="309" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="14.83" y="319.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (104,211,721 samples, 0.01%)</title><rect x="759.7" y="325" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="762.71" y="335.5" ></text>
</g>
<g >
<title>dequeue_task (794,683,240 samples, 0.07%)</title><rect x="756.8" y="245" width="0.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="759.76" y="255.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (6,595,216,410 samples, 0.58%)</title><rect x="388.0" y="325" width="6.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="390.99" y="335.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (171,631,246 samples, 0.02%)</title><rect x="1061.5" y="261" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1064.51" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (127,451,209 samples, 0.01%)</title><rect x="382.8" y="309" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="385.75" y="319.5" ></text>
</g>
<g >
<title>handle_pte_fault (116,239,987 samples, 0.01%)</title><rect x="158.2" y="293" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="161.21" y="303.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (716,806,488 samples, 0.06%)</title><rect x="761.4" y="389" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="764.39" y="399.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (429,015,785 samples, 0.04%)</title><rect x="755.9" y="357" width="0.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="758.92" y="367.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (365,596,680 samples, 0.03%)</title><rect x="755.9" y="341" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="758.95" y="351.5" ></text>
</g>
<g >
<title>tick_sched_timer (112,232,801 samples, 0.01%)</title><rect x="621.9" y="293" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="624.88" y="303.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::setRightChild (123,273,433 samples, 0.01%)</title><rect x="390.6" y="261" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="393.63" y="271.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::operator (55,890,001,551 samples, 4.90%)</title><rect x="634.0" y="389" width="57.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="636.96" y="399.5" >std::m..</text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (4,588,950,062 samples, 0.40%)</title><rect x="390.1" y="277" width="4.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="393.07" y="287.5" ></text>
</g>
<g >
<title>unmap_page_range (1,876,425,773 samples, 0.16%)</title><rect x="1186.2" y="277" width="2.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1189.21" y="287.5" ></text>
</g>
<g >
<title>__irqentry_text_end (148,526,863 samples, 0.01%)</title><rect x="990.7" y="373" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="993.72" y="383.5" ></text>
</g>
<g >
<title>mmput (1,881,531,957 samples, 0.16%)</title><rect x="1186.2" y="341" width="2.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1189.21" y="351.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getRightChild (976,976,262 samples, 0.09%)</title><rect x="384.6" y="373" width="1.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="387.64" y="383.5" ></text>
</g>
<g >
<title>__irqentry_text_end (111,132,120 samples, 0.01%)</title><rect x="1060.5" y="373" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1063.53" y="383.5" ></text>
</g>
<g >
<title>exc_page_fault (214,543,247 samples, 0.02%)</title><rect x="11.8" y="405" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="14.79" y="415.5" ></text>
</g>
<g >
<title>umf_alloc (1,757,136,350 samples, 0.15%)</title><rect x="1076.9" y="373" width="1.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1079.88" y="383.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::~numa (331,735,731 samples, 0.03%)</title><rect x="835.5" y="405" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="838.48" y="415.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::insert (68,656,481,977 samples, 6.01%)</title><rect x="1007.7" y="389" width="71.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1010.73" y="399.5" >numa&lt;Bin..</text>
</g>
<g >
<title>fpregs_assert_state_consistent (191,970,880 samples, 0.02%)</title><rect x="756.1" y="325" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="759.11" y="335.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (215,077,275 samples, 0.02%)</title><rect x="1172.5" y="421" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1175.46" y="431.5" ></text>
</g>
<g >
<title>__handle_mm_fault (130,826,147 samples, 0.01%)</title><rect x="158.2" y="309" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="161.19" y="319.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getLeftChild (9,108,592,014 samples, 0.80%)</title><rect x="919.0" y="389" width="9.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="921.95" y="399.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2,323,217,563 samples, 0.20%)</title><rect x="1060.7" y="341" width="2.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1063.69" y="351.5" ></text>
</g>
<g >
<title>exit_mmap (1,881,531,957 samples, 0.16%)</title><rect x="1186.2" y="325" width="2.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1189.21" y="335.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (108,790,843 samples, 0.01%)</title><rect x="1186.7" y="213" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1189.73" y="223.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::lookup (219,805,950,727 samples, 19.25%)</title><rect x="158.5" y="389" width="227.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="161.48" y="399.5" >numa&lt;BinarySearchTree, 0, Numa..</text>
</g>
<g >
<title>handle_mm_fault (2,027,469,194 samples, 0.18%)</title><rect x="1061.0" y="325" width="2.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1063.98" y="335.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (132,186,119 samples, 0.01%)</title><rect x="633.8" y="53" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="636.82" y="63.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::~numa (394,813,857 samples, 0.03%)</title><rect x="835.9" y="405" width="0.4" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="838.94" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (3,098,393,222 samples, 0.27%)</title><rect x="752.6" y="405" width="3.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="755.63" y="415.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getRightChild (1,025,827,863 samples, 0.09%)</title><rect x="623.8" y="373" width="1.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="626.83" y="383.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getData (5,781,176,552 samples, 0.51%)</title><rect x="997.5" y="373" width="6.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1000.52" y="383.5" ></text>
</g>
<g >
<title>pick_next_task (129,364,033 samples, 0.01%)</title><rect x="757.7" y="245" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="760.71" y="255.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getRightChild (8,895,100,741 samples, 0.78%)</title><rect x="880.2" y="389" width="9.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="883.23" y="399.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (3,207,556,121 samples, 0.28%)</title><rect x="630.6" y="245" width="3.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="633.64" y="255.5" ></text>
</g>
<g >
<title>umf_alloc (1,071,717,958 samples, 0.09%)</title><rect x="1006.6" y="373" width="1.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1009.63" y="383.5" ></text>
</g>
<g >
<title>futex_wait (2,249,254,124 samples, 0.20%)</title><rect x="756.4" y="309" width="2.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="759.42" y="319.5" ></text>
</g>
<g >
<title>clear_page_erms (122,372,587 samples, 0.01%)</title><rect x="1061.9" y="213" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1064.86" y="223.5" ></text>
</g>
<g >
<title>mallocx (1,288,214,633 samples, 0.11%)</title><rect x="1188.2" y="437" width="1.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1191.15" y="447.5" ></text>
</g>
<g >
<title>zap_pte_range (1,857,873,434 samples, 0.16%)</title><rect x="1186.2" y="245" width="2.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1189.23" y="255.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (2,627,267,802 samples, 0.23%)</title><rect x="392.1" y="229" width="2.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="395.10" y="239.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::insert (167,090,284 samples, 0.01%)</title><rect x="837.0" y="405" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="840.03" y="415.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3,379,483,895 samples, 0.30%)</title><rect x="762.1" y="405" width="3.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="765.13" y="415.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (119,478,932 samples, 0.01%)</title><rect x="394.7" y="37" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="397.69" y="47.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::lookup (444,435,836 samples, 0.04%)</title><rect x="837.2" y="405" width="0.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="840.21" y="415.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::lookup (464,329,820 samples, 0.04%)</title><rect x="836.5" y="405" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="839.51" y="415.5" ></text>
</g>
<g >
<title>pthread_mutex_trylock@@GLIBC_2.34 (712,109,541 samples, 0.06%)</title><rect x="1184.7" y="421" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1187.70" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1,436,001,287 samples, 0.13%)</title><rect x="759.8" y="341" width="1.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="762.84" y="351.5" ></text>
</g>
<g >
<title>__schedule (1,782,022,712 samples, 0.16%)</title><rect x="756.6" y="261" width="1.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="759.62" y="271.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getRightChild (8,351,025,445 samples, 0.73%)</title><rect x="144.5" y="389" width="8.7" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="147.54" y="399.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getLeftChild (19,016,374,045 samples, 1.67%)</title><rect x="89.1" y="389" width="19.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="92.11" y="399.5" ></text>
</g>
<g >
<title>rmqueue_bulk (109,981,629 samples, 0.01%)</title><rect x="1062.1" y="197" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1065.06" y="207.5" ></text>
</g>
<g >
<title>x64_sys_call (2,304,875,853 samples, 0.20%)</title><rect x="756.4" y="357" width="2.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="759.37" y="367.5" ></text>
</g>
<g >
<title>__free_one_page (189,962,582 samples, 0.02%)</title><rect x="1187.8" y="133" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1190.79" y="143.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getData (28,555,077,755 samples, 2.50%)</title><rect x="889.4" y="389" width="29.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="892.44" y="399.5" >nu..</text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (3,284,825,861 samples, 0.29%)</title><rect x="391.4" y="245" width="3.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="394.42" y="255.5" ></text>
</g>
<g >
<title>exc_page_fault (169,763,775 samples, 0.01%)</title><rect x="399.5" y="357" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="402.54" y="367.5" ></text>
</g>
<g >
<title>handle_mm_fault (142,077,621 samples, 0.01%)</title><rect x="158.2" y="325" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="161.18" y="335.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getData (6,946,796,962 samples, 0.61%)</title><rect x="81.9" y="389" width="7.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="84.93" y="399.5" ></text>
</g>
<g >
<title>release_pages (1,081,372,491 samples, 0.09%)</title><rect x="1186.9" y="197" width="1.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1189.92" y="207.5" ></text>
</g>
<g >
<title>do_user_addr_fault (155,253,568 samples, 0.01%)</title><rect x="399.5" y="341" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="402.55" y="351.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1,677,681,124 samples, 0.15%)</title><rect x="991.1" y="341" width="1.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="994.06" y="351.5" ></text>
</g>
<g >
<title>lru_cache_add (553,977,943 samples, 0.05%)</title><rect x="1062.3" y="245" width="0.5" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1065.25" y="255.5" ></text>
</g>
<g >
<title>wake_up_q (766,724,942 samples, 0.07%)</title><rect x="760.2" y="293" width="0.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="763.19" y="303.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (8,510,100,514 samples, 0.75%)</title><rect x="386.0" y="373" width="8.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="389.02" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_exit (1,881,531,957 samples, 0.16%)</title><rect x="1186.2" y="389" width="2.0" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1189.21" y="399.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,598,437,477 samples, 0.14%)</title><rect x="1061.3" y="277" width="1.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1064.33" y="287.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getLeftChild (9,552,557,577 samples, 0.84%)</title><rect x="870.4" y="389" width="9.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="873.36" y="399.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (67,151,512,375 samples, 5.88%)</title><rect x="765.6" y="405" width="69.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="768.62" y="415.5" >clock_g..</text>
</g>
<g >
<title>update_load_avg (308,400,790 samples, 0.03%)</title><rect x="757.2" y="197" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="760.18" y="207.5" ></text>
</g>
<g >
<title>x64_sys_call (1,453,358,578 samples, 0.13%)</title><rect x="759.8" y="357" width="1.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="762.83" y="367.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (424,859,180 samples, 0.04%)</title><rect x="394.4" y="117" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="397.37" y="127.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (379,063,547 samples, 0.03%)</title><rect x="633.6" y="117" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="636.56" y="127.5" ></text>
</g>
<g >
<title>mallocx (4,250,729,061 samples, 0.37%)</title><rect x="1063.3" y="373" width="4.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1066.28" y="383.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getRightChild (9,762,404,012 samples, 0.86%)</title><rect x="928.4" y="389" width="10.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="931.37" y="399.5" ></text>
</g>
<g >
<title>schedule (1,845,409,132 samples, 0.16%)</title><rect x="756.6" y="277" width="1.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="759.58" y="287.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1,913,380,960 samples, 0.17%)</title><rect x="756.5" y="293" width="2.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="759.51" y="303.5" ></text>
</g>
<g >
<title>do_user_addr_fault (177,238,315 samples, 0.02%)</title><rect x="1172.5" y="373" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1175.48" y="383.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (226,046,936 samples, 0.02%)</title><rect x="633.7" y="85" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="636.72" y="95.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getRightChild (1,471,074,275 samples, 0.13%)</title><rect x="1005.1" y="373" width="1.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1008.09" y="383.5" ></text>
</g>
<g >
<title>hash_futex (145,747,085 samples, 0.01%)</title><rect x="758.6" y="293" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="761.59" y="303.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (5,268,912,009 samples, 0.46%)</title><rect x="389.4" y="293" width="5.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="392.37" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (217,742,583 samples, 0.02%)</title><rect x="382.8" y="357" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="385.75" y="367.5" ></text>
</g>
<g >
<title>try_to_wake_up (674,627,779 samples, 0.06%)</title><rect x="760.3" y="277" width="0.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="763.28" y="287.5" ></text>
</g>
<g >
<title>[libjemalloc.so.2] (1,947,515,992 samples, 0.17%)</title><rect x="10.0" y="437" width="2.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>exc_page_fault (2,494,874,440 samples, 0.22%)</title><rect x="1060.7" y="357" width="2.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1063.65" y="367.5" ></text>
</g>
<g >
<title>do_anonymous_page (118,431,183 samples, 0.01%)</title><rect x="1172.5" y="309" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1175.54" y="319.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getRightChild (7,963,074,637 samples, 0.70%)</title><rect x="108.8" y="389" width="8.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="111.77" y="399.5" ></text>
</g>
<g >
<title>hash_futex (317,772,778 samples, 0.03%)</title><rect x="761.0" y="309" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="763.99" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (123,576,283 samples, 0.01%)</title><rect x="621.9" y="309" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="624.87" y="319.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2,093,142,439 samples, 0.18%)</title><rect x="990.9" y="373" width="2.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="993.87" y="383.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2,507,297,698 samples, 0.22%)</title><rect x="1060.6" y="373" width="2.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1063.64" y="383.5" ></text>
</g>
<g >
<title>psi_group_change (261,559,750 samples, 0.02%)</title><rect x="758.1" y="229" width="0.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="761.06" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2,290,152,520 samples, 0.20%)</title><rect x="756.4" y="341" width="2.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="759.38" y="351.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::setLeftChild (97,383,699 samples, 0.01%)</title><rect x="835.8" y="405" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="838.82" y="415.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;int&gt;::operator (4,158,841,892 samples, 0.36%)</title><rect x="1166.6" y="405" width="4.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1169.64" y="415.5" ></text>
</g>
<g >
<title>exit_mm (1,881,531,957 samples, 0.16%)</title><rect x="1186.2" y="357" width="2.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1189.21" y="367.5" ></text>
</g>
<g >
<title>mallocx@plt (110,327,055 samples, 0.01%)</title><rect x="1067.7" y="373" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1070.68" y="383.5" ></text>
</g>
<g >
<title>update_process_times (104,843,388 samples, 0.01%)</title><rect x="621.9" y="261" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="624.89" y="271.5" ></text>
</g>
<g >
<title>find_vma (246,412,918 samples, 0.02%)</title><rect x="1060.7" y="325" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1063.73" y="335.5" ></text>
</g>
<g >
<title>up_read (193,284,053 samples, 0.02%)</title><rect x="992.8" y="341" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="995.84" y="351.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (156,046,292 samples, 0.01%)</title><rect x="1187.2" y="181" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1190.20" y="191.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (316,110,130 samples, 0.03%)</title><rect x="633.6" y="101" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="636.63" y="111.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (260,753,077 samples, 0.02%)</title><rect x="991.6" y="261" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="994.64" y="271.5" ></text>
</g>
<g >
<title>unmap_single_vma (1,876,425,773 samples, 0.16%)</title><rect x="1186.2" y="293" width="2.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1189.21" y="303.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (98,350,060 samples, 0.01%)</title><rect x="1062.6" y="197" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1065.56" y="207.5" ></text>
</g>
<g >
<title>dallocx (233,308,365 samples, 0.02%)</title><rect x="1186.0" y="437" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1188.97" y="447.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getData (1,576,030,150 samples, 0.14%)</title><rect x="622.1" y="373" width="1.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="625.11" y="383.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (1,217,091,499 samples, 0.11%)</title><rect x="632.7" y="181" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="635.70" y="191.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (111,070,069 samples, 0.01%)</title><rect x="757.6" y="245" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="760.58" y="255.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (1,121,322,682,279 samples, 98.21%)</title><rect x="12.0" y="437" width="1158.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="15.01" y="447.5" >[libstdc++.so.6.0.30]</text>
</g>
<g >
<title>numa_BST_init (243,225,621,153 samples, 21.30%)</title><rect x="837.7" y="405" width="251.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="840.68" y="415.5" >numa_BST_init</text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (26,304,435,740 samples, 2.30%)</title><rect x="1135.8" y="405" width="27.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1138.84" y="415.5" >s..</text>
</g>
<g >
<title>tick_sched_handle (104,843,388 samples, 0.01%)</title><rect x="621.9" y="277" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="624.89" y="287.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (267,568,331 samples, 0.02%)</title><rect x="394.5" y="85" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="397.53" y="95.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (228,758,518 samples, 0.02%)</title><rect x="621.9" y="357" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="624.87" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,881,531,957 samples, 0.16%)</title><rect x="1186.2" y="437" width="2.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1189.21" y="447.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@@GLIBC_2.2.5 (16,078,584,467 samples, 1.41%)</title><rect x="1089.1" y="405" width="16.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1092.06" y="415.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (406,438,290 samples, 0.04%)</title><rect x="992.1" y="261" width="0.5" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="995.14" y="271.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,880,172,115 samples, 0.16%)</title><rect x="1061.1" y="309" width="1.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1064.09" y="319.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::insert (152,249,609 samples, 0.01%)</title><rect x="836.3" y="405" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="839.35" y="415.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (912,929,187 samples, 0.08%)</title><rect x="393.9" y="165" width="0.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="396.87" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,141,615,105 samples, 0.19%)</title><rect x="759.2" y="389" width="2.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="762.17" y="399.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,073,718,700 samples, 0.09%)</title><rect x="991.6" y="277" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="994.57" y="287.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (6,078,100,456 samples, 0.53%)</title><rect x="627.7" y="309" width="6.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="630.67" y="319.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (98,325,261 samples, 0.01%)</title><rect x="1062.7" y="197" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1065.67" y="207.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::insert (4,913,198,058 samples, 0.43%)</title><rect x="394.8" y="389" width="5.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="397.85" y="399.5" ></text>
</g>
<g >
<title>do_user_addr_fault (189,381,459 samples, 0.02%)</title><rect x="11.8" y="389" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="14.79" y="399.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (211,410,095 samples, 0.02%)</title><rect x="394.6" y="69" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="397.59" y="79.5" ></text>
</g>
<g >
<title>__alloc_pages (172,057,240 samples, 0.02%)</title><rect x="991.9" y="245" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="994.92" y="255.5" ></text>
</g>
<g >
<title>__alloc_pages (452,914,264 samples, 0.04%)</title><rect x="1061.7" y="245" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1064.72" y="255.5" ></text>
</g>
<g >
<title>[[vdso]] (2,609,919,251 samples, 0.23%)</title><rect x="749.9" y="405" width="2.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="752.94" y="415.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (544,268,309 samples, 0.05%)</title><rect x="394.2" y="133" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="397.25" y="143.5" ></text>
</g>
<g >
<title>update_process_times (112,358,022 samples, 0.01%)</title><rect x="382.8" y="261" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="385.77" y="271.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,147,822,870 samples, 0.10%)</title><rect x="991.5" y="293" width="1.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="994.51" y="303.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (708,130,364 samples, 0.06%)</title><rect x="633.2" y="149" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="636.22" y="159.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@@GLIBC_2.2.5 (29,159,714,985 samples, 2.55%)</title><rect x="1105.7" y="405" width="30.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1108.68" y="415.5" >pt..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (481,880,504 samples, 0.04%)</title><rect x="759.3" y="357" width="0.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="762.33" y="367.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::setRightChild (131,472,351 samples, 0.01%)</title><rect x="387.1" y="341" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="390.11" y="351.5" ></text>
</g>
<g >
<title>handle_pte_fault (136,860,041 samples, 0.01%)</title><rect x="1172.5" y="325" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1175.52" y="335.5" ></text>
</g>
<g >
<title>rmqueue (183,912,308 samples, 0.02%)</title><rect x="1062.0" y="213" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1064.99" y="223.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getData (7,239,048,961 samples, 0.63%)</title><rect x="117.0" y="389" width="7.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="120.00" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,752,242,313 samples, 0.24%)</title><rect x="755.9" y="373" width="2.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="758.90" y="383.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (226,536,652 samples, 0.02%)</title><rect x="11.8" y="421" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="14.78" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,881,531,957 samples, 0.16%)</title><rect x="1186.2" y="421" width="2.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1189.21" y="431.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (422,776,873 samples, 0.04%)</title><rect x="759.4" y="341" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="762.38" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (142,072,968 samples, 0.01%)</title><rect x="621.9" y="325" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="624.87" y="335.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (331,083,209 samples, 0.03%)</title><rect x="394.5" y="101" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="397.47" y="111.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (99,848,702 samples, 0.01%)</title><rect x="1062.8" y="261" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1065.83" y="271.5" ></text>
</g>
<g >
<title>do_anonymous_page (102,876,951 samples, 0.01%)</title><rect x="399.6" y="277" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="402.60" y="287.5" ></text>
</g>
<g >
<title>dequeue_entity (574,360,728 samples, 0.05%)</title><rect x="756.9" y="213" width="0.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="759.93" y="223.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getLeftChild (1,550,952,148 samples, 0.14%)</title><rect x="1003.5" y="373" width="1.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1006.49" y="383.5" ></text>
</g>
<g >
<title>dequeue_task_fair (772,455,607 samples, 0.07%)</title><rect x="756.8" y="229" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="759.77" y="239.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,431,100,740 samples, 0.13%)</title><rect x="991.3" y="325" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="994.31" y="335.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (917,430,729 samples, 0.08%)</title><rect x="633.0" y="165" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="636.01" y="175.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::operator (8,303,262,719 samples, 0.73%)</title><rect x="741.4" y="373" width="8.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="744.36" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (228,758,518 samples, 0.02%)</title><rect x="621.9" y="373" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="624.87" y="383.5" ></text>
</g>
<g >
<title>alloc_pages_vma (209,003,180 samples, 0.02%)</title><rect x="991.9" y="261" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="994.91" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (225,206,873 samples, 0.02%)</title><rect x="382.7" y="373" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="385.74" y="383.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getData (5,724,284,809 samples, 0.50%)</title><rect x="1067.8" y="373" width="5.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1070.79" y="383.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (7,837,188,193 samples, 0.69%)</title><rect x="625.9" y="357" width="8.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="628.86" y="367.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getLeftChild (1,682,637,708 samples, 0.15%)</title><rect x="1073.7" y="373" width="1.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1076.71" y="383.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getData (30,335,248,808 samples, 2.66%)</title><rect x="839.0" y="389" width="31.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="842.01" y="399.5" >nu..</text>
</g>
<g >
<title>handle_mm_fault (155,308,820 samples, 0.01%)</title><rect x="1172.5" y="357" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1175.51" y="367.5" ></text>
</g>
<g >
<title>exc_page_fault (1,957,998,028 samples, 0.17%)</title><rect x="991.0" y="357" width="2.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="994.01" y="367.5" ></text>
</g>
<g >
<title>free_unref_page_list (532,869,719 samples, 0.05%)</title><rect x="1187.5" y="181" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1190.46" y="191.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (97,594,528 samples, 0.01%)</title><rect x="1186.7" y="197" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1189.74" y="207.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::lookup (217,665,074,373 samples, 19.06%)</title><rect x="399.9" y="389" width="225.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="402.92" y="399.5" >numa&lt;BinarySearchTree, 1, Num..</text>
</g>
<g >
<title>umf_alloc (848,012,825 samples, 0.07%)</title><rect x="1088.2" y="389" width="0.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1091.19" y="399.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (331,715,512 samples, 0.03%)</title><rect x="992.2" y="229" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="995.21" y="239.5" ></text>
</g>
<g >
<title>lru_cache_add (394,112,803 samples, 0.03%)</title><rect x="992.1" y="245" width="0.5" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="995.15" y="255.5" ></text>
</g>
<g >
<title>DSExample (1,141,711,462,432 samples, 100.00%)</title><rect x="10.0" y="453" width="1180.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >DSExample</text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (165,562,670 samples, 0.01%)</title><rect x="633.8" y="69" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="636.78" y="79.5" ></text>
</g>
<g >
<title>dallocx (2,695,718,948 samples, 0.24%)</title><rect x="1172.7" y="421" width="2.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1175.70" y="431.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (6,734,922,389 samples, 0.59%)</title><rect x="627.0" y="325" width="7.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="629.99" y="335.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (160,027,833 samples, 0.01%)</title><rect x="394.6" y="53" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="397.65" y="63.5" ></text>
</g>
<g >
<title>handle_pte_fault (121,434,517 samples, 0.01%)</title><rect x="399.6" y="293" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="402.58" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (142,072,968 samples, 0.01%)</title><rect x="621.9" y="341" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="624.87" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (142,454,732 samples, 0.01%)</title><rect x="382.8" y="325" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="385.75" y="335.5" ></text>
</g>
<g >
<title>tick_sched_timer (123,651,656 samples, 0.01%)</title><rect x="382.8" y="293" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="385.76" y="303.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (199,739,215 samples, 0.02%)</title><rect x="1172.5" y="405" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1175.48" y="415.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (2,124,370,557 samples, 0.19%)</title><rect x="631.8" y="213" width="2.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="634.76" y="223.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (394,850,918 samples, 0.03%)</title><rect x="1062.4" y="213" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1065.37" y="223.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@@GLIBC_2.2.5 (499,115,599 samples, 0.04%)</title><rect x="1185.4" y="421" width="0.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1188.44" y="431.5" ></text>
</g>
<g >
<title>BinarySearchTest (713,980,472,975 samples, 62.54%)</title><rect x="12.0" y="405" width="737.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="15.01" y="415.5" >BinarySearchTest</text>
</g>
<g >
<title>do_futex (2,278,953,902 samples, 0.20%)</title><rect x="756.4" y="325" width="2.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="759.39" y="335.5" ></text>
</g>
<g >
<title>futex_wake (1,024,569,211 samples, 0.09%)</title><rect x="759.9" y="309" width="1.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="762.92" y="319.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (149,683,877 samples, 0.01%)</title><rect x="158.2" y="373" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="161.17" y="383.5" ></text>
</g>
<g >
<title>dallocx (271,772,754 samples, 0.02%)</title><rect x="835.0" y="405" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="838.03" y="415.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (1,207,863,688 samples, 0.11%)</title><rect x="393.6" y="181" width="1.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="396.56" y="191.5" ></text>
</g>
<g >
<title>update_curr (146,619,866 samples, 0.01%)</title><rect x="757.0" y="197" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="760.03" y="207.5" ></text>
</g>
<g >
<title>exc_page_fault (149,683,877 samples, 0.01%)</title><rect x="158.2" y="357" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="161.17" y="367.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (8,422,996,743 samples, 0.74%)</title><rect x="625.2" y="373" width="8.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="628.25" y="383.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getLeftChild (140,123,550 samples, 0.01%)</title><rect x="384.5" y="373" width="0.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="387.50" y="383.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (337,860,333 samples, 0.03%)</title><rect x="758.8" y="389" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="761.76" y="399.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (3,960,237,060 samples, 0.35%)</title><rect x="629.9" y="261" width="4.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="632.86" y="271.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (7,324,726,371 samples, 0.64%)</title><rect x="626.4" y="341" width="7.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="629.39" y="351.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::remove (8,860,800,509 samples, 0.78%)</title><rect x="385.7" y="389" width="9.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="388.65" y="399.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::setRightChild (105,809,108 samples, 0.01%)</title><rect x="629.0" y="277" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="631.98" y="287.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (5,915,514,729 samples, 0.52%)</title><rect x="388.7" y="309" width="6.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="391.70" y="319.5" ></text>
</g>
<g >
<title>all (1,141,711,462,433 samples, 100%)</title><rect x="10.0" y="469" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>exc_page_fault (199,739,215 samples, 0.02%)</title><rect x="1172.5" y="389" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1175.48" y="399.5" ></text>
</g>
<g >
<title>do_wp_page (133,279,758 samples, 0.01%)</title><rect x="11.8" y="325" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="14.83" y="335.5" ></text>
</g>
<g >
<title>up_read (110,310,305 samples, 0.01%)</title><rect x="1063.1" y="341" width="0.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1066.12" y="351.5" ></text>
</g>
<g >
<title>x64_sys_call (1,881,531,957 samples, 0.16%)</title><rect x="1186.2" y="405" width="2.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1189.21" y="415.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (2,921,661,305 samples, 0.26%)</title><rect x="759.1" y="405" width="3.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="762.11" y="415.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::operator (4,257,615,935 samples, 0.37%)</title><rect x="1078.7" y="389" width="4.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1081.69" y="399.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (2,037,169,033 samples, 0.18%)</title><rect x="392.7" y="213" width="2.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="395.71" y="223.5" ></text>
</g>
<g >
<title>page_remove_rmap (195,075,592 samples, 0.02%)</title><rect x="1186.7" y="229" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1189.67" y="239.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (4,705,731,318 samples, 0.41%)</title><rect x="629.1" y="277" width="4.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="632.09" y="287.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::insert (5,082,677,988 samples, 0.45%)</title><rect x="153.2" y="389" width="5.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="156.22" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (188,565,977 samples, 0.02%)</title><rect x="11.8" y="373" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="14.79" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,797,359,231 samples, 0.25%)</title><rect x="755.9" y="389" width="2.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="758.86" y="399.5" ></text>
</g>
<g >
<title>alloc_pages_vma (514,758,598 samples, 0.05%)</title><rect x="1061.7" y="261" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1064.70" y="271.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (269,967,924 samples, 0.02%)</title><rect x="992.3" y="213" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="995.25" y="223.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,744,245,515 samples, 0.15%)</title><rect x="1061.2" y="293" width="1.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1064.23" y="303.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@@GLIBC_2.2.5 (485,638,161 samples, 0.04%)</title><rect x="1189.5" y="437" width="0.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1192.50" y="447.5" ></text>
</g>
<g >
<title>get_page_from_freelist (343,565,293 samples, 0.03%)</title><rect x="1061.8" y="229" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1064.82" y="239.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getRightChild (1,385,134,497 samples, 0.12%)</title><rect x="1075.4" y="373" width="1.5" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1078.45" y="383.5" ></text>
</g>
<g >
<title>[unknown] (14,538,944,976 samples, 1.27%)</title><rect x="1170.9" y="437" width="15.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1173.94" y="447.5" ></text>
</g>
<g >
<title>[[vdso]] (56,773,166,871 samples, 4.97%)</title><rect x="776.3" y="389" width="58.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="779.34" y="399.5" >[[vdso]]</text>
</g>
<g >
<title>__handle_mm_fault (136,660,216 samples, 0.01%)</title><rect x="399.6" y="309" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="402.57" y="319.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (7,323,791,271 samples, 0.64%)</title><rect x="387.2" y="341" width="7.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="390.24" y="351.5" ></text>
</g>
<g >
<title>unmap_vmas (1,876,425,773 samples, 0.16%)</title><rect x="1186.2" y="309" width="2.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1189.21" y="319.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (169,763,775 samples, 0.01%)</title><rect x="399.5" y="373" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="402.54" y="383.5" ></text>
</g>
<g >
<title>charge_memcg (147,601,193 samples, 0.01%)</title><rect x="991.7" y="245" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="994.65" y="255.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::setRightChild (110,711,372 samples, 0.01%)</title><rect x="390.0" y="277" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="392.95" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (146,400,122 samples, 0.01%)</title><rect x="382.8" y="341" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="385.75" y="351.5" ></text>
</g>
<g >
<title>do_futex (1,391,074,025 samples, 0.12%)</title><rect x="759.9" y="325" width="1.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="762.88" y="335.5" ></text>
</g>
<g >
<title>__handle_mm_fault (147,629,703 samples, 0.01%)</title><rect x="11.8" y="357" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="14.82" y="367.5" ></text>
</g>
<g >
<title>free_unref_page_commit.constprop.0 (394,872,128 samples, 0.03%)</title><rect x="1187.6" y="165" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1190.60" y="175.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (566,218,031 samples, 0.05%)</title><rect x="1062.2" y="261" width="0.6" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1065.24" y="271.5" ></text>
</g>
<g >
<title>mallocx (8,897,853,094 samples, 0.78%)</title><rect x="1175.5" y="421" width="9.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1178.49" y="431.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (1,573,858,034 samples, 0.14%)</title><rect x="393.2" y="197" width="1.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="396.18" y="207.5" ></text>
</g>
<g >
<title>handle_mm_fault (140,289,553 samples, 0.01%)</title><rect x="399.6" y="325" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="402.56" y="335.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;int&gt;::operator (4,927,138,373 samples, 0.43%)</title><rect x="1083.1" y="389" width="5.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1086.09" y="399.5" ></text>
</g>
<g >
<title>psi_task_switch (403,609,608 samples, 0.04%)</title><rect x="757.9" y="245" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="760.93" y="255.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (705,514,705 samples, 0.06%)</title><rect x="394.1" y="149" width="0.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="397.08" y="159.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::operator (797,169,523 samples, 0.07%)</title><rect x="1087.4" y="373" width="0.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1090.36" y="383.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (5,431,273,819 samples, 0.48%)</title><rect x="628.3" y="293" width="5.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="631.34" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (144,264,101 samples, 0.01%)</title><rect x="1172.5" y="341" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1175.52" y="351.5" ></text>
</g>
<g >
<title>find_vma (172,753,656 samples, 0.02%)</title><rect x="991.1" y="325" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="994.13" y="335.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (1,121,322,682,279 samples, 98.21%)</title><rect x="12.0" y="421" width="1158.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="15.01" y="431.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>__pagevec_lru_add (481,131,140 samples, 0.04%)</title><rect x="1062.3" y="229" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1065.33" y="239.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (7,964,717,820 samples, 0.70%)</title><rect x="386.6" y="357" width="8.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="389.58" y="367.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1,136,582,429 samples, 0.10%)</title><rect x="1186.9" y="213" width="1.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1189.87" y="223.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (3,923,205,748 samples, 0.34%)</title><rect x="390.8" y="261" width="4.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="393.76" y="271.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1,876,425,773 samples, 0.16%)</title><rect x="1186.2" y="261" width="2.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1189.21" y="271.5" ></text>
</g>
<g >
<title>mallocx (4,259,192,376 samples, 0.37%)</title><rect x="993.1" y="373" width="4.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="996.09" y="383.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::insert (67,004,398,392 samples, 5.87%)</title><rect x="938.5" y="389" width="69.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="941.48" y="399.5" >numa&lt;Bi..</text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (3,493,465,839 samples, 0.31%)</title><rect x="1163.0" y="405" width="3.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1166.03" y="415.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getData (1,458,272,606 samples, 0.13%)</title><rect x="383.0" y="373" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="385.99" y="383.5" ></text>
</g>
<g >
<title>do_exit (1,881,531,957 samples, 0.16%)</title><rect x="1186.2" y="373" width="2.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1189.21" y="383.5" ></text>
</g>
<g >
<title>handle_pte_fault (147,627,112 samples, 0.01%)</title><rect x="11.8" y="341" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="14.82" y="351.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,308,243,000 samples, 0.11%)</title><rect x="991.4" y="309" width="1.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="994.37" y="319.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1,196,784,474 samples, 0.10%)</title><rect x="1186.9" y="229" width="1.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1189.87" y="239.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (302,362,919 samples, 0.03%)</title><rect x="1187.7" y="149" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1190.70" y="159.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (1,647,586,105 samples, 0.14%)</title><rect x="632.3" y="197" width="1.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="635.25" y="207.5" ></text>
</g>
</g>
</svg>
