<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::lookup (7,775,167,964 samples, 0.10%)</title><rect x="946.3" y="453" width="1.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="949.33" y="463.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (1,485,449,727 samples, 0.02%)</title><rect x="473.8" y="85" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="476.84" y="95.5" ></text>
</g>
<g >
<title>[unknown] (2,360,930,636 samples, 0.03%)</title><rect x="782.9" y="325" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="785.95" y="335.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (97,607,598,577 samples, 1.27%)</title><rect x="459.0" y="421" width="15.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="462.04" y="431.5" ></text>
</g>
<g >
<title>[unknown] (2,574,534,211 samples, 0.03%)</title><rect x="486.4" y="357" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="489.40" y="367.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getData (148,471,898,111 samples, 1.94%)</title><rect x="50.3" y="437" width="22.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="53.27" y="447.5" >n..</text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::setLeftChild (1,395,121,900 samples, 0.02%)</title><rect x="797.7" y="405" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="800.68" y="415.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (3,715,333,483 samples, 0.05%)</title><rect x="473.5" y="149" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="476.50" y="159.5" ></text>
</g>
<g >
<title>[unknown] (9,983,309,416 samples, 0.13%)</title><rect x="879.7" y="261" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="882.66" y="271.5" ></text>
</g>
<g >
<title>[unknown] (1,574,609,696 samples, 0.02%)</title><rect x="144.9" y="309" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="147.93" y="319.5" ></text>
</g>
<g >
<title>mallocx (47,894,585,226 samples, 0.63%)</title><rect x="1180.2" y="469" width="7.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1183.16" y="479.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getLeftChild (40,659,969,432 samples, 0.53%)</title><rect x="976.8" y="437" width="6.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="979.82" y="447.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@@GLIBC_2.2.5 (520,411,230,408 samples, 6.79%)</title><rect x="1060.3" y="453" width="80.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1063.27" y="463.5" >pthread_m..</text>
</g>
<g >
<title>[unknown] (5,575,556,492 samples, 0.07%)</title><rect x="1178.2" y="181" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1181.15" y="191.5" ></text>
</g>
<g >
<title>[unknown] (3,085,215,852 samples, 0.04%)</title><rect x="782.8" y="389" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="785.84" y="399.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::remove (695,267,300 samples, 0.01%)</title><rect x="947.5" y="453" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="950.53" y="463.5" ></text>
</g>
<g >
<title>[unknown] (3,277,670,211 samples, 0.04%)</title><rect x="486.3" y="405" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="489.29" y="415.5" ></text>
</g>
<g >
<title>[unknown] (762,534,621 samples, 0.01%)</title><rect x="1179.2" y="341" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1182.24" y="351.5" ></text>
</g>
<g >
<title>[unknown] (4,120,892,672 samples, 0.05%)</title><rect x="1178.4" y="149" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1181.38" y="159.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (8,265,119,327 samples, 0.11%)</title><rect x="472.8" y="197" width="1.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="475.79" y="207.5" ></text>
</g>
<g >
<title>[unknown] (6,744,545,607 samples, 0.09%)</title><rect x="1178.0" y="213" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1180.97" y="223.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (2,303,566,874 samples, 0.03%)</title><rect x="811.1" y="117" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="814.15" y="127.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (6,278,585,748 samples, 0.08%)</title><rect x="473.1" y="181" width="1.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="476.10" y="191.5" ></text>
</g>
<g >
<title>[unknown] (2,478,340,746 samples, 0.03%)</title><rect x="444.1" y="325" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="447.10" y="335.5" ></text>
</g>
<g >
<title>[unknown] (3,190,646,026 samples, 0.04%)</title><rect x="486.3" y="389" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="489.30" y="399.5" ></text>
</g>
<g >
<title>[unknown] (669,419,958 samples, 0.01%)</title><rect x="1140.3" y="389" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1143.31" y="399.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@@GLIBC_2.2.5 (116,823,353,349 samples, 1.52%)</title><rect x="1140.5" y="453" width="18.0" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1143.48" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1,458,447,073 samples, 0.02%)</title><rect x="144.9" y="293" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="147.95" y="303.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getLeftChild (39,719,386,960 samples, 0.52%)</title><rect x="956.6" y="437" width="6.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="959.63" y="447.5" ></text>
</g>
<g >
<title>[unknown] (2,109,859,220 samples, 0.03%)</title><rect x="486.5" y="341" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="489.47" y="351.5" ></text>
</g>
<g >
<title>[unknown] (1,592,086,660 samples, 0.02%)</title><rect x="12.8" y="357" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.80" y="367.5" ></text>
</g>
<g >
<title>[unknown] (6,744,545,607 samples, 0.09%)</title><rect x="1178.0" y="341" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1180.97" y="351.5" ></text>
</g>
<g >
<title>umf_alloc (6,932,162,027 samples, 0.09%)</title><rect x="488.4" y="421" width="1.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="491.45" y="431.5" ></text>
</g>
<g >
<title>mallocx (5,555,721,808 samples, 0.07%)</title><rect x="1020.5" y="421" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1023.46" y="431.5" ></text>
</g>
<g >
<title>[unknown] (29,821,908,579 samples, 0.39%)</title><rect x="876.6" y="357" width="4.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="879.61" y="367.5" ></text>
</g>
<g >
<title>[unknown] (11,792,282,933 samples, 0.15%)</title><rect x="1049.8" y="357" width="1.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1052.84" y="367.5" ></text>
</g>
<g >
<title>[unknown] (1,398,187,910 samples, 0.02%)</title><rect x="783.1" y="293" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="786.10" y="303.5" ></text>
</g>
<g >
<title>[libjemalloc.so.2] (19,472,535,509 samples, 0.25%)</title><rect x="10.0" y="485" width="3.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.05" y="495.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (4,389,165,382 samples, 0.06%)</title><rect x="473.4" y="165" width="0.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="476.39" y="175.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (18,328,569,011 samples, 0.24%)</title><rect x="1170.7" y="453" width="2.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1173.66" y="463.5" ></text>
</g>
<g >
<title>mallocx (7,423,527,348 samples, 0.10%)</title><rect x="1188.6" y="485" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1191.64" y="495.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getLeftChild (44,333,494,908 samples, 0.58%)</title><rect x="73.1" y="437" width="6.9" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="76.14" y="447.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::~numa (1,096,109,631 samples, 0.01%)</title><rect x="945.8" y="453" width="0.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="948.83" y="463.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (29,768,379,562 samples, 0.39%)</title><rect x="469.5" y="277" width="4.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="472.48" y="287.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (59,175,605,947 samples, 0.77%)</title><rect x="802.4" y="341" width="9.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="805.39" y="351.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::operator (44,047,357,249 samples, 0.57%)</title><rect x="861.2" y="421" width="6.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="864.23" y="431.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getRightChild (1,320,680,417 samples, 0.02%)</title><rect x="1022.6" y="421" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1025.62" y="431.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::lookup (2,008,605,611,926 samples, 26.22%)</title><rect x="148.3" y="437" width="309.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="151.25" y="447.5" >numa&lt;BinarySearchTree, 0, NumaAllocator, ..</text>
</g>
<g >
<title>dallocx (1,391,503,418 samples, 0.02%)</title><rect x="944.8" y="453" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="947.81" y="463.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getData (787,784,012 samples, 0.01%)</title><rect x="795.6" y="421" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="798.58" y="431.5" ></text>
</g>
<g >
<title>[unknown] (1,370,266,886 samples, 0.02%)</title><rect x="444.3" y="293" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="447.28" y="303.5" ></text>
</g>
<g >
<title>[unknown] (20,067,273,232 samples, 0.26%)</title><rect x="1017.4" y="421" width="3.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1020.37" y="431.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getData (803,890,308 samples, 0.01%)</title><rect x="146.9" y="421" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="149.90" y="431.5" ></text>
</g>
<g >
<title>[unknown] (3,673,423,044 samples, 0.05%)</title><rect x="443.9" y="421" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="446.92" y="431.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (4,696,777,215 samples, 0.06%)</title><rect x="810.8" y="165" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="813.78" y="175.5" ></text>
</g>
<g >
<title>[unknown] (48,629,108,680 samples, 0.63%)</title><rect x="873.7" y="437" width="7.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="876.71" y="447.5" ></text>
</g>
<g >
<title>BinarySearchTest (5,551,615,281,515 samples, 72.46%)</title><rect x="13.0" y="453" width="855.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="16.05" y="463.5" >BinarySearchTest</text>
</g>
<g >
<title>[unknown] (22,253,583,714 samples, 0.29%)</title><rect x="887.4" y="373" width="3.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="890.45" y="383.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (58,715,337,016 samples, 0.77%)</title><rect x="465.0" y="341" width="9.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="468.02" y="351.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wake (62,824,506,238 samples, 0.82%)</title><rect x="881.2" y="453" width="9.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="884.20" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1,136,087,791 samples, 0.01%)</title><rect x="890.7" y="277" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="893.70" y="287.5" ></text>
</g>
<g >
<title>[unknown] (795,759,912 samples, 0.01%)</title><rect x="1179.2" y="373" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1182.24" y="383.5" ></text>
</g>
<g >
<title>[unknown] (6,744,545,607 samples, 0.09%)</title><rect x="1178.0" y="373" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1180.97" y="383.5" ></text>
</g>
<g >
<title>[unknown] (3,143,246,062 samples, 0.04%)</title><rect x="782.8" y="405" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="785.83" y="415.5" ></text>
</g>
<g >
<title>[unknown] (3,349,262,975 samples, 0.04%)</title><rect x="782.8" y="421" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="785.80" y="431.5" ></text>
</g>
<g >
<title>[unknown] (762,534,621 samples, 0.01%)</title><rect x="1179.2" y="357" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1182.24" y="367.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::insert (99,734,461,820 samples, 1.30%)</title><rect x="474.2" y="437" width="15.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="477.16" y="447.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::operator (15,049,952,787 samples, 0.20%)</title><rect x="1055.2" y="437" width="2.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1058.15" y="447.5" ></text>
</g>
<g >
<title>[unknown] (13,154,524,339 samples, 0.17%)</title><rect x="1049.6" y="373" width="2.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1052.63" y="383.5" ></text>
</g>
<g >
<title>[unknown] (1,758,835,567 samples, 0.02%)</title><rect x="486.5" y="309" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="489.52" y="319.5" ></text>
</g>
<g >
<title>[unknown] (1,656,600,597 samples, 0.02%)</title><rect x="12.8" y="421" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.79" y="431.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (87,774,664,476 samples, 1.15%)</title><rect x="460.5" y="405" width="13.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="463.55" y="415.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (81,223,285,966 samples, 1.06%)</title><rect x="461.6" y="389" width="12.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="464.56" y="399.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (78,443,561,982 samples, 1.02%)</title><rect x="1158.6" y="453" width="12.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1161.57" y="463.5" ></text>
</g>
<g >
<title>[unknown] (10,928,492,504 samples, 0.14%)</title><rect x="1050.0" y="341" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1052.98" y="351.5" ></text>
</g>
<g >
<title>[unknown] (1,459,238,114 samples, 0.02%)</title><rect x="12.8" y="309" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.82" y="319.5" ></text>
</g>
<g >
<title>umf_alloc (1,626,041,712 samples, 0.02%)</title><rect x="1060.0" y="437" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1063.02" y="447.5" ></text>
</g>
<g >
<title>[unknown] (2,303,497,946 samples, 0.03%)</title><rect x="144.8" y="357" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="147.82" y="367.5" ></text>
</g>
<g >
<title>[unknown] (7,533,108,099 samples, 0.10%)</title><rect x="880.0" y="245" width="1.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="883.04" y="255.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::insert (2,119,517,255 samples, 0.03%)</title><rect x="946.0" y="453" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="949.00" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (17,349,570,590 samples, 0.23%)</title><rect x="870.6" y="453" width="2.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="873.56" y="463.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (1,839,341,067 samples, 0.02%)</title><rect x="811.2" y="101" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="814.22" y="111.5" ></text>
</g>
<g >
<title>[unknown] (696,151,205 samples, 0.01%)</title><rect x="1177.9" y="453" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1180.86" y="463.5" ></text>
</g>
<g >
<title>[unknown] (10,529,801,207 samples, 0.14%)</title><rect x="1050.0" y="325" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1053.04" y="335.5" ></text>
</g>
<g >
<title>umf_alloc (5,382,358,289 samples, 0.07%)</title><rect x="1054.3" y="421" width="0.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1057.32" y="431.5" ></text>
</g>
<g >
<title>[unknown] (1,369,220,709 samples, 0.02%)</title><rect x="783.1" y="277" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="786.10" y="287.5" ></text>
</g>
<g >
<title>[unknown] (13,885,439,053 samples, 0.18%)</title><rect x="1049.5" y="405" width="2.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1052.52" y="415.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@plt (695,976,436 samples, 0.01%)</title><rect x="1158.5" y="453" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1161.47" y="463.5" ></text>
</g>
<g >
<title>mallocx (11,209,515,461 samples, 0.15%)</title><rect x="145.2" y="421" width="1.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="148.17" y="431.5" ></text>
</g>
<g >
<title>all (7,661,947,633,582 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>[unknown] (5,674,872,678 samples, 0.07%)</title><rect x="1178.1" y="197" width="0.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1181.14" y="207.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (992,970,986 samples, 0.01%)</title><rect x="811.4" y="69" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="814.35" y="79.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (36,609,675,575 samples, 0.48%)</title><rect x="468.4" y="293" width="5.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="471.43" y="303.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::insert (102,968,716,678 samples, 1.34%)</title><rect x="132.4" y="437" width="15.9" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="135.39" y="447.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getRightChild (71,955,804,100 samples, 0.94%)</title><rect x="80.0" y="437" width="11.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="82.96" y="447.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getLeftChild (1,492,253,555 samples, 0.02%)</title><rect x="1022.4" y="421" width="0.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1025.39" y="431.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::insert (205,162,228,750 samples, 2.68%)</title><rect x="1023.6" y="437" width="31.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1026.56" y="447.5" >nu..</text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getData (48,235,879,705 samples, 0.63%)</title><rect x="969.4" y="437" width="7.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="972.39" y="447.5" ></text>
</g>
<g >
<title>[unknown] (3,828,943,877 samples, 0.05%)</title><rect x="890.3" y="309" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="893.29" y="319.5" ></text>
</g>
<g >
<title>[unknown] (1,954,950,925 samples, 0.03%)</title><rect x="144.9" y="341" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="147.87" y="351.5" ></text>
</g>
<g >
<title>[unknown] (61,281,300,274 samples, 0.80%)</title><rect x="881.4" y="437" width="9.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="884.44" y="447.5" ></text>
</g>
<g >
<title>[unknown] (1,877,800,580 samples, 0.02%)</title><rect x="486.5" y="325" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="489.50" y="335.5" ></text>
</g>
<g >
<title>[unknown] (2,939,921,896 samples, 0.04%)</title><rect x="782.9" y="373" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="785.86" y="383.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getRightChild (42,301,812,284 samples, 0.55%)</title><rect x="962.7" y="437" width="6.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="965.74" y="447.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (51,681,538,159 samples, 0.67%)</title><rect x="466.1" y="325" width="8.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="469.11" y="335.5" ></text>
</g>
<g >
<title>[unknown] (2,045,032,188 samples, 0.03%)</title><rect x="890.6" y="293" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="893.56" y="303.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getData (44,231,598,113 samples, 0.58%)</title><rect x="949.8" y="437" width="6.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="952.81" y="447.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::setLeftChild (2,386,096,183 samples, 0.03%)</title><rect x="458.6" y="421" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="461.59" y="431.5" ></text>
</g>
<g >
<title>pthread_mutex_trylock@@GLIBC_2.34 (4,902,722,917 samples, 0.06%)</title><rect x="1187.5" y="469" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1190.55" y="479.5" ></text>
</g>
<g >
<title>[unknown] (12,489,765,474 samples, 0.16%)</title><rect x="889.0" y="325" width="1.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="891.95" y="335.5" ></text>
</g>
<g >
<title>mallocx (9,925,005,404 samples, 0.13%)</title><rect x="486.8" y="421" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="489.79" y="431.5" ></text>
</g>
<g >
<title>[unknown] (883,259,019 samples, 0.01%)</title><rect x="486.7" y="261" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="489.66" y="271.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (23,673,752,991 samples, 0.31%)</title><rect x="470.4" y="261" width="3.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="473.42" y="271.5" ></text>
</g>
<g >
<title>[unknown] (1,497,364,122 samples, 0.02%)</title><rect x="486.6" y="293" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="489.56" y="303.5" ></text>
</g>
<g >
<title>[unknown] (1,486,116,866 samples, 0.02%)</title><rect x="444.3" y="309" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="447.26" y="319.5" ></text>
</g>
<g >
<title>umf_alloc (7,520,242,846 samples, 0.10%)</title><rect x="147.1" y="421" width="1.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="150.09" y="431.5" ></text>
</g>
<g >
<title>[unknown] (874,645,151 samples, 0.01%)</title><rect x="145.0" y="261" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="148.04" y="271.5" ></text>
</g>
<g >
<title>[unknown] (14,536,426,010 samples, 0.19%)</title><rect x="1018.2" y="389" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1021.22" y="399.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getRightChild (32,952,431,184 samples, 0.43%)</title><rect x="789.7" y="421" width="5.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="792.73" y="431.5" ></text>
</g>
<g >
<title>[unknown] (26,289,133,544 samples, 0.34%)</title><rect x="886.8" y="421" width="4.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.83" y="431.5" ></text>
</g>
<g >
<title>[unknown] (10,856,952,212 samples, 0.14%)</title><rect x="1018.8" y="309" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1021.79" y="319.5" ></text>
</g>
<g >
<title>[unknown] (961,274,858 samples, 0.01%)</title><rect x="1179.2" y="437" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1182.21" y="447.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getLeftChild (1,396,598,148 samples, 0.02%)</title><rect x="451.2" y="421" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="454.24" y="431.5" ></text>
</g>
<g >
<title>[unknown] (3,384,871,933 samples, 0.04%)</title><rect x="144.6" y="421" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="147.65" y="431.5" ></text>
</g>
<g >
<title>[unknown] (1,940,584,278 samples, 0.03%)</title><rect x="1178.7" y="101" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1181.71" y="111.5" ></text>
</g>
<g >
<title>[unknown] (1,127,419,998 samples, 0.01%)</title><rect x="12.9" y="277" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.87" y="287.5" ></text>
</g>
<g >
<title>[unknown] (16,674,838,646 samples, 0.22%)</title><rect x="878.6" y="293" width="2.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="881.63" y="303.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::insert (222,343,260,135 samples, 2.90%)</title><rect x="989.3" y="437" width="34.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="992.31" y="447.5" >nu..</text>
</g>
<g >
<title>[unknown] (2,897,729,766 samples, 0.04%)</title><rect x="1178.6" y="133" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1181.57" y="143.5" ></text>
</g>
<g >
<title>[unknown] (6,744,545,607 samples, 0.09%)</title><rect x="1178.0" y="325" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1180.97" y="335.5" ></text>
</g>
<g >
<title>[unknown] (2,856,640,381 samples, 0.04%)</title><rect x="144.7" y="389" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="147.73" y="399.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::setRightChild (840,778,841 samples, 0.01%)</title><rect x="460.4" y="405" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="463.42" y="415.5" ></text>
</g>
<g >
<title>[unknown] (669,419,958 samples, 0.01%)</title><rect x="1140.3" y="405" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1143.31" y="415.5" ></text>
</g>
<g >
<title>[unknown] (6,744,545,607 samples, 0.09%)</title><rect x="1178.0" y="421" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1180.97" y="431.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getData (150,945,503,528 samples, 1.97%)</title><rect x="91.1" y="437" width="23.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="94.05" y="447.5" >n..</text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getRightChild (39,830,364,097 samples, 0.52%)</title><rect x="451.5" y="421" width="6.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="454.46" y="431.5" ></text>
</g>
<g >
<title>[unknown] (696,384,783 samples, 0.01%)</title><rect x="1179.3" y="325" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1182.25" y="335.5" ></text>
</g>
<g >
<title>[unknown] (33,315,550,539 samples, 0.43%)</title><rect x="876.1" y="405" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="879.07" y="415.5" ></text>
</g>
<g >
<title>[[vdso]] (278,581,684,120 samples, 3.64%)</title><rect x="901.9" y="437" width="42.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="904.90" y="447.5" >[[vd..</text>
</g>
<g >
<title>[unknown] (30,639,339,015 samples, 0.40%)</title><rect x="876.5" y="373" width="4.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="879.48" y="383.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (18,831,409,922 samples, 0.25%)</title><rect x="471.2" y="245" width="2.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="474.17" y="255.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;int&gt;::operator (16,549,099,982 samples, 0.22%)</title><rect x="1057.5" y="437" width="2.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1060.47" y="447.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock@@GLIBC_2.2.5 (1,186,124,312 samples, 0.02%)</title><rect x="1189.8" y="485" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1192.81" y="495.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getData (40,025,664,502 samples, 0.52%)</title><rect x="783.3" y="421" width="6.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="786.31" y="431.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (697,336,902 samples, 0.01%)</title><rect x="474.0" y="37" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="476.96" y="47.5" ></text>
</g>
<g >
<title>[unknown] (1,558,919,836 samples, 0.02%)</title><rect x="12.8" y="341" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.81" y="351.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;int&gt;::operator (208,413,148,577 samples, 2.72%)</title><rect x="835.9" y="437" width="32.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="838.92" y="447.5" >st..</text>
</g>
<g >
<title>[unknown] (6,744,545,607 samples, 0.09%)</title><rect x="1178.0" y="389" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1180.97" y="399.5" ></text>
</g>
<g >
<title>[unknown] (9,998,270,576 samples, 0.13%)</title><rect x="1050.1" y="309" width="1.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1053.12" y="319.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (44,259,517,750 samples, 0.58%)</title><rect x="804.7" y="309" width="6.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="807.69" y="319.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (7,553,391,883,903 samples, 98.58%)</title><rect x="13.0" y="469" width="1163.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="16.05" y="479.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (2,358,036,254 samples, 0.03%)</title><rect x="473.7" y="117" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="476.70" y="127.5" ></text>
</g>
<g >
<title>[unknown] (12,646,405,398 samples, 0.17%)</title><rect x="1018.5" y="357" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1021.51" y="367.5" ></text>
</g>
<g >
<title>[unknown] (1,623,530,111 samples, 0.02%)</title><rect x="12.8" y="405" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.80" y="415.5" ></text>
</g>
<g >
<title>[unknown] (669,419,958 samples, 0.01%)</title><rect x="1140.3" y="357" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1143.31" y="367.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (30,531,303,325 samples, 0.40%)</title><rect x="806.8" y="277" width="4.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="809.80" y="287.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (81,233,582,441 samples, 1.06%)</title><rect x="799.0" y="389" width="12.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="801.99" y="399.5" ></text>
</g>
<g >
<title>[unknown] (7,008,517,225 samples, 0.09%)</title><rect x="1050.6" y="277" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1053.58" y="287.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::lookup (1,982,296,918,217 samples, 25.87%)</title><rect x="489.5" y="437" width="305.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="492.52" y="447.5" >numa&lt;BinarySearchTree, 1, NumaAllocator, ..</text>
</g>
<g >
<title>[unknown] (756,342,349 samples, 0.01%)</title><rect x="1140.3" y="421" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1143.30" y="431.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getLeftChild (1,660,522,811 samples, 0.02%)</title><rect x="789.5" y="421" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="792.48" y="431.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getData (7,673,145,823 samples, 0.10%)</title><rect x="1052.6" y="421" width="1.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1055.61" y="431.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getData (6,656,022,600 samples, 0.09%)</title><rect x="1021.4" y="421" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1024.36" y="431.5" ></text>
</g>
<g >
<title>[unknown] (1,600,404,306 samples, 0.02%)</title><rect x="783.1" y="309" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="786.06" y="319.5" ></text>
</g>
<g >
<title>[unknown] (17,931,675,964 samples, 0.23%)</title><rect x="878.4" y="309" width="2.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="881.44" y="319.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (2,709,694,405 samples, 0.04%)</title><rect x="811.1" y="133" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="814.09" y="143.5" ></text>
</g>
<g >
<title>[unknown] (1,558,919,836 samples, 0.02%)</title><rect x="12.8" y="325" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.81" y="335.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getLeftChild (41,287,427,154 samples, 0.54%)</title><rect x="114.3" y="437" width="6.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="117.30" y="447.5" ></text>
</g>
<g >
<title>[unknown] (6,744,545,607 samples, 0.09%)</title><rect x="1178.0" y="453" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1180.97" y="463.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (3,556,454,287 samples, 0.05%)</title><rect x="811.0" y="149" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="813.96" y="159.5" ></text>
</g>
<g >
<title>[unknown] (961,724,535 samples, 0.01%)</title><rect x="145.0" y="277" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="148.02" y="287.5" ></text>
</g>
<g >
<title>[unknown] (1,889,097,066 samples, 0.02%)</title><rect x="12.8" y="469" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.76" y="479.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (7,553,391,883,903 samples, 98.58%)</title><rect x="13.0" y="485" width="1163.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="16.05" y="495.5" >[libstdc++.so.6.0.30]</text>
</g>
<g >
<title>[unknown] (6,744,545,607 samples, 0.09%)</title><rect x="1178.0" y="293" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1180.97" y="303.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::setRightChild (844,129,649 samples, 0.01%)</title><rect x="461.4" y="389" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="464.43" y="399.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (869,812,201 samples, 0.01%)</title><rect x="473.9" y="53" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="476.93" y="63.5" ></text>
</g>
<g >
<title>[unknown] (11,354,211,068 samples, 0.15%)</title><rect x="1018.7" y="325" width="1.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1021.71" y="335.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (99,803,592,473 samples, 1.30%)</title><rect x="796.1" y="421" width="15.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="799.13" y="431.5" ></text>
</g>
<g >
<title>[unknown] (3,058,768,824 samples, 0.04%)</title><rect x="444.0" y="373" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="447.02" y="383.5" ></text>
</g>
<g >
<title>[unknown] (2,917,832,995 samples, 0.04%)</title><rect x="144.7" y="405" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="147.72" y="415.5" ></text>
</g>
<g >
<title>[unknown] (6,744,545,607 samples, 0.09%)</title><rect x="1178.0" y="245" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1180.97" y="255.5" ></text>
</g>
<g >
<title>[unknown] (3,568,508,207 samples, 0.05%)</title><rect x="486.2" y="421" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="489.24" y="431.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getLeftChild (1,926,641,661 samples, 0.03%)</title><rect x="1053.8" y="421" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1056.80" y="431.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getRightChild (75,685,311,241 samples, 0.99%)</title><rect x="120.7" y="437" width="11.6" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="123.66" y="447.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (74,356,906,168 samples, 0.97%)</title><rect x="800.1" y="373" width="11.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="803.05" y="383.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (44,194,478,279 samples, 0.58%)</title><rect x="467.3" y="309" width="6.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="470.26" y="319.5" ></text>
</g>
<g >
<title>[unknown] (2,881,935,399 samples, 0.04%)</title><rect x="782.9" y="357" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="785.87" y="367.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::setLeftChild (1,651,999,032 samples, 0.02%)</title><rect x="945.0" y="453" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="948.02" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1,656,600,597 samples, 0.02%)</title><rect x="12.8" y="453" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.79" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1,690,658,348 samples, 0.02%)</title><rect x="144.9" y="325" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="147.91" y="335.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (67,112,095,936 samples, 0.88%)</title><rect x="801.2" y="357" width="10.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="804.17" y="367.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::lookup (5,352,952,451 samples, 0.07%)</title><rect x="948.0" y="453" width="0.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="950.98" y="463.5" ></text>
</g>
<g >
<title>[unknown] (6,810,809,799 samples, 0.09%)</title><rect x="1178.0" y="469" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1180.96" y="479.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (1,312,132,794 samples, 0.02%)</title><rect x="811.3" y="85" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="814.30" y="95.5" ></text>
</g>
<g >
<title>[unknown] (6,744,545,607 samples, 0.09%)</title><rect x="1178.0" y="309" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1180.97" y="319.5" ></text>
</g>
<g >
<title>[unknown] (1,058,343,161 samples, 0.01%)</title><rect x="486.6" y="277" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="489.63" y="287.5" ></text>
</g>
<g >
<title>[unknown] (19,535,568,372 samples, 0.25%)</title><rect x="878.2" y="325" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="881.19" y="335.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::setLeftChild (1,047,804,275 samples, 0.01%)</title><rect x="460.3" y="405" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="463.26" y="415.5" ></text>
</g>
<g >
<title>[unknown] (6,178,291,552 samples, 0.08%)</title><rect x="1050.7" y="261" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1053.71" y="271.5" ></text>
</g>
<g >
<title>[unknown] (1,592,086,660 samples, 0.02%)</title><rect x="12.8" y="389" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.80" y="399.5" ></text>
</g>
<g >
<title>[unknown] (6,744,545,607 samples, 0.09%)</title><rect x="1178.0" y="357" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1180.97" y="367.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::~numa (761,744,654 samples, 0.01%)</title><rect x="945.4" y="453" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="948.43" y="463.5" ></text>
</g>
<g >
<title>[[vdso]] (16,377,267,442 samples, 0.21%)</title><rect x="868.0" y="453" width="2.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="871.04" y="463.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (14,173,540,902 samples, 0.18%)</title><rect x="471.9" y="229" width="2.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="474.88" y="239.5" ></text>
</g>
<g >
<title>[unknown] (5,180,712,788 samples, 0.07%)</title><rect x="1178.2" y="165" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1181.21" y="175.5" ></text>
</g>
<g >
<title>[unknown] (1,656,600,597 samples, 0.02%)</title><rect x="12.8" y="437" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.79" y="447.5" ></text>
</g>
<g >
<title>[unknown] (6,744,545,607 samples, 0.09%)</title><rect x="1178.0" y="437" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1180.97" y="447.5" ></text>
</g>
<g >
<title>[unknown] (6,744,545,607 samples, 0.09%)</title><rect x="1178.0" y="261" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1180.97" y="271.5" ></text>
</g>
<g >
<title>[unknown] (31,505,186,552 samples, 0.41%)</title><rect x="876.3" y="389" width="4.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="879.35" y="399.5" ></text>
</g>
<g >
<title>[unknown] (10,161,543,053 samples, 0.13%)</title><rect x="1018.9" y="293" width="1.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1021.90" y="303.5" ></text>
</g>
<g >
<title>[unknown] (2,369,048,731 samples, 0.03%)</title><rect x="1178.6" y="117" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1181.65" y="127.5" ></text>
</g>
<g >
<title>[unknown] (21,439,439,241 samples, 0.28%)</title><rect x="887.6" y="357" width="3.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="890.57" y="367.5" ></text>
</g>
<g >
<title>[unknown] (2,827,631,350 samples, 0.04%)</title><rect x="144.7" y="373" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="147.73" y="383.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (51,687,901,909 samples, 0.67%)</title><rect x="803.5" y="325" width="8.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="806.54" y="335.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (73,236,148,239 samples, 0.96%)</title><rect x="462.8" y="373" width="11.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="465.79" y="383.5" ></text>
</g>
<g >
<title>[unknown] (1,223,549,671 samples, 0.02%)</title><rect x="444.3" y="277" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="447.30" y="287.5" ></text>
</g>
<g >
<title>[unknown] (3,146,845,583 samples, 0.04%)</title><rect x="444.0" y="389" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="447.00" y="399.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (1,862,463,692 samples, 0.02%)</title><rect x="473.8" y="101" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="476.78" y="111.5" ></text>
</g>
<g >
<title>[unknown] (3,040,508,626 samples, 0.04%)</title><rect x="486.3" y="373" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="489.33" y="383.5" ></text>
</g>
<g >
<title>[unknown] (1,079,893,872 samples, 0.01%)</title><rect x="783.1" y="261" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="786.15" y="271.5" ></text>
</g>
<g >
<title>numa_BST_init (723,077,808,521 samples, 9.44%)</title><rect x="948.9" y="453" width="111.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="951.91" y="463.5" >numa_BST_init</text>
</g>
<g >
<title>pthread_mutex_unlock@@GLIBC_2.2.5 (1,456,336,712 samples, 0.02%)</title><rect x="1188.3" y="469" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1191.30" y="479.5" ></text>
</g>
<g >
<title>[unknown] (25,243,843,817 samples, 0.33%)</title><rect x="887.0" y="405" width="3.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.99" y="415.5" ></text>
</g>
<g >
<title>[unknown] (79,490,558,454 samples, 1.04%)</title><rect x="1176.3" y="485" width="12.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1179.33" y="495.5" ></text>
</g>
<g >
<title>[unknown] (2,884,743,180 samples, 0.04%)</title><rect x="444.0" y="357" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="447.04" y="367.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::setRightChild (755,977,673 samples, 0.01%)</title><rect x="462.7" y="373" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="465.67" y="383.5" ></text>
</g>
<g >
<title>[unknown] (6,744,545,607 samples, 0.09%)</title><rect x="1178.0" y="277" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1180.97" y="287.5" ></text>
</g>
<g >
<title>[unknown] (1,392,809,898 samples, 0.02%)</title><rect x="12.8" y="293" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.83" y="303.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (11,276,558,601 samples, 0.15%)</title><rect x="809.8" y="213" width="1.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="812.77" y="223.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (19,008,432,938 samples, 0.25%)</title><rect x="808.6" y="245" width="2.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="811.58" y="255.5" ></text>
</g>
<g >
<title>[unknown] (33,956,487,447 samples, 0.44%)</title><rect x="876.0" y="421" width="5.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="878.97" y="431.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (13,794,910,813 samples, 0.18%)</title><rect x="890.9" y="453" width="2.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="893.88" y="463.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (14,691,327,506 samples, 0.19%)</title><rect x="809.2" y="229" width="2.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="812.24" y="239.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::remove (108,416,938,989 samples, 1.42%)</title><rect x="794.8" y="437" width="16.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="797.81" y="447.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (8,370,663,083 samples, 0.11%)</title><rect x="810.2" y="197" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="813.21" y="207.5" ></text>
</g>
<g >
<title>[unknown] (785,329,555 samples, 0.01%)</title><rect x="1140.3" y="437" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1143.30" y="447.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::setRightChild (703,326,289 samples, 0.01%)</title><rect x="798.9" y="389" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="801.88" y="399.5" ></text>
</g>
<g >
<title>[unknown] (13,619,665,335 samples, 0.18%)</title><rect x="1049.6" y="389" width="2.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1052.56" y="399.5" ></text>
</g>
<g >
<title>[unknown] (14,270,721,328 samples, 0.19%)</title><rect x="1018.3" y="373" width="2.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1021.26" y="383.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::getData (43,867,429,314 samples, 0.57%)</title><rect x="444.5" y="421" width="6.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="447.49" y="431.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (24,033,986,385 samples, 0.31%)</title><rect x="807.8" y="261" width="3.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="810.80" y="271.5" ></text>
</g>
<g >
<title>[unknown] (7,948,473,948 samples, 0.10%)</title><rect x="1019.2" y="277" width="1.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1022.24" y="287.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (37,137,483,464 samples, 0.48%)</title><rect x="805.8" y="293" width="5.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="808.78" y="303.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;int&gt;::operator (18,520,052,610 samples, 0.24%)</title><rect x="1173.5" y="453" width="2.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1176.48" y="463.5" ></text>
</g>
<g >
<title>[libjemalloc.so.2] (10,599,198,451 samples, 0.14%)</title><rect x="1176.3" y="469" width="1.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1179.33" y="479.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2,179,752,024 samples, 0.03%)</title><rect x="1179.0" y="469" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1182.03" y="479.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (6,160,529,769 samples, 0.08%)</title><rect x="810.6" y="181" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="813.55" y="191.5" ></text>
</g>
<g >
<title>dallocx (4,776,461,932 samples, 0.06%)</title><rect x="1179.4" y="469" width="0.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1182.42" y="479.5" ></text>
</g>
<g >
<title>[unknown] (14,966,865,084 samples, 0.20%)</title><rect x="1018.2" y="405" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1021.16" y="415.5" ></text>
</g>
<g >
<title>[unknown] (11,652,911,044 samples, 0.15%)</title><rect x="1018.7" y="341" width="1.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1021.67" y="351.5" ></text>
</g>
<g >
<title>umf_alloc (4,766,852,245 samples, 0.06%)</title><rect x="1022.8" y="421" width="0.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1025.82" y="431.5" ></text>
</g>
<g >
<title>[unknown] (2,739,435,566 samples, 0.04%)</title><rect x="444.1" y="341" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="447.06" y="351.5" ></text>
</g>
<g >
<title>[unknown] (2,709,168,814 samples, 0.04%)</title><rect x="782.9" y="341" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="785.89" y="351.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::remove (665,602,168 samples, 0.01%)</title><rect x="948.8" y="453" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="951.81" y="463.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::operator (1,758,622,966 samples, 0.02%)</title><rect x="1059.7" y="421" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1062.75" y="431.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::setLeftChild (1,977,191,339 samples, 0.03%)</title><rect x="795.7" y="421" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="798.75" y="431.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::setRightChild (986,711,175 samples, 0.01%)</title><rect x="945.3" y="453" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="948.28" y="463.5" ></text>
</g>
<g >
<title>[unknown] (793,606,444 samples, 0.01%)</title><rect x="1020.3" y="245" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1023.34" y="255.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (1,190,374,964 samples, 0.02%)</title><rect x="473.9" y="69" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="476.88" y="79.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 0, NumaAllocator, void&gt;::setRightChild (728,558,133 samples, 0.01%)</title><rect x="969.3" y="437" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="972.28" y="447.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::setLeftChild (1,818,561,086 samples, 0.02%)</title><rect x="945.5" y="453" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="948.55" y="463.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getRightChild (1,494,996,006 samples, 0.02%)</title><rect x="1054.1" y="421" width="0.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1057.09" y="431.5" ></text>
</g>
<g >
<title>[unknown] (6,744,545,607 samples, 0.09%)</title><rect x="1178.0" y="405" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1180.97" y="415.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (336,403,207,825 samples, 4.39%)</title><rect x="893.0" y="453" width="51.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="896.00" y="463.5" >clock..</text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (2,983,399,532 samples, 0.04%)</title><rect x="473.6" y="133" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="476.61" y="143.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::deleteHelper (87,755,176,079 samples, 1.15%)</title><rect x="798.0" y="405" width="13.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="800.99" y="415.5" ></text>
</g>
<g >
<title>[unknown] (1,856,623,820 samples, 0.02%)</title><rect x="1179.1" y="453" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1182.07" y="463.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 1, NumaAllocator, void&gt;::insert (2,274,671,824 samples, 0.03%)</title><rect x="947.6" y="453" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="950.63" y="463.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (66,298,572,775 samples, 0.87%)</title><rect x="463.9" y="357" width="10.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="466.86" y="367.5" ></text>
</g>
<g >
<title>[unknown] (795,759,912 samples, 0.01%)</title><rect x="1179.2" y="389" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1182.24" y="399.5" ></text>
</g>
<g >
<title>__GI___lll_lock_wait (51,723,347,194 samples, 0.68%)</title><rect x="873.2" y="453" width="8.0" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="876.23" y="463.5" ></text>
</g>
<g >
<title>[unknown] (6,744,545,607 samples, 0.09%)</title><rect x="1178.0" y="229" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1180.97" y="239.5" ></text>
</g>
<g >
<title>[unknown] (3,175,754,256 samples, 0.04%)</title><rect x="444.0" y="405" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="447.00" y="415.5" ></text>
</g>
<g >
<title>[unknown] (894,823,709 samples, 0.01%)</title><rect x="1179.2" y="405" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1182.22" y="415.5" ></text>
</g>
<g >
<title>[unknown] (23,367,585,190 samples, 0.30%)</title><rect x="887.3" y="389" width="3.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="890.28" y="399.5" ></text>
</g>
<g >
<title>[unknown] (9,068,232,654 samples, 0.12%)</title><rect x="1050.3" y="293" width="1.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1053.26" y="303.5" ></text>
</g>
<g >
<title>mallocx (5,673,738,759 samples, 0.07%)</title><rect x="1051.7" y="421" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1054.66" y="431.5" ></text>
</g>
<g >
<title>[unknown] (4,185,113,631 samples, 0.05%)</title><rect x="880.6" y="229" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="883.56" y="239.5" ></text>
</g>
<g >
<title>[unknown] (961,274,858 samples, 0.01%)</title><rect x="1179.2" y="421" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1182.21" y="431.5" ></text>
</g>
<g >
<title>[unknown] (14,214,979,300 samples, 0.19%)</title><rect x="888.7" y="341" width="2.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="891.69" y="351.5" ></text>
</g>
<g >
<title>[unknown] (6,855,397,838 samples, 0.09%)</title><rect x="1019.4" y="261" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1022.41" y="271.5" ></text>
</g>
<g >
<title>[unknown] (18,534,927,274 samples, 0.24%)</title><rect x="1048.8" y="421" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1051.80" y="431.5" ></text>
</g>
<g >
<title>[unknown] (904,616,658 samples, 0.01%)</title><rect x="444.3" y="261" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="447.35" y="271.5" ></text>
</g>
<g >
<title>[unknown] (27,748,257,222 samples, 0.36%)</title><rect x="876.9" y="341" width="4.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="879.93" y="351.5" ></text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::remove (106,981,537,357 samples, 1.40%)</title><rect x="457.6" y="437" width="16.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="460.59" y="447.5" ></text>
</g>
<g >
<title>[unknown] (669,419,958 samples, 0.01%)</title><rect x="1140.3" y="373" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1143.31" y="383.5" ></text>
</g>
<g >
<title>DSExample (7,661,945,674,717 samples, 100.00%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >DSExample</text>
</g>
<g >
<title>numa&lt;BinarySearchTree, 0, NumaAllocator, void&gt;::deleteHelper (10,578,114,991 samples, 0.14%)</title><rect x="472.4" y="213" width="1.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="475.44" y="223.5" ></text>
</g>
<g >
<title>numa&lt;BinaryNode, 1, NumaAllocator, void&gt;::getRightChild (39,795,550,387 samples, 0.52%)</title><rect x="983.1" y="437" width="6.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="986.08" y="447.5" ></text>
</g>
<g >
<title>[unknown] (1,592,086,660 samples, 0.02%)</title><rect x="12.8" y="373" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.80" y="383.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::operator (158,513,346,334 samples, 2.07%)</title><rect x="811.5" y="437" width="24.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="814.50" y="447.5" >s..</text>
</g>
<g >
<title>[unknown] (14,746,593,018 samples, 0.19%)</title><rect x="878.9" y="277" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="881.93" y="287.5" ></text>
</g>
</g>
</svg>
